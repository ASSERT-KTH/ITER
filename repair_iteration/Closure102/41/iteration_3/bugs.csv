bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  n.removeChild(c);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  n.removeChild(c);  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	n.removeChild(c);  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
2	[BUG]  [BUGGY]  Context.report(JSError.make(c,  n,  INVALID_INIT_ERROR,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  n,  INVALID_INIT_ERROR,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  n,  INVALID_INIT_ERROR,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
3	[BUG]  [BUGGY]  Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
4	[BUG]  [BUGGY]  Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  n,  MAKE_LOCAL_NAMES_UNIQUE));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
5	[BUG]  [BUGGY]  switch(c.getString(),  insertBefore,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  insertBefore,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  insertBefore,  beforeParent)  {	  switch(c.getString(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
6	[BUG]  [BUGGY]  switch(c.getString(),  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  insertBeforeParent)  {	  switch(c.getString(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
7	[BUG]  [BUGGY]  switch(c.getString(),  insertBefore,  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  insertBefore,  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  insertBefore,  before)  {	  switch(c.getString(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
8	[BUG]  [BUGGY]  if(insertBefore  ==  null)c.removeChild(insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore  ==  null)c.removeChild(insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore  ==  null)c.removeChild(insertBefore);  break;	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	78	None	replace
9	[BUG]  [BUGGY]  if(c!=  null)c.removeChild(insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c!=  null)c.removeChild(insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c!=  null)c.removeChild(insertBefore);  break;	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	78	None	replace
10	[BUG]  [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)c.removeChild(insertBeforeParent);  break;	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	78	None	replace
11	[BUG]  [BUGGY]  Node  c  =  beforeParent.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent.getLastChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent.getLastChild();	  Node    c    =    insertBeforeParent.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
12	[BUG]  [BUGGY]  Node  c  =  next.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next.getLastChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next.getLastChild();	  Node    c    =    insertBeforeParent.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
13	[BUG]  [BUGGY]  c.replaceChild(n,  insertBefore,  beforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  insertBefore,  beforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  insertBefore,  beforeParent);  break;	  c.replaceChild(n,    before,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
14	[BUG]  [BUGGY]  Node  c  =  next,  beforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next,  beforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next,  beforeParent.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
15	[BUG]  [BUGGY]  Node  c  =  before,  beforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  beforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  beforeParent.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
16	[BUG]  [BUGGY]  Node  c  =  beforeParent,  beforeBefore.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  beforeBefore.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  beforeBefore.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
17	[BUG]  [BUGGY]  Node  c  =  beforeParent,  insertBefore.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  insertBefore.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  insertBefore.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
18	[BUG]  [BUGGY]  Node  c  =  first,  beforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  first,  beforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  first,  beforeParent.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
19	[BUG]  [BUGGY]  switch(c.getType(),  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  insertBeforeParent)  {	  switch(c.getType(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
20	[BUG]  [BUGGY]  switch(c.getType(),  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  beforeParent)  {	  switch(c.getType(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
21	[BUG]  [BUGGY]  switch(c.getType(),  insertBefore,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  insertBefore,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  insertBefore,  beforeParent)  {	  switch(c.getType(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
22	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.FUNCTION)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
23	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  ||  c.getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  ||  c.getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  ||  c.getType()!=  Token.FUNCTION)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
24	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  ||  c.getType()  ==  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  ||  c.getType()  ==  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  ||  c.getType()  ==  Token.FUNCTION)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
25	[BUG]  [BUGGY]  Switch(c.getType(),  insertBefore,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  insertBefore,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  insertBefore,  beforeParent)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
26	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  false)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  false)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBeforeParent,  false)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
27	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  arguments)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  arguments)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBeforeParent,  arguments)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
28	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
29	[BUG]  [BUGGY]  switch(c.getFirstChild().getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType()!=  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
30	[BUG]  [BUGGY]  switch(c.getFirstChild().getType()  ==  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType()  ==  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType()  ==  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
31	[BUG]  [BUGGY]  switch(c.getFirstChild().getType()  >>  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType()  >>  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType()  >>  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
32	[BUG]  [BUGGY]  switch(c.getFirstChild().getType()  >=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType()  >=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType()  >=  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
33	[BUG]  [BUGGY]  switch(c.getFirstChild().getType()  [Delete]  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType()  [Delete]  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType()  [Delete]  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
34	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBefore)  {	  switch(c.getType(),    before,    init)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	76	None	replace
35	[BUG]  [BUGGY]  Node  c  =  c.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  c.getParent();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  c.getParent();	  Node    c    =    beforeParent.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	62	None	replace
36	[BUG]  [BUGGY]  Node  c  =  next,  beforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next,  beforeParent.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next,  beforeParent.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
37	[BUG]  [BUGGY]  Node  c  =  before,  beforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  beforeParent.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  beforeParent.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
38	[BUG]  [BUGGY]  Node  c  =  beforeParent,  insertBefore.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  insertBefore.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  insertBefore.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
39	[BUG]  [BUGGY]  Node  c  =  beforeParent,  beforeBefore.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  beforeBefore.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  beforeBefore.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
40	[BUG]  [BUGGY]  Node  c  =  first,  beforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  first,  beforeParent.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  first,  beforeParent.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
41	[BUG]  [BUGGY]  c.removeChild(n,  before);  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(n,  before);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(n,  before);	  c.removeChild(insertBefore,    before);    	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	replace
42	[BUG]  [BUGGY]  c.removeChild(insertBefore,  before,  insertBeforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(insertBefore,  before,  insertBeforeParent);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(insertBefore,  before,  insertBeforeParent);	  c.removeChild(insertBefore,    before);    	non-compiled	[CE]  reached  end  of  file  while  parsing	50	None	replace
43	[BUG]  [BUGGY]  if(c!=  null)c.removeChild(insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c!=  null)c.removeChild(insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c!=  null)c.removeChild(insertBeforeParent);  break;	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
44	[BUG]  [BUGGY]  if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
45	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
46	[BUG]  [BUGGY]  c.removeChild(n,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(n,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(n,  insertBefore);  break;	  c.removeChild(insertBefore,    insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
47	[BUG]  [BUGGY]  c.removeChild(n,  insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(n,  insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(n,  insertBeforeParent);  break;	  c.removeChild(insertBefore,    insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
48	[BUG]  [BUGGY]  if(insertBefore  ==  null)  {  c.removeChild(insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore  ==  null)  {  c.removeChild(insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore  ==  null)  {  c.removeChild(insertBefore);  break;  }	  if(insertBefore!=    null)    {    c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
49	[BUG]  [BUGGY]  Node  insertBeforeParent  =  insertBefore.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  insertBeforeParent  =  insertBefore.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  insertBeforeParent  =  insertBefore.getNext();	  if(insertBefore!=    null)    {    c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
50	[BUG]  [BUGGY]  if(insertBeforeParent  ==  null)  {  c.removeChild(insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent  ==  null)  {  c.removeChild(insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent  ==  null)  {  c.removeChild(insertBeforeParent);  break;  }	  if(insertBeforeParent!=    null)    {    c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	72	None	replace
51	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore);  break;  }	  if(insertBeforeParent!=    null)    {    c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	72	None	replace
52	[BUG]  [BUGGY]  Node  c  =  next,  insertBeforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next,  insertBeforeParent.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next,  insertBeforeParent.getFirstChild();	  Node    c    =    before,    insertBeforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
53	[BUG]  [BUGGY]  Node  c  =  before,  insertBeforeParent.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  insertBeforeParent.getLastChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  insertBeforeParent.getLastChild();	  Node    c    =    before,    insertBeforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
54	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  false)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  false)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBeforeParent,  false)  {	  switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
55	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  arguments)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  arguments)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBeforeParent,  arguments)  {	  switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
56	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  next)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  next)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBeforeParent,  next)  {	  switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
57	[BUG]  [BUGGY]  switch(c.getType(),  before,  extractForInitializer)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  extractForInitializer)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  extractForInitializer)  {	  switch(c.getType(),    before,    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
58	[BUG]  [BUGGY]  switch(c.getType(),  before,  next)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  next)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  next)  {	  switch(c.getType(),    before,    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
59	[BUG]  [BUGGY]  Switch(c.getType()  ==  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType()  ==  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType()  ==  Token.LABEL)  {	  switch(c.getType()    >>    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	57	None	replace
60	[BUG]  [BUGGY]  if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent  ==  null)c.removeChild(insertBeforeParent);  break;  }	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	replace
61	[BUG]  [BUGGY]  if(c!=  null)c.removeChild(insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c!=  null)c.removeChild(insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c!=  null)c.removeChild(insertBeforeParent);  break;  }	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	replace
62	[BUG]  [BUGGY]  switch(c.getString(),  next)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  next)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  next)  {	  switch(c.getString(),    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
63	[BUG]  [BUGGY]  Node  c  =  first.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  first.getLastChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  first.getLastChild();	  Node    c    =    first.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	65	None	replace
64	[BUG]  [BUGGY]  Node  beforeParent  =  next.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  next.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  next.getNext();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
65	[BUG]  [BUGGY]  Node  beforeParent  =  n.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  n.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  n.getNext();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
66	[BUG]  [BUGGY]  Node  beforeParent  =  c.getFirstChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  c.getFirstChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  c.getFirstChild();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
67	[BUG]  [BUGGY]  Node  beforeParent  =  c.getLastChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  c.getLastChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  c.getLastChild();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
68	[BUG]  [BUGGY]  if(insertBefore  ==  null)c.removeChild(insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore  ==  null)c.removeChild(insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore  ==  null)c.removeChild(insertBefore);  break;  }	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
69	[BUG]  [BUGGY]  if(c!=  null)c.removeChild(insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c!=  null)c.removeChild(insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c!=  null)c.removeChild(insertBefore);  break;  }	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
70	[BUG]  [BUGGY]  switch(n.getLastChild().getType())  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getLastChild().getType())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getLastChild().getType())  {	  switch(c.getLastChild().getType())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
71	[BUG]  [BUGGY]  switch(c.getLastChild().getType(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild().getType(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild().getType(),  before)  {	  switch(c.getLastChild().getType())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
72	[BUG]  [BUGGY]  Switch(c.getFirstChild().getType())  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild().getType())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild().getType())  {	  switch(c.getLastChild().getType())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	23	None	replace
73	[BUG]  [BUGGY]  switch(c.getType(),  next,  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  next,  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  next,  insertBefore)  {	  switch(c.getType(),    before,    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
74	[BUG]  [BUGGY]  Switch(c.getType()  ==  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType()  ==  Token.VAR)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType()  ==  Token.VAR)  {	  switch(c.getType()    >>    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	replace
75	[BUG]  [BUGGY]  c.replaceChild(n,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  insertBefore);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  insertBefore);	  c.removeChild(n);    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	replace
76	[BUG]  [BUGGY]  switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {	  switch(c.getFirstChild().getType(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	24	None	replace
77	[BUG]  [BUGGY]  switch(n.getFirstChild().getType(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild().getType(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild().getType(),  before)  {	  switch(c.getFirstChild().getType(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	24	None	replace
78	[BUG]  [BUGGY]  switch(c.getFirstChild().getType(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType(),  insertBefore)  {	  switch(c.getFirstChild().getType(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	24	None	replace
79	[BUG]  [BUGGY]  Switch(c.getFirstChild())  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild())  {	  Switch(c.getLastChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
80	[BUG]  [BUGGY]  Switch(c.getLastChild(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getLastChild(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getLastChild(),  before)  {	  Switch(c.getLastChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
81	[BUG]  [BUGGY]  Switch(n.getLastChild())  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(n.getLastChild())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(n.getLastChild())  {	  Switch(c.getLastChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
82	[BUG]  [BUGGY]  Switch(c.getLastChild(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getLastChild(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getLastChild(),  insertBefore)  {	  Switch(c.getLastChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
83	[BUG]  [BUGGY]  Switch(c.getLastChild(),  next)  {  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getLastChild(),  next)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getLastChild(),  next)  {	  Switch(c.getLastChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	22	None	replace
84	[BUG]  [BUGGY]  switch(n.getLastChild().getNext())  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getLastChild().getNext())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getLastChild().getNext())  {	  switch(c.getLastChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
85	[BUG]  [BUGGY]  switch(c.getLastChild().getNext(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild().getNext(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild().getNext(),  before)  {	  switch(c.getLastChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	28	None	replace
86	[BUG]  [BUGGY]  switch(c.getString(),  before,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  before,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  before,  insertBeforeParent)  {	  switch(c.getString(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	60	None	replace
87	[BUG]  [BUGGY]  c.replaceChild(n,  before,  insertBeforeParent,  newStatement);  break;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  before,  insertBeforeParent,  newStatement);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  before,  insertBeforeParent,  newStatement);  break;	  c.replaceChild(n,    before,    insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
88	[BUG]  [BUGGY]  Node  next  =  n.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  n.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  n.getNext();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
89	[BUG]  [BUGGY]  Node  next  =  beforeParent.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  beforeParent.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  beforeParent.getNext();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
90	[BUG]  [BUGGY]  Node  next  =  insertBefore.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  insertBefore.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  insertBefore.getNext();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
91	[BUG]  [BUGGY]  Node  next  =  c.getParent();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  c.getParent();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  c.getParent();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
92	[BUG]  [BUGGY]  Node  c  =  insertBefore.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  insertBefore.getLastChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  insertBefore.getLastChild();	  Node    c    =    n.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
93	[BUG]  [BUGGY]  Node  c  =  next,  insertBeforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next,  insertBeforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next,  insertBeforeParent.getNext();	  Node    c    =    before,    insertBeforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
94	[BUG]  [BUGGY]  if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(n,  before);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(n,  before);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(n,  before);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
95	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)  {  c.replaceChild(before,  n);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)  {  c.replaceChild(before,  n);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)  {  c.replaceChild(before,  n);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
96	[BUG]  [BUGGY]  if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(before,  n);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(before,  n);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent.getType()  ==  Token.FUNCTION)  {  c.replaceChild(before,  n);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
97	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
98	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()  ==  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()  ==  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.VAR  ||  c.getType()  ==  Token.LABEL)  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
99	[BUG]  [BUGGY]  switch(c.getType()  <  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  <  Token.VAR)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  <  Token.VAR)  {	  switch(c.getType()    |    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
100	[BUG]  [BUGGY]  switch(c.getType()  >  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  >  Token.VAR)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  >  Token.VAR)  {	  switch(c.getType()    |    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
101	[BUG]  [BUGGY]  switch(n.getLastChild())  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getLastChild())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getLastChild())  {	  switch(n.getFirstChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
102	[BUG]  [BUGGY]  switch(n.getFirstChild(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild(),  before)  {	  switch(n.getFirstChild())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
103	[BUG]  [BUGGY]  switch(c.getFirstChild().getNext(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getNext(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getNext(),  insertBefore)  {	  switch(c.getFirstChild().getNext(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
104	[BUG]  [BUGGY]  switch(n.getFirstChild().getNext(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild().getNext(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild().getNext(),  before)  {	  switch(c.getFirstChild().getNext(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
105	[BUG]  [BUGGY]  switch(c.getFirstChild().getNext(),  before,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getNext(),  before,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getNext(),  before,  insertBeforeParent)  {	  switch(c.getFirstChild().getNext(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
106	[BUG]  [BUGGY]  switch(c.getFirstChild().getNext(),  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getNext(),  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getNext(),  insertBeforeParent)  {	  switch(c.getFirstChild().getNext(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
107	[BUG]  [BUGGY]  switch(c.getLastChild().getString())  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild().getString())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild().getString())  {	  switch(c.getFirstChild().getString())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
108	[BUG]  [BUGGY]  switch(n.getFirstChild().getString())  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild().getString())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild().getString())  {	  switch(c.getFirstChild().getString())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
109	[BUG]  [BUGGY]  switch(c.getFirstChild().getString(),  arguments)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getString(),  arguments)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getString(),  arguments)  {	  switch(c.getFirstChild().getString())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
110	[BUG]  [BUGGY]  c.removeChild(insertBeforeParent,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(insertBeforeParent,  insertBefore);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(insertBeforeParent,  insertBefore);	  c.removeChild(insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
111	[BUG]  [BUGGY]  switch(c.getLastChild(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild(),  before)  {	  switch(c.getFirstChild(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
112	[BUG]  [BUGGY]  switch(c.getFirstChild(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild(),  insertBefore)  {	  switch(c.getFirstChild(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
113	[BUG]  [BUGGY]  switch(c.getFirstChild(),  before,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild(),  before,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild(),  before,  insertBeforeParent)  {	  switch(c.getFirstChild(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
114	[BUG]  [BUGGY]  switch(c.getFirstChild(),  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild(),  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild(),  insertBeforeParent)  {	  switch(c.getFirstChild(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
115	[BUG]  [BUGGY]  Node  beforeParent  =  n.getLastChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  n.getLastChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  n.getLastChild();  break;	  Node    beforeParent    =    n.getFirstChild();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
116	[BUG]  [BUGGY]  Node  beforeParent  =  next.getFirstChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  next.getFirstChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  next.getFirstChild();  break;	  Node    beforeParent    =    n.getFirstChild();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
117	[BUG]  [BUGGY]  Node  c  =  insertBefore.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  insertBefore.getParent();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  insertBefore.getParent();	  Node    c    =    next.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
118	[BUG]  [BUGGY]  Node  c  =  next.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  next.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  next.getNext();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
119	[BUG]  [BUGGY]  Node  c  =  beforeParent.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent.getNext();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
120	[BUG]  [BUGGY]  Node  c  =  insertBefore.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  insertBefore.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  insertBefore.getNext();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
121	[BUG]  [BUGGY]  Node  c  =  first.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  first.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  first.getNext();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
122	[BUG]  [BUGGY]  switch(c.getType()  <  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  <  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  <  Token.LABEL)  {	  switch(c.getType()    |    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
123	[BUG]  [BUGGY]  switch(c.getType()  >  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  >  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  >  Token.LABEL)  {	  switch(c.getType()    |    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
124	[BUG]  [BUGGY]  c.removeChild(n,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(n,  insertBefore);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(n,  insertBefore);	  c.removeChild(insertBefore,    insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
125	[BUG]  [BUGGY]  c.removeChild(n,  insertBeforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(n,  insertBeforeParent);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(n,  insertBeforeParent);	  c.removeChild(insertBefore,    insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
126	[BUG]  [BUGGY]  c.removeChild(insertBefore,  next);  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(insertBefore,  next);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(insertBefore,  next);	  c.removeChild(insertBefore,    insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
127	[BUG]  [BUGGY]  Switch(c.getLastChild().getNext())  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getLastChild().getNext())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getLastChild().getNext())  {	  Switch(c.getFirstChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
128	[BUG]  [BUGGY]  Switch(c.getFirstChild().getNext(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild().getNext(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild().getNext(),  insertBefore)  {	  Switch(c.getFirstChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
129	[BUG]  [BUGGY]  Switch(c.getFirstChild().getNext(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild().getNext(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild().getNext(),  before)  {	  Switch(c.getFirstChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
130	[BUG]  [BUGGY]  Switch(n.getFirstChild().getNext())  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(n.getFirstChild().getNext())  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(n.getFirstChild().getNext())  {	  Switch(c.getFirstChild().getNext())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	87	None	replace
131	[BUG]  [BUGGY]  switch(c.getLastChild().getType(),  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild().getType(),  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild().getType(),  beforeParent)  {	  switch(c.getFirstChild().getType(),    beforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
132	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  &&  before)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
133	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  beforeParent!=  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  beforeParent!=  null)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  &&  beforeParent!=  null)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
134	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&  before)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
135	[BUG]  [BUGGY]  c.removeChild(before,  insertBefore);  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  insertBefore);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  insertBefore);	  c.removeChild(insertBefore,    insertBefore);    	non-compiled	[CE]  reached  end  of  file  while  parsing	32	None	replace
136	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(before);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)c.removeChild(before);  break;	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	84	None	replace
137	[BUG]  [BUGGY]  Node  c  =  before,  insertBeforeParent.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  insertBeforeParent.getParent();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  insertBeforeParent.getParent();	  Node    c    =    insertBeforeParent.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	replace
138	[BUG]  [BUGGY]  Node  c  =  beforeBeforeParent.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeBeforeParent.getParent();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeBeforeParent.getParent();	  Node    c    =    insertBeforeParent.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	replace
139	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }	  if(insertBeforeParent!=    null)    {    c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	72	None	replace
140	[BUG]  [BUGGY]  c.replaceChild(before,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(before,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(before,  insertBefore);  break;	  c.replaceChild(n,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
141	[BUG]  [BUGGY]  c.removeChild(before,  insertBeforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  insertBeforeParent);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  insertBeforeParent);	  c.removeChild(insertBefore,    insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	30	None	replace
142	[BUG]  [BUGGY]  Node  c  =  beforeParent,  before.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  before.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  before.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
143	[BUG]  [BUGGY]  Node  c  =  beforeBefore,  beforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeBefore,  beforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeBefore,  beforeParent.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
144	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBefore2)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBefore2)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBefore2)  {	  switch(c.getType(),    before,    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
145	[BUG]  [BUGGY]  Node  c  =  beforeParent,  before.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  before.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  before.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
146	[BUG]  [BUGGY]  Switch(c.getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType()!=  Token.LABEL)  {	  switch(c.getType()    }    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
147	[BUG]  [BUGGY]  switch(c.getType()  [Delete]  &  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  [Delete]  &  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  [Delete]  &  Token.LABEL)  {	  switch(c.getType()    }    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
148	[BUG]  [BUGGY]  c.removeChild(after,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(after,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(after,  insertBefore);  break;	  c.removeChild(insertBefore,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	36	None	replace
149	[BUG]  [BUGGY]  Node  beforeParent  =  n.getLastChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  n.getLastChild();  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  n.getLastChild();	  Node    beforeParent    =    n.getFirstChild();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	66	None	replace
150	[BUG]  [BUGGY]  Switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild().getType(),  before,  insertBeforeParent)  {	  switch(c.getFirstChild().getType(),    beforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
151	[BUG]  [BUGGY]  switch(n.getFirstChild().getType(),  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild().getType(),  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild().getType(),  beforeParent)  {	  switch(c.getFirstChild().getType(),    beforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
152	[BUG]  [BUGGY]  c.removeChild(before,  insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  insertBeforeParent);  break;	  c.removeChild(before,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
153	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBefore,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBefore,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBefore,  beforeParent)  {	  switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
154	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  c,  before,  insertBefore,  beforeParent));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(sourceName,  c,  before,  insertBefore,  beforeParent));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(sourceName,  c,  before,  insertBefore,  beforeParent));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
155	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  before,  insertBefore,  beforeParent));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(sourceName,  n,  before,  insertBefore,  beforeParent));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(sourceName,  n,  before,  insertBefore,  beforeParent));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
156	[BUG]  [BUGGY]  Context.report(JSError.make(n,  before,  insertBefore,  beforeParent));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(n,  before,  insertBefore,  beforeParent));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(n,  before,  insertBefore,  beforeParent));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
157	[BUG]  [BUGGY]  Context.report(JSError.make(c,  before,  insertBefore,  beforeParent));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  before,  insertBefore,  beforeParent));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  before,  insertBefore,  beforeParent));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
158	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)c.removeChild(insertBefore);  break;  }	  if(insertBeforeParent!=    null)c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	83	None	replace
159	[BUG]  [BUGGY]  c.removeChild(before);  [CE]  reached  end  of  file  while  parsing  [FE]                            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before);	  c.removeChild(n);    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	replace
160	[BUG]  [BUGGY]  c.replaceChild(n,  before);  [CE]  reached  end  of  file  while  parsing  [FE]                              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  before);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  before);	  c.removeChild(n);    	non-compiled	[CE]  reached  end  of  file  while  parsing	33	None	replace
161	[BUG]  [BUGGY]  switch(c.getType()  [Delete]  &  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  [Delete]  &  Token.VAR)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  [Delete]  &  Token.VAR)  {	  switch(c.getType()    }    &    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
162	[BUG]  [BUGGY]  Switch(c.getType()!=  Token.VAR)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType()!=  Token.VAR)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType()!=  Token.VAR)  {	  switch(c.getType()    }    &    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
163	[BUG]  [BUGGY]  c.removeChild(first,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(first,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(first,  insertBefore);  break;	  c.removeChild(insertBefore,    insertBeforeParent);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	34	None	replace
164	[BUG]  [BUGGY]  switch(n.getFirstChild().getType()  &  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(n.getFirstChild().getType()  &  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(n.getFirstChild().getType()  &  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
165	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBefore,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBefore,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBefore,  beforeParent)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
166	[BUG]  [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getType(),  before,  insertBeforeParent,  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getType(),  before,  insertBeforeParent,  before)  {	  Switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
167	[BUG]  [BUGGY]  c.replaceChild(before,  before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(before,  before);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(before,  before);  break;	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
168	[BUG]  [BUGGY]  switch(c.getLastChild(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getLastChild(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getLastChild(),  insertBefore)  {	  switch(c.getString(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	85	None	replace
169	[BUG]  [BUGGY]  switch(c.getFirstChild().getType(),  before,  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType(),  before,  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType(),  before,  insertBefore)  {	  switch(c.getType(),    before,    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
170	[BUG]  [BUGGY]  if(insertBefore!=  null)c.removeChild(before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)c.removeChild(before);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)c.removeChild(before);  break;	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	78	None	replace
171	[BUG]  [BUGGY]  Node  next  =  c.getNext()  +  insertBefore;  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  c.getNext()  +  insertBefore;  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  c.getNext()  +  insertBefore;  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
172	[BUG]  [BUGGY]  Node  next  =  c.getPrevious();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  c.getPrevious();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  c.getPrevious();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
173	[BUG]  [BUGGY]  Node  next  =  before.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  before.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  before.getNext();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
174	[BUG]  [BUGGY]  Node  c  =  before.getParent();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before.getParent();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before.getParent();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
175	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.NAME)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.NAME)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.NAME)  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
176	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.VAR  &&  beforeParent!=  null)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.VAR  &&  beforeParent!=  null)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.VAR  &&  beforeParent!=  null)  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkState(insertBefore!=  null);  c.removeChild(insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Preconditions.checkState(insertBefore!=  null);  c.removeChild(insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Preconditions.checkState(insertBefore!=  null);  c.removeChild(insertBefore);  break;	  if(insertBefore!=    null)    {    c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
178	[BUG]  [BUGGY]  if(insertBefore!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)  {  c.removeChild(insertBefore,  insertBeforeParent);  break;  }	  if(insertBefore!=    null)    {    c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
179	[BUG]  [BUGGY]  switch(c.getFirstChild(),  arguments)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild(),  arguments)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild(),  arguments)  {	  switch(c.getString(),    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
180	[BUG]  [BUGGY]  Node  beforeParent  =  c.getPrevious();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  c.getPrevious();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  c.getPrevious();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
181	[BUG]  [BUGGY]  c.removeChild(before,  n);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  n);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  n);  break;	  c.removeChild(n,    before);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	replace
182	[BUG]  [BUGGY]  c.removeChild(before,  before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  before);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  before);  break;	  c.removeChild(n,    before);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	35	None	replace
183	[BUG]  [BUGGY]  switch(c.getNext(),  insertBefore)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getNext(),  insertBefore)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getNext(),  insertBefore)  {	  switch(c.getType(),    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
184	[BUG]  [BUGGY]  switch(c.getFirstChild().getString(),  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getString(),  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getString(),  before)  {	  switch(c.getFirstChild().getString())    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	86	None	replace
185	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBefore),  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBefore),  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBefore),  {	  switch(c.getType(),    before,    init)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	76	None	replace
186	[BUG]  [BUGGY]  c.replaceChild(n,  before,  beforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  before,  beforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  before,  beforeParent);  break;	  c.replaceChild(n,    before,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
187	[BUG]  [BUGGY]  c.removeChild(before,  next);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(before,  next);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(before,  next);  break;	  c.removeChild(insertBefore,    next);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
188	[BUG]  [BUGGY]  c.removeChild(after);  break;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(after);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(after);  break;	  c.removeChild(n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
189	[BUG]  [BUGGY]  switch(c.getString(),  before,  init)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getString(),  before,  init)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getString(),  before,  init)  {	  switch(c.getString(),    before)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	60	None	replace
190	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBeforeParent);  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)c.removeChild(insertBeforeParent);  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)c.removeChild(insertBeforeParent);	  c.removeChild(insertBeforeParent);    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
191	[BUG]  [BUGGY]  c.removeChild(next,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(next,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(next,  insertBefore);  break;	  c.removeChild(insertBefore,    next);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
192	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    >=    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	replace
193	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    >=    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	replace
194	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {	  switch(c.getType()    >=    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	replace
195	[BUG]  [BUGGY]  Node  c  =  before,  insertBeforeParent.cloneTree();  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  insertBeforeParent.cloneTree();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  insertBeforeParent.cloneTree();	  Node    c    =    before,    insertBeforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	40	None	replace
196	[BUG]  [BUGGY]  Node  c  =  n.getNext();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  n.getNext();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  n.getNext();  break;	  Node    c    =    before.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
197	[BUG]  [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  insertBeforeParent,  constantMap)  {	  switch(c.getType(),    before,    insertBeforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
198	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.VAR  &&!NodeUtil.isForIn(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.VAR  &&!NodeUtil.isForIn(c))  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.VAR  &&!NodeUtil.isForIn(c))  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
199	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.VAR  ||  c.getType()!=  Token.LABEL)  {	  switch(c.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
200	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&!NodeUtil.isForIn(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&!NodeUtil.isForIn(c))  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  &&!NodeUtil.isForIn(c))  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
201	[BUG]  [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  n!=  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()  ==  Token.LABEL  &&  n!=  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()  ==  Token.LABEL  &&  n!=  beforeParent)  {	  switch(c.getType()    ==    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
202	[BUG]  [BUGGY]  Switch(c.getFirstChild().getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Switch(c.getFirstChild().getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Switch(c.getFirstChild().getType()!=  Token.LABEL)  {	  switch(c.getFirstChild().getType()    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
203	[BUG]  [BUGGY]  c.replaceChild(n,  insertBefore,  before);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.replaceChild(n,  insertBefore,  before);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.replaceChild(n,  insertBefore,  before);  break;	  c.replaceChild(n,    before,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
204	[BUG]  [BUGGY]  Node  c  =  beforeParent,  beforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  beforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  beforeParent.getNext();	  Node    c    =    insertBefore,    beforeParent.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	79	None	replace
205	[BUG]  [BUGGY]  Node  c  =  first,  insertBeforeParent.getNext();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  first,  insertBeforeParent.getNext();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  first,  insertBeforeParent.getNext();	  Node    c    =    first.getNext();    	non-compiled	[CE]  reached  end  of  file  while  parsing	82	None	replace
206	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getChildCount()  >  1)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getChildCount()  >  1)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&  c.getChildCount()  >  1)  {	  switch(c.getType()    [Delete]    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
207	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.FUNCTION)  {	  switch(c.getType()    [Delete]    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
208	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  ||  c.getType()!=  Token.LABEL)  {	  switch(c.getType()    [Delete]    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
209	[BUG]  [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;  }	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	77	None	replace
210	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    }    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
211	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c))  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&!NodeUtil.isForIn(c))  {	  switch(c.getType()    }    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
212	[BUG]  [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.NAME)  {  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.LABEL  &&  n.getFirstChild().getType()!=  Token.NAME)  {	  switch(c.getType()    }    &    Token.LABEL)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	12	None	replace
213	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c))  {  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c))  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c))  {	  switch(c.getType()    }    &    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
214	[BUG]  [BUGGY]  switch(c.getFirstChild().getType(),  before,  beforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType(),  before,  beforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType(),  before,  beforeParent)  {	  switch(c.getFirstChild().getType(),    beforeParent)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	26	None	replace
215	[BUG]  [BUGGY]  if(insertBefore!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }	  if(insertBefore!=    null)    {    c.removeChild(insertBefore);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
216	[BUG]  [BUGGY]  Node  c  =  beforeParent,  beforeParent.getFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  beforeParent,  beforeParent.getFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  beforeParent,  beforeParent.getFirstChild();	  Node    c    =    insertBefore,    beforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
217	[BUG]  [BUGGY]  switch(c.getType(),  insertBefore,  before)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  insertBefore,  before)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  insertBefore,  before)  {	  switch(c.getType(),    before,    insertBefore)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
218	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    >>    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	replace
219	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  c.getFirstChild().getType()!=  Token.EMPTY)  {	  switch(c.getType()    >>    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	replace
220	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&!NodeUtil.isForIn(c)&&  n.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    >>    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	69	None	replace
221	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.FUNCTION)  {	  switch(c.getType()    >=    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
222	[BUG]  [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.LABEL)  {  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.LABEL)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType()!=  Token.VAR  &&  c.getFirstChild().getType()!=  Token.LABEL)  {	  switch(c.getType()    >=    Token.VAR)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
223	[BUG]  [BUGGY]  Node  c  =  n.getfirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  n.getfirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  n.getfirstChild();	  Node    c    =    before.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	64	None	replace
224	[BUG]  [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)c.removeChild(insertBefore,  insertBeforeParent);  break;	  if(insertBefore!=    null)c.removeChild(insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	78	None	replace
225	[BUG]  [BUGGY]  switch(c.getFirstChild().getType(),  before,  arguments)  {  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getFirstChild().getType(),  before,  arguments)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getFirstChild().getType(),  before,  arguments)  {	  switch(c.getType(),    before,    arguments)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	43	None	replace
226	[BUG]  [BUGGY]  Node  c  =  before,  insertBeforeParent.removeFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  before,  insertBeforeParent.removeFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  before,  insertBeforeParent.removeFirstChild();	  Node    c    =    before,    insertBeforeParent.getFirstChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	68	None	replace
227	[BUG]  [BUGGY]  Node  c  =  n.removeFirstChild();  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  n.removeFirstChild();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  n.removeFirstChild();	  Node    c    =    n.getLastChild();    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
228	[BUG]  [BUGGY]  switch(c.getType(),  before,  init,  insertBeforeParent)  {  [CE]  reached  end  of  file  while  parsing  [FE]            junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  switch(c.getType(),  before,  init,  insertBeforeParent)  {  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	switch(c.getType(),  before,  init,  insertBeforeParent)  {	  switch(c.getType(),    before,    init)    {    	non-compiled	[CE]  reached  end  of  file  while  parsing	76	None	replace
229	[BUG]  [BUGGY]  c.removeChild(c);  break;  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  c.removeChild(c);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	c.removeChild(c);  break;	  c.removeChild(n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	49	None	replace
230	[BUG]  [BUGGY]  if(c.getType()  ==  Token.NAME)  {  c.replaceChild(n,  before);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]              junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c.getType()  ==  Token.NAME)  {  c.replaceChild(n,  before);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c.getType()  ==  Token.NAME)  {  c.replaceChild(n,  before);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
231	[BUG]  [BUGGY]  if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(before,  n);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(before,  n);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(before,  n);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
232	[BUG]  [BUGGY]  if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(n,  before);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(n,  before);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(c.getType()  ==  Token.LABEL)  {  c.replaceChild(n,  before);  break;  }	  c.replaceChild(before,    n);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	61	None	replace
233	[BUG]  [BUGGY]  Context.report(JSError.make(c,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                    junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  NON_GLOBAL_NAMES_UNIQUE,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
234	[BUG]  [BUGGY]  Context.report(JSError.make(c,  INVALID_INIT_ERROR,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  INVALID_INIT_ERROR,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  INVALID_INIT_ERROR,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
235	[BUG]  [BUGGY]  Context.report(JSError.make(c,  NON_GLOBAL_DEFINE_INIT_ERROR,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  NON_GLOBAL_DEFINE_INIT_ERROR,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  NON_GLOBAL_DEFINE_INIT_ERROR,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
236	[BUG]  [BUGGY]  Context.report(JSError.make(c,  INVALID_DEPRECATED_ERROR,  arguments));  break;  [CE]  reached  end  of  file  while  parsing  [FE]                          junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Context.report(JSError.make(c,  INVALID_DEPRECATED_ERROR,  arguments));  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Context.report(JSError.make(c,  INVALID_DEPRECATED_ERROR,  arguments));  break;	  Context.reportCodeChange();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	44	None	replace
237	[BUG]  [BUGGY]  if(insertBefore!=  null)c.replaceChild(n,  insertBefore);  break;  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBefore!=  null)c.replaceChild(n,  insertBefore);  break;  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBefore!=  null)c.replaceChild(n,  insertBefore);  break;	  c.replaceChild(n,    insertBefore);    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
238	[BUG]  [BUGGY]  Node  next  =  c.getFirstChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                      junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  c.getFirstChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  c.getFirstChild();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
239	[BUG]  [BUGGY]  Node  next  =  c.getLastChild();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  next  =  c.getLastChild();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  next  =  c.getLastChild();  break;	  Node    next    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	45	None	replace
240	[BUG]  [BUGGY]  Node  beforeParent  =  c.getParent();  break;  [CE]  reached  end  of  file  while  parsing  [FE]                        junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  beforeParent  =  c.getParent();  break;  [BUGGY]      case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  beforeParent  =  c.getParent();  break;	  Node    beforeParent    =    c.getNext();    break;    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
241	[BUG]  [BUGGY]  if(insertBeforeParent!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }  [CE]  reached  end  of  file  while  parsing  [FE]                junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  if(insertBeforeParent!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	if(insertBeforeParent!=  null)  {  c.replaceChild(n,  insertBefore);  break;  }	  if(insertBeforeParent!=    null)    {    c.removeChild(insertBeforeParent);    break;    }    	non-compiled	[CE]  reached  end  of  file  while  parsing	72	None	replace
242	[BUG]  [BUGGY]  Node  c  =  insertBefore,  beforeParent.getParent();  [CE]  reached  end  of  file  while  parsing  [FE]                  junit.framework.AssertionFailedError:  Expected:  function  f(){arguments=Array.prototype.slice.call(arguments      [CONTEXT]      Node  n,  Node  before,  Node  beforeParent)  {  for  (Node  next,  c  =  n.getFirstChild();  c  !=  null;  c  =  next)  {  next  =  c.getNext();  Node  insertBefore  =  (before  ==  null)  ?  c  :  before;  Node  insertBeforeParent  =  (before  ==  null)  ?  n  :  beforeParent;      [BUGGY]  Node  c  =  insertBefore,  beforeParent.getParent();  [BUGGY]      switch  (c.getType())  {  case  Token.LABEL:  extractForInitializer(c,  insertBefore,  insertBeforeParent);  break;  case  Token.FOR:  if  (!NodeUtil.isForIn(c)  &&  c.getFirstChild().getType()  !=  Token.EMPTY)  {  Node  init  =  c.getFirstChild();  c.replaceChild(init,  new  Node(Token.EMPTY));  Node  newStatement;  [CLASS]  Normalize  PropogateConstantAnnotations  VerifyConstants  DuplicateDeclarationHandler  ScopeTicklingCallback  [METHOD]  extractForInitializer  [RETURN_TYPE]  void  Node  n  Node  before  Node  beforeParent  [VARIABLES]  AbstractCompiler  compiler  boolean  CONVERT_WHILE_TO_FOR  MAKE_LOCAL_NAMES_UNIQUE  assertOnChange  checkUserDeclarations  expectedConst  forbidChanges  isConst  Map  constantMap  Node  before  beforeParent  c  init  insertBefore  insertBeforeParent  n  newStatement  next  	projects/Closure102/src/com/google/javascript/jscomp/Normalize.java	0.2773500981126146	318	318	1	replace	Node  c  =  insertBefore,  beforeParent.getParent();	  Node    c    =    insertBeforeParent.getParent();    	non-compiled	[CE]  reached  end  of  file  while  parsing	48	None	replace
