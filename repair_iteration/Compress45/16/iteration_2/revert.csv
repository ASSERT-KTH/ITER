projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar<0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar>=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar==0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar!=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==false;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar>>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length<0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar<0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar==0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar<=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar[Delete]0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>=TarConstants.MAXID;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>>TarConstants.MAXID;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<maxAsOctalChar){value=formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=MAXID){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar)returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length-1;i<len;i++){if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length==0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length!=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==true;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=false;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar==false;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=true;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=true;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==false,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=Long.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=Integer.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=Long.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=LAST_VALID_BYTE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=MAXID)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=Integer.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(value<=maxAsOctalChar&&value<=NUMBER_INDEX)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=value.length;i<len;i++){if(value<minAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<maxAsOctalChar){value=formatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=MAXID){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar!=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length==TarConstants.MAXID;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length==TarConstants.BIGINT;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length==TarConstants.VALUE_NUMBER_INT;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=Integer.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=Long.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=Integer.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=Long.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=LAST_VALID_BYTE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length<=maxAsOctalChar&&value<=MAXID)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=0){if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){if(length<=maxAsOctalChar){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=0){if(maxAsOctalChar==maxAsOctalChar){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=0){if(maxAsOctalChar==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<size;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar)returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<=maxAsOctalChar){if(length<=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=this.maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value==maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=maxAsOctalChar.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar>=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar<0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar||value<=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar||length<=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=length){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){if(value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar!=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar==0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar>=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar>>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar[Delete]0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=this.maxAsOctalChar==0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length-1;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(value<=maxAsOctalChar){if(length<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>5;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar<=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value!=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480while(length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length>maxAsOctalChar&&value.charAt(maxAsOctalChar)!='-')){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480||(length>maxAsOctalChar&&value.charAt(offset)!='-')){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar==1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){for(intidx=start;idx<end;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=length){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeToInt(value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safely(value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeToInt(0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeNegatedBytes(value,buf,offset,length)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeNegatives(value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480Integerchars=formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,size);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeToInt(length){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480safeGet(value,offset,length)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar!=false;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buffer.length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=buf.length;i<len;i++){if(value==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=maxAsOctalChar==0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=false;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>=true;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=maxAsOctalChar+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=0x80;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=0x7F;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar||length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<maxAsOctalChar||length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=maxAsOctalChar){returnformatLongOctalOrBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length==0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<1){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length<=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value<=maxAsOctalChar||length>4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=maxAsOctalChar.length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480for(inti=0,len=length;i<len;i++){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=length>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar||value>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<maxAsOctalChar||value>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=MAXID){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(value<=maxAsOctalChar){thrownewIllegalArgumentException("".length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length>=maxAsOctalChar){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<1){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<2){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480if(length<=MAXID){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}else{formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java480finalbooleannegative=value>maxAsOctalChar||length>maxAsOctalChar;
