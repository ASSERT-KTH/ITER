projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x8000);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x20);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x800:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x90:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x7F);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(0x80?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=offset;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=offset;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>maxAsOctalChar){for(intidx=limit;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?1:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0x800:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<offset;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<len;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<offset;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<maxAsOctalChar;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<offset;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x20);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x20);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x8000);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x8000);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?1:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(0x80?0xff:length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0x90:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490lungul(long){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>maxAsOctalChar){inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>maxAsOctalChar){for(inti=start;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>maxAsOctalChar){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>maxAsOctalChar){for(inti=start;i<offset;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&length>0){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value.length>0){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value.charAt(idx-1)!='n'){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value.length>0){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0x800:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff/0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff&0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff-0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490lungul(long){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar);for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=off;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.reportCodeChange();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.codeBug();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(idx==start+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.equals(value));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(idx!=start+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(idx>=start+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490lungul(long){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar);for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<len;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(value!=BYTE_MASK);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value>maxAsOctalChar){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&length>maxAsOctalChar){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value<=maxAsOctalChar){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&length>maxAsOctalChar){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490ContiguousByteBufferbuffer=newContiguousByteBuffer(buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490ContiguousByteBufferbuffer=newContiguousByteBuffer(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490ContiguousByteBufferbuffer=newContiguousByteBuffer(maxAsOctalChar,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490ContiguousByteBufferbuffer=newContiguousByteBuffer();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490ContiguousByteBufferbuffer=newContiguousByteBuffer(buf,offset,length-buffer.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1L:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?2:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?1:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent==value.parent){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.BYTE_MASK){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.FUNCTION){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.BLOCK){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.BYTE_MASK){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.BYTE_MASK){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.getType()==Token.BYTE_MASK){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?1:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit&&length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>=limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490parent!=null&&parent.equals(value)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>0){for(inti=start;i<len;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>0){for(inti=start;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>0){for(inti=start;i<offset;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>0){for(inti=start;i<end;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x7F);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x7F);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x7FF);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490For(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(length>maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>9){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<size;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<len;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>=limit&&value<=maxAsOctalChar){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>=limit){for(intidx=start;idx>=maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>=limit&&length>maxAsOctalChar){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490lungul(long){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx>limit){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<offset;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Context.checkState(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(idx<limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<maxAsOctalChar;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<offset;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<end;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=offset;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx<0;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x8000:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,Negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negativ);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<offset;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=offset;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<length;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=limit;idx<start;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<end;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<length;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=offset;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar||negative){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset+len;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,size);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,width);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<length;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<end;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+length;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x10F);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Format.formatBigIntegerBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(buf&0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start;i<end;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start+limit;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,Negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,neg);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<end;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=start+offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<start;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(inti=start;i<start;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<start+length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<size;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x20+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x17);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<end;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<len;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<offset;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Integeridx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=offset;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x100:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x10:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<offset+length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=offset;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=offset;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<offset+length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value<=maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(len>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar||value>BYTE_MASK)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar||value>MAX_BACK_ENCODING)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar||value>chars)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar||value>MAX_MASK)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490negative&&(value<=maxAsOctalChar||value>MAX_BACK_ENCODING)){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){if(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?2:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(negative&&value<=maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar||negative){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490cearcăToFrontBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<Object>it=value.bytes().iterator();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<Object>remaining=value.bytes().iterator();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<Object>remaining=value.bytes().iterator().next();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490cearcăToFrontBytes(negative,value,buffer,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490cearcăToFrontBytes(value,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<10;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<4;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<2;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<10;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<9;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<4;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<2;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=offset;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(negative&&length>limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<len;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<=limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<10;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<String>idx=value.bytes().iterator().next();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<String>idx=values.iterator().next();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490Iterator<String>idx=value.bytes().iterator();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<10;++idx){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(negative&&value<=maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(negative&&value>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value<=maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490while(negative&&value<=maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value>maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<10;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<4;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<10;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<9;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<2;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<4;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x10FF);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){if(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<10;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x20:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(positive?0xff:0x20);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative&&length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<len;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar||negative){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<end;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<offset;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(negative){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
