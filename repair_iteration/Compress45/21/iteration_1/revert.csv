projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<length;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<len;i++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=offset;i<length;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(inti=start;i<limit;i++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x8000);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?0x80:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value?1:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(value&0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=start;idx>=limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x20);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x800:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0x90:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(negative?0xff:0x7F);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490buf[offset]=(byte)(length?0xff:0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(inti=start;i<limit;++i){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>0){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java490if(length>limit){for(intidx=start;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length);}
