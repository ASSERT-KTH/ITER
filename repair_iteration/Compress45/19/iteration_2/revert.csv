projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<9){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=9){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>9){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>10){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>4){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>3){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(!negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>9){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>10){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>8){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||negative&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2&&length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<4||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=3||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==0||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=maxAsOctalChar||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<4||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>BigInteger.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<length;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<limit;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<offset;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=value.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<limit;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<limit;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=value.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<length;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<length;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar&&value<=negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=value&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value<=negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value<=length&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=value||value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<maxAsOctalChar||negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length!=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0||value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0||value.charAt(offset)!='-'){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485While(negative&&value<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485While(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485[Delete]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aughtExceptionHandler.throwAsUnquotedException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485While(negative&&value<=maxAsOctalChar){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485While(negative&&value<=maxAsOctalChar){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485While(negative&&value<=maxAsOctalChar){thrownewIllegalArgumentException("".length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=10){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&offset<limit){for(intidx=start;idx<limit;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<length;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<len;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<offset;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=20||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<10||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||length>BigInteger.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<maxAsOctalChar||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>4){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>3){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>5){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<0||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value.equals(negative)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value>negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value==negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value!=negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=9){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigInteger.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigInteger.MAXIMUM_INT){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigDecimal.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigInteger.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigInteger.MAX_VALUE||size>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&offset<limit){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485EncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoding(buf,offset,length));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485EncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoding(buf,offset,length));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485EncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoding(buf,offset,length));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485EncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoding(buf,offset,length));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485EncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoderEncoding(buf,offset,length));
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value<=0||value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<0||value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigIntegerBytes.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigIntegerBytes.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){intlen=length;for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length-1;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=size){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value>=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length-1;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>BigIntegerBytes.MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||value<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length<=TarConstants.MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>BigIntegerBytes.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length+2);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<2||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2&&length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=MAXSIZE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=size){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=value.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<Long.MIN_VALUE||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<Long.MIN_VALUE||negative>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>maxAsOctalChar||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||length>MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||length>value.length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>maxAsOctalChar||length>MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485while(negative&&offset<limit){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){if(negative){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<length;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<limit;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=value.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||(offset+length)>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MIN_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<0||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigDecimal.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MAX_VALUE||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MAX_VALUE||value>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(!negative&&value<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(!negative&&value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(!negative&&value<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length==2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&length>0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485nisip=negative?TarConstants.NUMBER:TarConstants.NUMBER;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485nisip=negative?TarConstants.NUMBER:TarConstants.BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0&&negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||Negate.isBigDecimal(negative)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||Negate.isBigInteger(negative)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0&&length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar&&value>==negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<maxAsOctalChar||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0&&value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485longidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485longlen=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length==Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length!=Long.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1&&length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>BigInteger.MAX_VALUE||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10&&length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||length>BigInteger.MAX_VALUE||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<length;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<offset;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<len;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<end;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<10){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485longlen=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<offset;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<offset;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length>2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&negative){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigInteger.MAX_VALUE||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigInteger.MAX_VALUE||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485longlen=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0&&length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=BigInteger.MIN_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485longlen=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value>maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>limit){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<end;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value>==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>BigInteger.MAX_VALUE)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>Long.MAX_VALUE)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<2||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<offset;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(intidx=0,len=buf.length;idx<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length<=1||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buffer.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length!=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=maxAsOctalChar.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length+1}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBy
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative||length>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&offset<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=LAST_VALID_BYTE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<offset;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(intidx=start;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=LAST_VALID_BYTE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||offset>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=8){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>BigIntegerBytes.MAXIMUM_INT){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>maxAsOctalChar||length>BigIntegerBytes.MAXIMUM){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=1&&(value<=maxAsOctalChar||value>Integer.MAX_VALUE)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=1&&(value<=maxAsOctalChar||value>BigInteger.MAX_VALUE)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBy
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=1||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>limit){for(intidx=offset;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=4||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aughtIfNegative(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aughtIfNull(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aughtInvalidByteChar(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aught(IllegalArgumentException.INVALID_BACK_ENCODING);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aught(IllegalArgumentException.INVALID_BYTE_MASK);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485aught(IllegalArgumentException.INVALID_BACK_ENCODING,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=2||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative||length<0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=maxAsOctalChar.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBy
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=10||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&length<=Long.MIN_VALUE||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<1||length>BigIntegerBytes.MAX_VALUE||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>BigIntegerBytes.MAX_VALUE||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=maxAsOctalChar.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=maxAsOctalChar.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=value.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBy
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=buf.length;i<len;++i){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerB
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=BYTE_MASK){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative){for(intidx=start;idx<limit;idx++){buf[offset]=value.charAt(idx);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485for(inti=0,len=buf.length;i<len;idx++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MAX_VALUE||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=0||length>BigInteger.MAX_VALUE||length>BigInteger.MIN_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=1||length>maxAsOctalChar||length>BigInteger.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigIntegerBytes.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigIntegerBytes.MAX_INT){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length<=maxAsOctalChar||length>BigIntegerBytes.MAXIMUM_INT){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(value>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative&&value<=maxAsOctalChar){for(inti=0,len=value.length;i<len;i++){if(negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>BigIntegerBytes.MIN_INT||value>BigIntegerBytes.MAX_INT)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>BigIntegerBytes.MIN_VALUE||value>BigIntegerBytes.MAX_VALUE)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>BigIntegerBytes.MAXIMUM_INTEGER||value>BigIntegerBytes.MAXIMUM_INT)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(length>1&&(value<=maxAsOctalChar||value>BigIntegerBytes.MIN_INT||value>BigIntegerBytes.MAXIMUM_INT)){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485negative&&value<=BYTE_MASK){for(intidx=start;idx<limit;idx++){buf[offset]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative>maxAsOctalChar||negative>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java485if(negative>maxAsOctalChar||negative<=maxAsOctalChar){
