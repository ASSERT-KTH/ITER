projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(val,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf.length:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>4){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(length,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(bits,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,buffer);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,MAX_VALUE);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(val)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>neamean){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{thrownewIllegalArgumentException("");}
