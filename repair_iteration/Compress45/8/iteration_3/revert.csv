projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(val,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf.length:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buffer[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>4){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(length,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(bits,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,buffer);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,MAX_VALUE);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(val)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>neamean){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value<=max)){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value<=max)){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{thrownewIllegalArgumentException("".equals(value));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value<=max)){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0?buf.length:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf.length:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(max,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max){val++;}elseif(negative){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}elseif(value<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val><8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>{8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<=0&&value<=max)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<=0&&value<=max)){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<=0&&value<=max)){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<=0&&value<=max)){val++;}else{thrownewIllegalArgumentException("'");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1]{val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffff){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffffl){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffff){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xffff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xffffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0?val:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0&&value<=max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0?val:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0?value:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buffer.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-offset+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-offset+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(max,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0l){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0l){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0l){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>1){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){buffer[i]=value;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buffer.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buffer,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.max(0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>16){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>8){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xff){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffff){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval>0xfffl){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0xff){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl-bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl&bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val<>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.pow(10,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(max)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==null){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==negative){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=negative){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=negative?val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val+=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}elseif(negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("").getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<max){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value==0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("...");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value<=max)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.equals(val))){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=BYTE_MASK)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=0xfff)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value<=max)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=0xfff)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2L+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/4+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<=max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<6;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=val-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val>0;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,buf[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xffl&&value<=max)){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xffff){buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buffer[offset++]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=length+offset-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=max+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=val+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length/1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max/2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max&&val<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=val&&max<=value.length){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buffer.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buffer,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(buf,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==null){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val+=max;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==null){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==null){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==null){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,MAX_VALUE+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,MAX_VALUE-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<buf.length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<buf.length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<buf.length+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=max){if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{buf[offset++]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,size);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=neamean){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffl){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.sqrt(val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=length+offset-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length-1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=max+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=val+length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length-1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length/1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,size);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=value-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buffer[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buf[offset++]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val+=length;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{buffer[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0||val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf.length,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buffer,0,length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val>0?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.min(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.max(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intval=Math.abs(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.sqrt(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=BYTE_MASK)){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=BYTE_MASK)){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=BYTE_MASK)){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buffer.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,value.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,buffer,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.sqrt(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/BYTE_MASK+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=max){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value==0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<4){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<6){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value<=max)){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value)!='-')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='/')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='/')){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=offset;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=length-2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.max(0,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.min(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.max(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.pow(10,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val>0;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val>0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(val,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(val,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(buf,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>1){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0?buffer[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){val+=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506|=0xffl<<bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0){val+=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){val+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='/')){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='/')){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xffl&&value<=max)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xfffl&&value<=max)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xffl&&value<=max)){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xfffl&&value<=max)){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.min(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.sqrt(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.max(0,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(val)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(buf,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(buf,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.sin(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer[i],0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){buf[offset++]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<4){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buffer[offset++]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buffer[offset++]=ValueUtils.toByteArray(buf,offset+length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buffer[offset++]=value;System.arraycopy(buf,0,buf,offset,offset+length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buffer[offset++]=value;System.arraycopy(buf,offset,buf,offset,offset+length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2L+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value<=max)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0xffl&&value<=max)){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value<=max)){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.max(max,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,val+2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<0){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=val){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=max){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0L){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=1L){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>=8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<=0&&value<=max)){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{thrownewIllegalArgumentException("").trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=max){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=max){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=max){val=0;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>MAX_VALUE&&value<=MAX_VALUE);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>MAX_VALUE&&value<=MAX_VALUE)||(value>MAX_VALUE&&value<=MAX_VALUE);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>MAX_VALUE&&value<=MAX_VALUE)){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=length)){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>MAX_VALUE&&value<=MAX_VALUE)){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=size())){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value<0&&value.length>0)||(value>max&&value<=MAX_VALUE)){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=length+offset;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=val+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length*2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(val)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=(max<=value)?val:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=(max<<)?value:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=(max<=value)?1L:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value{0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>1){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>8){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(max,value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<buf.length-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffl&&val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xffl&&val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-1l){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=1l){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=0xffff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xffff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=0xffffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value)!='-')){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value)!='-')){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||(value>0&&value.charAt(value-1)!='-')){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>max){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>max){val+=length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>max){val+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xff){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(value>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){buf[offset++]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506result[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2.0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){for(inti=offset+length-1;i>=offset;i--){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){for(inti=offset+length;i>=offset;i--){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){for(inti=offset+length-1;i>=offset;i++){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl-bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl&bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=length+offset;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length-2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=val+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length*2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>=max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>>8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,buffer[i],0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}elseSystem.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0xffffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffffl+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,buffer,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,offset+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,offset+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value/offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<4){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1]{val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>max-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0||val>max){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval<>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalval<>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffffl-bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffffl<<4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=val){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}else{buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val{val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException(".".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException(".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val{val++;}else{thrownewIllegalArgumentException(".".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val{val++;}else{thrownewIllegalArgumentException(".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val-value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,buf,0,val.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506readFully(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){System.arraycopy(buf,offset+1,buf,0,val.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506rackBinary(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/2+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2L+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2*1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0?buffer[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val>0?buf[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0xfff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0xffff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>1){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:negative?val:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>8?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(max)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){if(val<=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<28){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>16){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>limit;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val+=length;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>0;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(length,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value,max+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/BYTE_MASK+1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>max){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>1){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0?buf[i]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=max>0?buf[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>1){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506System.arraycopy(buf,offset+1,buf,0,val.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=max-1;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=10;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=max;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=offset;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=offset;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=max-2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=width;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=size;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(value<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-buffer);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=max;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=width;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value=buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value,max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.sqrt(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.min(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.sqrt(value)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(max-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value/1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(length,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>limit){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>maximum){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>remaining){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=max;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=offset;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val+=width;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(length)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(buf,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=0;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val=0;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf.length>0){if(value>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(!negative){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value-value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>1){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<0||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val<0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,buffer[i]);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){if(val>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(val>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(val!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){if(val!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=0;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException("".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val++;}else{thrownewIllegalArgumentException("..");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(10,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0L,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-value+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-value-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<28){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl+bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffl<<8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl+bits;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0L;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>max){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val=Math.abs(value);}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>8){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>16){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>32){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/4+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/8+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val--;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>neamean){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>limit){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val+=max-1;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=max-1;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=0;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buffer[offset++]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val+=max;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[i]:negative?max:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0L){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/3L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf[0]-value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf[0]&0xffff)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf,negative)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(bits,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/8+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/10+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value)/3+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0L){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(buf[offset+length)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=8){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>1){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val+=length;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val+=value.length;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/10;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(val!=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){if(val!=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-2-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-2-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffL;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl&buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl-buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl+buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl&buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0xfffL;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(bits,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(bits,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val>=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506offset>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(buf,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>8){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>16){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=offset-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2.0+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/4+1l;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=offset){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset)+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-offset,max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val=0;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,width-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>=0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value==0){value++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(max)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0||value>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val|=0xffl<<bits;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val|=0xffl<<bits;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0||value>max){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>=0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val>=0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0l){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{System.arraycopy(buf,offset+length,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{System.arraycopy(buf,offset+length,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>max){val++;}else{thrownewIllegalArgumentException("").doubleValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0||value>max){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0||value>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value==0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val=max;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<16;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(bits,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.ceil(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length/BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length-4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>2){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length/BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Long.MIN_VALUE;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffL;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){if(length>0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=value>0?buf.length:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf.length:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>=0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=8){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(negative){val>>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>4){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=offset;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=width;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>max){val+=buffer.length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max-1){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>1){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>1){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>max){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506readFully(buf,offset+length-1)*8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>0){System.arraycopy(buf,offset+1,buf,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||val>max){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,buf);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xff;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0l){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-1L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<>max){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val<<0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val{0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0){val+=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(offset)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(offset,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val?buf[i]:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf.length>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=val>0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0xfffl;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506longval=Math.abs(value/BYTE_MASK);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>12){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(1L,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val)-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<4){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sin(value)-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(buf)/2L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=val){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=offset){val++;}else{thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){if(buf[i]!=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException("".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val<>0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>=0?buf[i]:null;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0||val>max){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{buf[offset++]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=val){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=offset){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max&&value<=MAX_VALUE){val++;}else{thrownewIllegalArgumentException("".toString());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=1){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=1L){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length<=max){if(buf[i]==0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){buf[offset++]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506because(value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(value>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(buf,value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val<>0?buf[i]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506{val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val>0){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(length>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffff){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16||val>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<18){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buf[offset++]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,buffer.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0L){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<3){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val+=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<1||val>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=0){val++;}else{buffer[offset++]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffl&&val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){System.arraycopy(buf,offset+1,val,0,buf.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{buf[offset++]=max;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<12;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=>0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/3;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<18){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<16){val++;}else{buf[offset++]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(offset,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.max(0,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val)-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfffl){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0x7F){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xff){thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val<>0?buf[i]:val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.log(value)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=val){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max&&value<=MAX_VALUE){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max&&value<=BYTE_MASK){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=offset){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max-1){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=val){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException(""));}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506finalintoffset=offset+length*BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val==0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value<<0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506value>=>0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>>0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=null){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(offset,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(length,val)-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){System.arraycopy(buf,offset+1,buf,0,val.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-1L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(value-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[offset+length-1]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=val>0?buf[val-1]:max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+length,value,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value!=null){if(val>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffL<<buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl+buf.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+length,buf,0,value);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,buf,0,val.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){System.arraycopy(buf,offset+1,buf,0,val.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(length>0){System.arraycopy(buf,offset+1,buf,0,val.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,value-val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val-max);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,max-val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>16;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>>1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){System.arraycopy(buf,offset+1,value,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=offset){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max&&value<=MAX_VALUE){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=max&&value<=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xfff&&val<=max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(value)-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.max(0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>=0){val++;}else{buf[offset++]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>>1){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||offset>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8||value>0){buf[offset++]=value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=buffer.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=offset+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(val<=0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(buf)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.sqrt(val)/2+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xfffl<<(buf.length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.pow(10,val/2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val+=length;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val+=max;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val+=length;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value/2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{buffer[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.abs(length)/4;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>[Delete]8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>!=8;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val-=Math.abs(value/BYTE_MASK);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+length*BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506intoffset=offset+len;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<0){val++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){offset++;}else{buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>0xffffL){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<=val){val++;}else{thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val+=Math.min(buf,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf!=null){if(length>0){val++;}else{System.arraycopy(buf,offset+length,buffer,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=>4){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>=>4){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=(offset+length)/2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val>==0){val++;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>max){val++;}else{thrownewIllegalArgumentException(".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("".");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>max){val++;}else{thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506{val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value>0){val=length;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506while(val<0){val=value;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<4||val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<1||val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<2||val>0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<12){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xffffL){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<=0xfffffl){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<<8;val>>1){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506offset<<8||val>0){buf[offset++]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+1,buf,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<max){val++;}else{thrownewIllegalArgumentException("".doubleValue());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<=0){val++;}else{System.arraycopy(buf,offset+1,value,0,buf.length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val>8){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(val<0||val>max){val++;}else{System.arraycopy(buf,offset+length,buf,0,val);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2+max;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val=Math.abs(value)/2L+1L;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val<>16){val++;}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506val|=0xffffl<<16;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=null){if(val<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(buf[i]!=null){val++;}else{System.arraycopy(buf,offset+1,val,0,buf.length);buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java506if(value<0){val++;}else{System.arraycopy(buf,offset+1,val,0,buffer.length);buffer[i]=value;}
