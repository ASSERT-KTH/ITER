bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  val  >  >>  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  val  >  >>  1;  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	val  >  >>  1;	  val    >    >>    4;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  val  >  >=  12;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  val  >  >=  12;  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	val  >  >=  12;	  val    >    >=    16;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  val  >  >>  16;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  val  >  >>  16;  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	val  >  >>  16;	  val    >    >=    16;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  val  >  >>  2;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  val  >  >>  2;  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	val  >  >>  2;	  val    >    >=    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  val  >  ==  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  val  >  ==  1;  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	val  >  ==  1;	  val    >    >=    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)value;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)val;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)val;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  (byte)val;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)value;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)val;  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)val;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i++)  {  buf[i]  =  (byte)val;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)value;  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)val;  }  [CE]  illegal  start  of  expression  [FE]                              IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)val;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  len;  i++)  {  buf[i]  =  (byte)val;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  0;  i--)  {  buf[i]  =(byte)value;  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  0;  i--)  {  buf[i]  =(byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >=  0;  i--)  {  buf[i]  =(byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  offset  +  length;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  for(int  i  =  offset  +  length;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	for(int  i  =  offset  +  length;  i  >=  offset;  i--)  {  buf[i]  =(byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  offset;  i  <  offset;  i--)  {  buf[i]  =(byte)value;  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  for(int  i  =  offset;  i  <  offset;  i--)  {  buf[i]  =(byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	for(int  i  =  offset;  i  <  offset;  i--)  {  buf[i]  =(byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)buf[i];  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)buf[i];  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	for(int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =(byte)buf[i];  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  offset;  i--)  {  buf[i]  =  (byte)value;  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  offset;  i--)  {  buf[i]  =  (byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  offset;  i--)  {  buf[i]  =  (byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  Byte(buf[i]);  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  Byte(buf[i]);  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  Byte(buf[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i--)  {  buf[i]  =  (byte)value;  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i--)  {  buf[i]  =  (byte)value;  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  <  len;  i--)  {  buf[i]  =  (byte)value;  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  byte[buf.length  +  i];  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  for  (int  i  =  offset  +  length  -  1;  i  >=  offset;  i--)  {  buf[i]  =  (byte)  val;    [BUGGY]  if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  byte[buf.length  +  i];  }  [BUGGY]    }  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	511	511	1	replace	if(buf[i]!=  null)  {  for(int  i  =  offset  +  length;  i  >  0;  i--)  {  buf[i]  =  new  byte[buf.length  +  i];  }	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
