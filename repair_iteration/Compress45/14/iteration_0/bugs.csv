bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
27	[BUG] [BUGGY] throw new IllegalArgumentException("Value " + value + " is too large for " + length + " byte field."); [FE] IllegalArgumentException [CONTEXT] private static void formatBigIntegerBinary(final long value, final byte[] buf, final int offset, final int length, final boolean negative) { final BigInteger val = BigInteger.valueOf(value); final byte[] b = val.toByteArray(); final int len = b.length; if (len > length - 1) { [BUGGY] throw new IllegalArgumentException("Value " + value +    " is too large for " + length + " byte field."); [BUGGY] " is too large for " + length + " byte field."); } final int off = offset + length - len; System.arraycopy(b, 0, buf, off, len); final byte fill = (byte) (negative ? 0xff : 0); for (int i = offset + 1; i < off; i++) { buf[i] = fill; } } [CLASS] TarUtils 1 [METHOD] formatBigIntegerBinary [RETURN_TYPE] void  final long value final byte[] buf final int offset final int length final boolean negative [VARIABLES] byte[] b buf boolean negative ZipEncoding DEFAULT_ENCODING FALLBACK_ENCODING encoding byte fill BigInteger val int BYTE_MASK bits current end i idx len length limit off offset remaining start long value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	523	524	1	replace	
