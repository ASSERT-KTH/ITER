bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  long  max  =  1l  <  <  4;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1l  <  <  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1l  <  <  4;	  final    long    max    =    1l    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  final  long  max  =  1l  -  8;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1l  -  8;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1l  -  8;	  final    long    max    =    1l    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  final  long  max  =  value  -  bits;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  value  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  value  -  bits;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  long  max  =  1L  -  value;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  -  value;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  -  value;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  final  int  max  =  1l  -  bits;  [CE]  <identifier>  expected  [FE]                        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1l  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1l  -  bits;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  final  long  max  =  1L  -  offset;  [CE]  <identifier>  expected  [FE]                          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  -  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  -  offset;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  final  long  max  =  1l  -  value;  [CE]  <identifier>  expected  [FE]                            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1l  -  value;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1l  -  value;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  final  long  max  =  1l  -  offset;  [CE]  <identifier>  expected  [FE]                              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1l  -  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1l  -  offset;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  final  int  max  =  1L  -  bits;  [CE]  <identifier>  expected  [FE]                                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1L  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1L  -  bits;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  final  int  max  =  1  <  <  8;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  8;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  8;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  final  int  max  =  1  <  <  2;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  2;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  final  int  max  =  1  <  <  (bits  *  BYTE_MASK);  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  (bits  *  BYTE_MASK);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  (bits  *  BYTE_MASK);	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  final  int  max  =  1  <  <  (bits  -  1);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  (bits  -  1);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  (bits  -  1);	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  final  int  max  =  1  <  <  4;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  4;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  final  int  max  =  1  <  <  0;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  0;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  0;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  final  int  max  =  1  <  <  length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  length;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value);  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value);	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  negative);  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  negative);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  negative);	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value.length);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value.length);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK,  value.length);	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK  +  1);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK  +  1);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK  +  1);	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK  -  1);  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK  -  1);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK  -  1);	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  final  long  max  =  1  <  <  4;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  4;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  final  long  max  =  1  <  <  2;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  2;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  final  long  max  =  1  <  <  12;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  12;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  12;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  final  long  max  =  1  <  <  16;  [CE]  <identifier>  expected  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  16;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  16;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  final  long  max  =  1  <  <  3;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  3;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  3;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (length  -  bits);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (length  -  bits);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (length  -  bits);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  final  int  max  =  1  <  <  (bits  -  offset);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  (bits  -  offset);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  (bits  -  offset);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset,  length);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset,  length);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  offset,  length);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
30	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset  +  1);  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset  +  1);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  offset  +  1);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  length);  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  length);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  length);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset  +  length);  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset  +  length);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  offset  +  length);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
33	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  +  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  +  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  +  1;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  -  bits;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  -  bits;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  +  2;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  +  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  +  2;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  final  long  max  =  1  <  <  end;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  end;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  end;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  final  long  max  =  1L  -  2;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  -  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  -  2;	  final    long    max    =    1L    <    <    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  3;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  3;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  3;	  final    long    max    =    1L    <    <    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  final  long  max  =  1L  +  2;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  +  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  +  2;	  final    long    max    =    1L    <    <    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  2L;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  2L;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  2L;	  final    long    max    =    1L    <    <    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  16;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  16;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  16;	  final    long    max    =    1L    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  6;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  6;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  6;	  final    long    max    =    1L    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  final  long  max  =  1L  +  8;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  +  8;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  +  8;	  final    long    max    =    1L    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  final  int  max  =  1  <  <  bits;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  bits;	  final    long    max    =    1    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  final  long  max  =  1  <  <  offset;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  offset;	  final    long    max    =    1    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits  +  length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits  +  length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits  +  length;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  final  int  max  =  1  <  <  bits  +  offset;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  bits  +  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  bits  +  offset;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits  +  offset  +  length;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits  +  offset  +  length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits  +  offset  +  length;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  +  offset;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  +  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  +  offset;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  final  long  max  =  1  <  <  buf  +  offset;  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  buf  +  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  buf  +  offset;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits  +  width;  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits  +  width;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits  +  width;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( "Value  is  too  large  for "  +  value  + "  is  too  large  for "  +  length  + "  byte  field.   ");  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( "Value  is  too  large  for "  +  value  + "  is  too  large  for "  +  length  + "  byte  field.   ");  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  throw  new  IllegalArgumentException( "Value  is  too  large  for "  +  value  + "  is  too  large  for "  +  length  + "  byte  field.   ");  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(buf,  offset,  length,  negative);  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(buf,  offset,  length,  negative);  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(buf,  offset,  length,  negative);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  final  long  max  =  1L  +  4;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  +  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  +  4;	  final    long    max    =    1L    <    <    4;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  final  long  max  =  1L  -  4;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  -  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  -  4;	  final    long    max    =    1L    <    <    4;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  final  int  max  =  1L  <  <  4;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1L  <  <  4;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1L  <  <  4;	  final    long    max    =    1L    <    <    4;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
59	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits.length  -  1;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits.length  -  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits.length  -  1;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  final  int  max  =  1  <  <  bits.length;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  bits.length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  bits.length;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits.length  +  1;  [CE]  <identifier>  expected  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits.length  +  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits.length  +  1;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits.length  -  2;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits.length  -  2;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits.length  -  2;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits.length  &&  negative;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits.length  &&  negative;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits.length  &&  negative;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  final  long  max  =  1  <  <  bits.length  -  offset;  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  bits.length  -  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  bits.length  -  offset;	  final    long    max    =    1    <    <    bits.length;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  final  long  max  =  1;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  final  long  max  =  1  <  <  8  +  bits;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  8  +  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  8  +  bits;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  final  long  max  =  1  <  <  6;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  6;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  6;	  final    long    max    =    1    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  final  long  max  =  1  <  <  offset  +  bits;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  offset  +  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  offset  +  bits;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  2L  +  length;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  2L  +  length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  2L  +  length;	  final    long    max    =    1L    <    <    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  value);  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  value);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  value);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset,  negative);  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  -  offset,  negative);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  -  offset,  negative);	  final    long    max    =    1    <    <    (bits    -    offset);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  +  bits;  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  +  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  +  bits;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK)+  1;  [CE]  <identifier>  expected  [FE]              IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  (bits  *  BYTE_MASK)+  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  (bits  *  BYTE_MASK)+  1;	  final    long    max    =    1    <    <    (bits    *    BYTE_MASK);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
74	[BUG]  [BUGGY]  final  long  max  =  offset  -  bits;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  offset  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  offset  -  bits;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
75	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  8L;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  8L;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  8L;	  final    long    max    =    1l    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  final  int  max  =  1  <  <  offset;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  offset;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  final  int  max  =  1  <  <  (bits  &  BYTE_MASK);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  1  <  <  (bits  &  BYTE_MASK);  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  1  <  <  (bits  &  BYTE_MASK);	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
78	[BUG]  [BUGGY]  final  long  max  =  1L  <  <  4L;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  <  <  4L;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  <  <  4L;	  final    long    max    =    1L    <    <    4;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
79	[BUG]  [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(buf,  offset,  length,  negative);  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(buf,  offset,  length,  negative);  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(buf,  offset,  length,  negative);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }  [CE]  illegal  start  of  expression  [FE]                        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  formatLongBinary(value,  buf,  offset,  length,  negative);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  buf[idx]  =  value;  }  [CE]  illegal  start  of  expression  [FE]                          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  buf[idx]  =  value;  }  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	if(bits  <  0)  {  for(int  idx  =  offset;  idx  <  bits.length;  idx++)  {  buf[idx]  =  value;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  final  long  max  =  1  <  <  data.length;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  data.length;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  data.length;	  final    long    max    =    1    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  final  long  max  =  1  <  <  end  +  offset;  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  end  +  offset;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  end  +  offset;	  final    long    max    =    1    <    <    bits    +    offset;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
84	[BUG]  [BUGGY]  final  int  max  =  0xffl  <  <  bits;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  int  max  =  0xffl  <  <  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  int  max  =  0xffl  <  <  bits;	  final    int    max    =    1l    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  final  long  max  =  1  <  <  length  -  1;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  length  -  1;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  length  -  1;	  final    long    max    =    1    <    <    length;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
86	[BUG]  [BUGGY]  final  long  max  =  length  -  bits;  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  length  -  bits;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  length  -  bits;	  final    long    max    =    1l    -    bits;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  final  long  max  =  1  <  <  0;  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1  <  <  0;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1  <  <  0;	  final    long    max    =    1    <    <    bits;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  final  long  max  =  1L  -  8;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]    private  static  void  formatLongBinary(final  long  value,  final  byte[]  buf,  final  int  offset,  final  int  length,  final  boolean  negative)  {  final  int  bits  =  (length  -  1)  *  8;    [BUGGY]  final  long  max  =  1L  -  8;  [BUGGY]    long  val  =  Math.abs(value);  //  Long.MIN_VALUE  stays  Long.MIN_VALUE  if  (val  <  0  ||  val  >=  max)  {  throw  new  IllegalArgumentException(   "Value     "  +  value  +     "  is  too  large  for     "  +  length  +     "  byte  field.   ");  }  if  (negative)  {  val  ^=  max  -  1;  val++;  val  |=  0xffl  <<  bits;  }  [CLASS]  TarUtils  1  [METHOD]  formatLongBinary  [RETURN_TYPE]  void  final  long  value  final  byte[]  buf  final  int  offset  final  int  length  final  boolean  negative  [VARIABLES]  byte[]  buf  boolean  negative  ZipEncoding  DEFAULT_ENCODING  FALLBACK_ENCODING  encoding  int  BYTE_MASK  bits  current  end  i  idx  len  length  limit  offset  remaining  start  long  max  val  value  	projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java	1.0	498	498	1	replace	final  long  max  =  1L  -  8;	  final    long    max    =    1L    <    <    8;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
