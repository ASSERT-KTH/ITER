projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
