projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(!negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent!=null&&negative){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(maxAsOctalChar>=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>size())){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>size())){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(maxAsOctalChar<=0)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(maxAsOctalChar,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(buf,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(value,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>=maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar||length>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=value.length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>Long.MAX_VALUE)){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=MAXID){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatLongOctalBytes(value,buf,offset,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar||negative>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative!=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative==Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent!=null&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent==null&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(maxAsOctalChar>=maxAsOctalChar||length==TarConstants.MAXID)){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent!=null&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent==null&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatLongOctalBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length);}else{System.arraycopy(maxAsOctalChar,0,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length);}else{System.arraycopy(buf,offset,maxAsOctalChar,0,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>=maxAsOctalChar){if(!negative&&value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value!=TarConstants.UIDLEN?TarConstants.MAXID:TarConstants.MAXID;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481positive&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<length){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=MAXID){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent!=null&&negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent==null&&negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>Long.MAX_VALUE)){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalnegative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()*maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()-maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()*2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()+2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,size);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar!=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar==0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar<=negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=length){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=MAXID){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigDecimalBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(maxAsOctalChar,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(buf,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigDecimalChar(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>0){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(IOExceptionioe){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(NumberFormatExceptionnfe){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(Exceptione){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(IllegalArgumentExceptione){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(IOExceptionioe){returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(NumberFormatExceptione){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=maxAsOctalChar.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.toByteArray(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=this.value.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=container.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.toByteArray()+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>0){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>length){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<size;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||maxAsOctalChar>=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=value){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=value.length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||maxAsOctalChar==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==value){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=value){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar&&negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<>maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar||negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=maxAsOctalChar.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=this.value.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481parent!=null&&negative){if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value<=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||length>2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||length>1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||maxAsOctalChar==0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar<=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar==1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||maxAsOctalChar!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length!=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar>=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=1){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>Long.MAX_VALUE)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||maxAsOctalChar!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=maxAsOctalChar.length();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length()-1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length()+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length()-2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length()*2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=value.length()+2;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value==TarConstants.UIDLEN?TarConstants.MAXID:TarConstants.NULL;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(IOExceptionioe){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(NumberFormatExceptionnfe){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481try{[Delete]catch(Exceptione){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481readBytes(negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalnegative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481positive&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(maxAsOctalChar,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<maxAsOctalChar;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<limit;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<length;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=maxAsOctalChar;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative?0xff:0x80){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=value.length;idx<size;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar&&negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<>maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar||negative>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(buf,0,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar.length;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx>=maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<MAXID;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<size;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,size);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset<maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=MAXID){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>0;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar+1;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value<=MAXID){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=0){returnformatLongOctalBytes(value,buf,offset,maxAsOctalChar);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<maxAsOctalChar;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<length;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<len;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<offset;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<size;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<0){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length<=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value==maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value!=maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,positive);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=offset>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=size>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,size);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer.getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(maxAsOctalChar,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=this.value.getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(buf,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])buf.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])this.value.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])super.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value.cloneBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value.toCharArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&length<=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value>=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<=length)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value!=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<=MAXID)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||negative<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=negative<=maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value<=length){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative?maxAsOctalChar:(byte[])value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])buf;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative?maxAsOctalChar:value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative,maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||value>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>maxAsOctalChar||negative<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar||negative>BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative!=BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative==BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>=BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar||negative!=BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<maxAsOctalChar||value>Long.MAX_VALUE)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar<negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=offset;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative?0xff:0x80){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=maxAsOctalChar;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=offset;idx<length;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||offset>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<=maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||value<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar!=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=buffer.length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar!=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(value>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buffer,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(negative?maxAsOctalChar:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(negative?1:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar)){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length<maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(negative&&value>==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=buffer.length();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=maxAsOctalChar;idx<limit;++idx;){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||length<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length==maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value!=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<=maxAsOctalChar)){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481||(negative&&value<maxAsOctalChar)){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481&&(negative&&value<=maxAsOctalChar)){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>=buffer.length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=duration>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481readBytes(negative){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limitAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&value<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&offset<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=limit;idx<maxAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=offset;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset<maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||value>negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=maxAsOctalChar;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?value.toByteArray():maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?maxAsOctalChar:value.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigIntegerBytes(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=newbyte[maxAsOctalChar];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])negative?value:maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=0){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar!=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar==maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||length>BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<offset;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<limitAsOctalChar;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative!=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar||negative>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(length>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,length=value.length;idx<maxAsOctalChar;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,len=buf.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=0,length=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value==null?false:value.getBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length<0){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>value){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){for(intidx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>maxAsOctalChar||negative){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>value;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative?maxAsOctalChar:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative?0,maxAsOctalChar:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative?maxAsOctalChar:BYTE_MASK);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(negative?1:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>0){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatBigDecimalBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>0){if(maxAsOctalChar<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(maxAsOctalChar<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar!=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar==maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,maxAsOctalChar);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&formatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar!=2){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])positive.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])value.toByteArray();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(negative?maxAsOctalChar:maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=buffer(value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=Long.MAX_VALUE||negative>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbytenegative=negative?maxAsOctalChar:maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative?maxAsOctalChar:maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length<=maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbytenegative=value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[0]=formatBigBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<maxAsOctalChar){//OKtostoreasoctalcharsreturnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||value<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length>0){if(maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()+maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLengthOctalChar();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?value.getBytes(maxAsOctalChar):maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?buffer.getBytes(maxAsOctalChar):buffer.getBytes(negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?buffer.getBytes(maxAsOctalChar):buffer.getBytes(maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBigIntegerBytes(negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigDecimalBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=negative?value.toByteArray():BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.trim();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=buf.length();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&maxAsOctalChar<=0){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&maxAsOctalChar>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(maxAsOctalChar>=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>MAXID_BYTE_MASK)){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.toBytes();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=value.getBytes(negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative<=length){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481Integeridx=start;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(length>0){if(!negative&&value<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(!negative&&value<=length){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481result[1]=formatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||positive){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||buffer.length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset!=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar!=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar)||formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value<maxAsOctalChar||value>Long.MAX_VALUE){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=weight>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=value<maxAsOctalChar||negative>0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=LAST_VALID_BYTE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=MAXID){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=LAST_VALID_BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length>maxAsOctalChar||length<=2||length>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar){if(negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&maxAsOctalChar<=maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(length>maxAsOctalChar||length>BigIntegerBytes.MAXID){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481while(negative&&length<2){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=maxAsOctalChar>value.length){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=getBytes(buf,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])data.clone();
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative||length<maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||negative>maxAsOctalChar){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||negative>BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>maxAsOctalChar||negative>LONG_BACK_ENCODING){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=length<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){if(!negative&&value<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=length;idx<limit;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=offset;idx<len;idx++){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){if(value>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value<=maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&length<=MAX_VALUE){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(value,buf,offset,length);}else{for(inti=0,len=maxAsOctalChar;i<len;++i){formatBigIntegerBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value<=maxAsOctalChar){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&value!=maxAsOctalChar){for(intidx=0,len=value.length;idx<len;++idx){formatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbyte[]buf=(byte[])positive;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<maxAsOctalChar||length>Long.MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&value>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&offset<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){for(intidx=start;idx<end;idx++){formatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatBigIntegerBytes(value,buf,offset,length,maxAsOctalChar);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative||negative){returnformatBigIntegerBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalintlen=getLength()*BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative=negative&&length<maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=value>maxAsOctalChar.length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481finalbooleannegative=length>maxAsOctalChar;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative){returnformatLongOctalBytes(value,buf,offset,length,negative);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&formatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative>maxAsOctalChar){returnformatBigIntegerBytes(value,buf,offset,length+1);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481negative&&(value<=maxAsOctalChar||value>LAST_BYTE_MASK)){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value<=maxAsOctalChar||negative>MAXID_BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481returnformatIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java481if(negative&&value>maxAsOctalChar||negative>maxAsOctalChar){
