projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,buffer.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]>=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null)thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(length>0){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset+length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=max;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=end;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=off;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=off;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){buf[i]=newbyte[buf[i];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=1;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){if(negative){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]==0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i>=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i<len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=len;i++){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<max;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<end;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<buf.length;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=2;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=1;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=max){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){val+=length;for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=2;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset;i<length;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513bytei=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513offset+=length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513chari=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i!=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val!=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(buf[i]/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("").trim();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>>offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value.length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value.length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value.length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(value,0,buf,0,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=2;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=1;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buffer.length>0){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i]==null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null&&buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]!=null){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=max-1;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length-1;for(inti=offset+len-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<max;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(val*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<end;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<2;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i--){buf[i]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i!=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,val,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,end);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){buffer[i]=newbyte[buf[i];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i==0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513val+=buf[i];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){buffer[i]=buf[i];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=end;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<buf.length;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("".getMessage());
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){buf[i]=newbyte[buf[i];
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>>offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i!=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513bytei=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513shorti=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=offset;i--){buf[i]=val;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,end);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value>=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value!=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=1;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,buffer.length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,buffer.length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,buffer.length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value==0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i!=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>max){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<max;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<buf.length;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<end;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<4;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<2;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("".length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("").getMessage();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException(""+getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<=length){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<limit){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<len){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<offset){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buf.length>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val!=null&&value.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=Buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=limit;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=limit;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i==0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513val+=buf[i]*BYTE_MASK;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]+=BYTE_MASK*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buffer.length>0){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=max;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buffer.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[2];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buf.length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=1;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<=length){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<limit){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<size){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<offset){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<len){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=1;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=2;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=newbyte[value/BYTE_MASK];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value%BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=max){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buf.length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value==0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length-1;i>>offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,size-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset+length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,end-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buf.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<len;i++){buffer[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i==0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val<max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length<=max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length<max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length-1;for(inti=offset+len-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=max;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value>=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null&&buf[i].length<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length==max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length<max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i].length<=max){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length<=offset){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length>=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<end;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i!=0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i==0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<offset;i++){buffer[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=offset){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=length){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=end){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null&&buf[i]<value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=MAX_VALUE){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=max){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=buffer.length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=val){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null)thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null)thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null)thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null)thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>max){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(negative){for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i!=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buffer.length>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&buf.length>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<length;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset;i<offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i>=offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i>=length;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<size;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i!=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length!=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>=0){for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset-length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,offset,buf,0,length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset;for(inti=offset;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>>offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(negative){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){if(negative){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(val<max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=max;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(negative){for(inti=offset+length;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]==null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]>=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(value[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]!=null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]!=negative){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513intlen=offset+length;for(inti=offset+len;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value%BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("").getMessage();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("").printStackTrace();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]==0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i--){buf[i]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=negative;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-2;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){buffer[i]=null;for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){buf[i]=null;for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=length){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=newbyte(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(longi=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-2;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<end;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[size-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]<value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i==0;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>>0;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(max){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-2;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=off;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-2;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i!=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>>offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(longi=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<length){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null&&buf[i]<=offset){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(length>max){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>>0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value%BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513chari=offset+length;i>0;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length!=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+len;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<buffer.length;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){buf[i]=null;for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value.toByteArray();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&buf[idx+1]<=max){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(value>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset+length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalStateException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException(""+val);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<limit;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<end;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<max;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=offset){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-2;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)value/BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i==0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i==0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[0];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[8];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[4];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[3];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i!=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(max){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(max){buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i==0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i++){if(buf[i]<=0){continue
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<buf.length;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=newbyte(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+len;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null)thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null)thrownewIllegalArgumentException(".s.IFJDCS");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i!=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i++){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<off;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length-1;i>=offset;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=0){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(max){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(max>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i]
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&buf[i]<=max){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=off;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=limit;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513shorti=offset+length;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalStateException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>=null){if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(longi=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]==null){thrownewIllegalStateException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]!=null){thrownewIllegalStateException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]==null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<offset+length;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset;i<offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>8){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(offset>=offset){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=off;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(offset>=offset){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset+2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<off;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+len-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<limit;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(val*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&buf.length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(val*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<limit;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length&&buf[i]<=value){for(inti=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&value<=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=MAX_VALUE){if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,buffer.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=BYTE_MASK&&offset<=length){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length-1;i>0;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]==0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){if(buf[i]==0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[length];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length==0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("").getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]<=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=length){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value<=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i]<=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=1;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513bits=buf[offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0L){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset&&length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+len-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value<=max){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(val/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=off;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i<0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value.length>0){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>0;i--){buf[i]+=BYTE_MASK*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&value<=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&offset<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=length){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&value<=BYTE_MASK){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value>=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(len>=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=off;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buffer[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<0;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]==null){for(inti=offset+length;i>>0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=offset;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(val>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value<=max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==BYTE_MASK){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=length){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(i<offset+length){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,0,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset;i<offset;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i]!=null){thrownewIllegalArgumentException("").trim();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i]!=null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=length){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=length){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=length){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i].length<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length<=length){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i].length<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<len;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+len-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&value<=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<limit;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<off;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]<0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){if(buf[i]>=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buffer[i]<=value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=val){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf!=null&&value<=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative&&value<=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value<=MAX_VALUE){if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=len;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null||buf[i]!=null)thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null)returnnewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]>=null)thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null)thrownewIllegalArgumentException("".);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i<offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value<=max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null&&value.length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalStateException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(value!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value*BYTE_MASK);}
