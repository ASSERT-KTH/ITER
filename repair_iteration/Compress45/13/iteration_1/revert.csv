projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]>=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,val);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length-offset);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,buffer.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=len;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=limit;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i!=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-2;i>=offset;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513inti=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>max){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){if(buf[i]!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<offset;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset;i<len;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]!=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=len;i++){if(buf[i]<=0){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=buffer[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>=0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513longi=offset+length;i>=offset;i--){buf[i]=val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=len;i++){buffer[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]>=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){thrownewIllegalArgumentException("".trim());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){thrownewIllegalArgumentException("".getMessage());}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(negative){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(length>0){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=(byte)buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i<len;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=offset;i--){buf[i]=null;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<len;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513System.arraycopy(buf,0,buf,0,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length-1;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[length-1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length-1;i>=0;i--){buf[i]=newbyte[1];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null||buf[i].length<=max){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]!=null&&buf[i]<=value){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513}elseif(buf[i]!=null){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null)thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i++){buf[i]=(byte)(value*BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value==0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513while(buf[i]<length){for(inti=offset+length;i<offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=0;i--){buf[i]=(byte)val;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=0;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i++){buf[i]=(byte)value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]==null){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=BYTE_MASK){for(inti=offset+length;i>=offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<offset;i--){buf[i]=(byte)(value/BYTE_MASK);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buffer[i]=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){val+=buf[i]*BYTE_MASK;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){if(buf[i]<=val){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){val+=buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buffer[i]=buf[i].getByteValue();}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){if(buf[i]<=value){continue;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513for(inti=offset+length;i>0;i--){buf[i]=newbyte[buf.length+i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(value!=0){for(inti=offset+length;i>=offset;i--){buf[i]=newbyte[buf[i];}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length-1;i>=0;i--){buf[i]=value;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java513if(buf[i]!=null){for(inti=offset+length;i<0;i--){buf[i]=value;}
