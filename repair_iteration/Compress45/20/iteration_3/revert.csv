projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(length,buf,offset,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(negative,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,size-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,true);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,true);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,false,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,false,true);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){if(length>maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488offset=(byte)(negative?0xff:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488offset=(byte)(negative?0xff:0x80);returnoffset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<maxAsOctalChar){if(length>maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,false,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(negative,buf,offset,length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigInteger(value,buf,offset,length,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,false,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,3);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,8);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,size-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,maxAsOctalChar,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,width,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(negative,buf,offset,length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,value,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buffer,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<=maxAsOctalChar){if(length>0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<maxAsOctalChar){if(length>0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488returnformatLongOctalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<=maxAsOctalChar){if(length>9){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,false,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,color);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,value,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(maxAsOctalChar,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(boolean,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative/1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<maxAsOctalChar){if(length>0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){if(length>0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length-1,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigChar(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<end;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size+2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>limit){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buffer,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,false,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,value,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,false,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,color,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,TarEncoding.DEFAULT_ENCODING);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<end;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<offset;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,true);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,false,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,true);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,null);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,maxAsOctalChar-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,false,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<len;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=0;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-1,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,size,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,width,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,len);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,false,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimal(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(negative,buf,offset,length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488lendemain(length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488safeGet(length)>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length>maxAsOctalChar&&value<=Integer.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length>maxAsOctalChar&&value<=Character.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length>maxAsOctalChar&&value<=Integer.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length>maxAsOctalChar&&value<=0x80)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0,size);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,false,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,value.length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,value.length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,value.length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,value.length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,value.length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,value.length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length,negative,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,false,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,value.length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length<=maxAsOctalChar&&value<=Integer.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length<=maxAsOctalChar&&value<=Long.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length<=maxAsOctalChar&&value<=Character.MAX_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488||(length<=maxAsOctalChar&&value<=Integer.MIN_VALUE)){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<=maxAsOctalChar){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,size-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(negative,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<end;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,size-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<size;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length-false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,length
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,buffer);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative+2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size+9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<maxAsOctalChar){thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,maxAsOctalChar-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,0L);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(negative,buf,offset,length-1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length-9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative?0xff:0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,positive,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-3);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(negative,buf,offset,length-value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,9);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length==maxAsOctalChar){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){if(length<=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size/1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,curr);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,chars);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBytes(value,buf,offset,length-negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488safeGet(length){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,maxAsOctalChar,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value,negative,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,maxAsOctalChar,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,positive,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-4,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0xc0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,positive,0xff);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,value,false);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,curr);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0x8000);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=0){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,maxAsOctalChar+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,value,negative,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset,
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-1,negative,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,positive,value);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,curr);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488prepareBigDecimalBinary(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar||length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488thrownewIllegalArgumentException("");
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar&&value<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,size());
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){for(intidx=offset;idx<length;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<10;idx++){formatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-1,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,positive);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBytes(value,buf,offset,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,bu
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnformatLongOctalBytes(value,buf,offset
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(negative&&length>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,len,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatBigIntegerBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative?0x80:0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,false,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,positive);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-1,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<start;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,buffer);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(negative,buf,offset,length,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,positive,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,negative,4);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<=maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length<maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<maxAsOctalChar||length>maxAsOctalChar){thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,0,length);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>9){for(inti=start;i<len;++i){buf[offset]=(byte)(negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(len>0){for(inti=start;i<len;++i){buf[offset]=(byte)negative?0xff:0x80);returnoffset+length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length,negative,encoding);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimal(value,buf,offset,length-1,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488while(length>maxAsOctalChar){for(intidx=start;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>limit){for(intidx=start;idx<limit;idx++){buf[offset]=(byte)(negative?0xff:0x80);offset+=length;}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0x90);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0xasOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative,0x800);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length,negative?0x80:negative+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBinary(value,buf,offset,length+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,len,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,len+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=9){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=10){returnformatLongOctalBytes(value,buf,offset,length);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length-8);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,maxAsOctalChar<=size+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBinary(value,buf,offset,length,negative,size/2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,size-2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,len,negative,idx);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigIntegerBinary(value,buf,offset,length-10);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>maxAsOctalChar){for(intidx=offset;idx<len;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length>=maxAsOctalChar){for(intidx=offset;idx<length;idx++){buf[offset]=(byte)(negative?0xff:0x80);}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length-1,negative);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigDecimalBytes(value,buf,offset,length,negative,encoding+1);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488FormatUtils.formatBigDecimalBinary(value,buf,offset,length,negative,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigInteger(value,buf,offset,length,negative,maxAsOctalChar);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigBinary(value,buf,offset,length,negative,0x80);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,2);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488formatBigIntegerBytes(value,buf,offset,length,0);
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length<=9){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
projects/Compress45/src/main/java/org/apache/commons/compress/archivers/tar/TarUtils.java488if(length==maxAsOctalChar){returnformatLongOctalBytes(value,buf,offset,length);}else{thrownewIllegalArgumentException("");}
