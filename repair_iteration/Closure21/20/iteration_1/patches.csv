bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stopSideEffects(externs);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs);	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  stopSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getFirstChild());	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  stopAssertionFailedError();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopAssertionFailedError();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError();	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  stopSideEffects(externs,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  level);	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  stopSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs.getLastChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getLastChild());	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  stopSideEffects(null);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(null);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(null);	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
8	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  guardSideEffects(externs);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs);	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  guardedSideEffects();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardedSideEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects();	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs.getLastChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild());	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  guardSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getFirstChild());	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs.getLastChild(),  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  level);	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  guardSideEffects(externs,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level);	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  protectSideEffects(root);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffects(root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  protectSideEffectFreeCode(root);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
20	[BUG]  [BUGGY]  ensureSideEffects(root);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects(root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  guardSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  verifySideEffects();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  verifySideEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifySideEffects();	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  validateSideEffects(externs);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs);	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  validateSideEffects(root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateSideEffects(root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root);	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  validateSideEffects(),  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateSideEffects(),  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level);	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  validateSideEffects(null);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateSideEffects(null);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(null);	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
34	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  ensureSideEffectFreeCode();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffectFreeCode();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode();	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  level);	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  this);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  level);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  assureSideEffects();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  assureSideEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffects();	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  EnsureSideEffects();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  EnsureSideEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	EnsureSideEffects();	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  ensureSideEffects(level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects(level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(level);	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  validateAssertionFailedError();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateAssertionFailedError();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError();	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  validateNodeEffects();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateNodeEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateNodeEffects();	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root);	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs.getLastChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getLastChild());	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getFirstChild());	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  checkSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkSideEffects(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  protectSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffects(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(externs,  root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR;  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR;	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  ensureSideEffects(externs);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs);	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR;  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR;	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode);	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects(externs.cloneTree());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneTree());	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  stopSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root);	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
70	[BUG]  [BUGGY]  stopSideEffects(externs.cloneTree());  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  stopSideEffects(externs.cloneTree());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.cloneTree());	  stopSideEffects();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  checkSideEffects(externs);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs);	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  this);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects();  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  GuardSideEffects  level  =  guardSideEffects();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects();	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  guardSideEffects(externs.getLastChild(),  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root);	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.cloneTree());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  protectSideEffectFreeCode(externs.cloneTree());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.cloneTree());	  protectSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  ensureSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  ensureSideEffects(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getFirstChild());	  ensureSideEffects();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
84	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs);	  guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
85	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  Traversal.traverse(compiler,  root,  this);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  this);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  process(externs,  root);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  process(externs,  root);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root);	  protectSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  Validate.notNull(externs);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  Validate.notNull(externs);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(externs);	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  validateSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  validateSideEffects(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs.getFirstChild());	  validateSideEffects();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  CheckLevel  level  =  level.getLevel();  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  CheckLevel  level  =  level.getLevel();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  level.getLevel();	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
92	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkSideEffects(externs.getFirstChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild());	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
93	[BUG]  [BUGGY]  checkLevel();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkLevel();  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkLevel();	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkSideEffects(externs.cloneTree());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree());	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  checkSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {    [BUGGY]  checkSideEffects(externs.getLastChild());  [BUGGY]    }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getLastChild());	  checkSideEffects();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
