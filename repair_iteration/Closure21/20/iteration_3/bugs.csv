bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ensureSideEffects()  ||  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  ||  level  ==  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  ||  level  ==  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
2	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
3	[BUG]  [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
4	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  >=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level  >=  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  >=  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
5	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
6	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
9	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
10	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  this,  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
11	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  root,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  root,  level);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]  junit.framework.Error:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.Error:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.Error:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
19	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
21	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
22	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
24	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    this);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
25	[BUG]  [BUGGY]  guardSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root.getFirstChild());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  guardSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getFirstChild(),  level);	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
27	[BUG]  [BUGGY]  guardSideEffects(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root.getFirstChild());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  guardSideEffects(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root.getLastChild());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  guardSideEffects(externs.getNext());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getNext());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getNext());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  guardSideEffects(externs.getParent());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getParent());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getParent());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  ensureSideEffectFreeCode(root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(root);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
33	[BUG]  [BUGGY]  protectSideEffectFreeCode(root,  externals);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root,  externals);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
34	[BUG]  [BUGGY]  protectSideEffectFreeCode(root,  externs);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root,  externs);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()!=  Token.EXPR_RESULT);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
36	[BUG]  [BUGGY]  checkSideEffects(root.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root.getLastChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
37	[BUG]  [BUGGY]  checkSideEffects(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root.getLastChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
38	[BUG]  [BUGGY]  checkSideEffects(externs.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getLastChild(),  level);	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
39	[BUG]  [BUGGY]  checkSideEffects(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root.getFirstChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
40	[BUG]  [BUGGY]  checkSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root.getFirstChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
41	[BUG]  [BUGGY]  stopSideEffects(root,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root,  level);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  stopSideEffects(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  level,  USELESS_CODE_ERROR);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  StopSideEffects(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  level,  USELESS_CODE_ERROR);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  stopSideEffects(null,  externs,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(null,  externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(null,  externs,  level);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  stopSideEffects(compiler,  externs,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(compiler,  externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(compiler,  externs,  level);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  stopSideEffects(externs,  level,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  level,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  level,  new  CheckSideEffects());	  stopSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  process(externs,  root,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  level);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
48	[BUG]  [BUGGY]  process(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(compiler,  externs,  root);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.NAME);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.NAME);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.FUNCTION);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.GETPROP);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externs.getType()  ==  Token.GETPROP);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externals.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externals.getType()  ==  Token.NAME);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.EXPR_RESULT  ||  externals.getType()  ==  Token.NAME);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externals,  level);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  roots,  this);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  roots,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  roots,  this);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
55	[BUG]  [BUGGY]  ensureSideEffects(root.cloneTree());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root.cloneTree());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
56	[BUG]  [BUGGY]  ensureSideEffects(externs,  level.cloneTree());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  level.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  level.cloneTree());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
57	[BUG]  [BUGGY]  ensureSideEffects(externs,  root.cloneTree());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  root.cloneTree());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
58	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneTree(),  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.cloneTree(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneTree(),  level);	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
59	[BUG]  [BUGGY]  ensureSideEffects(externs.clone(),  level);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.clone(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.clone(),  level);	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
60	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneNode());  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.cloneNode());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneNode());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
61	[BUG]  [BUGGY]  ensureSideEffects(compiler.cloneTree());  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(compiler.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(compiler.cloneTree());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
62	[BUG]  [BUGGY]  checkSideEffects(root.cloneTree());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root.cloneTree());	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
63	[BUG]  [BUGGY]  checkSideEffects(externs,  root.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root.cloneTree());	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
64	[BUG]  [BUGGY]  checkSideEffects(externs,  level.cloneTree());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  level.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  level.cloneTree());	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
65	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneTree(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree(),  level);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
66	[BUG]  [BUGGY]  checkSideEffects(externs.clone(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.clone(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.clone(),  level);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
67	[BUG]  [BUGGY]  checkSideEffects(externs.cloneNode());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneNode());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneNode());	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
68	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
69	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
70	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
71	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
72	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
73	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
74	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    this);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
75	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
76	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
77	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
78	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
79	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  this,  level);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  this);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externals,  this);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
82	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  this);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externes,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externes,  this);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
83	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externs,  this);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  externs,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  externs,  this);	  NodeTraversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
84	[BUG]  [BUGGY]  stopSideEffects(root);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root);	  stopSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
85	[BUG]  [BUGGY]  stopSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root,  externs);	  stopSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
86	[BUG]  [BUGGY]  stopAssertionFailedError(externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs);	  stopSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
87	[BUG]  [BUGGY]  StopSideEffects(root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(root);	  stopSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
88	[BUG]  [BUGGY]  stopSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(null,  externs);	  stopSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
89	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
90	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
91	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
92	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripEffects(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
95	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
96	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
97	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  -  1);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  -  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  -  1);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
99	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
100	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
101	[BUG]  [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
102	[BUG]  [BUGGY]  stopSideEffects(root.cloneTree());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
103	[BUG]  [BUGGY]  stopSideEffects(externs,  level.cloneTree());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  level.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  level.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
104	[BUG]  [BUGGY]  stopSideEffects(externs,  root.cloneTree());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
105	[BUG]  [BUGGY]  stopSideEffects(externs.cloneTree(),  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.cloneTree(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.cloneTree(),  level);	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
106	[BUG]  [BUGGY]  StopSideEffects(externs,  level.cloneTree());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  level.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  level.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
107	[BUG]  [BUGGY]  StopSideEffects(root.cloneTree());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(root.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
108	[BUG]  [BUGGY]  stopSideEffects(compiler.cloneTree());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(compiler.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(compiler.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
109	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkLevel();  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
110	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
111	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
112	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkLevel();  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkLevel();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkLevel();  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
113	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  checkLevel();  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  checkLevel();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  checkLevel();  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
114	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode)  {  checkLevel();  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(!protectSideEffectFreeCode)  {  checkLevel();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(!protectSideEffectFreeCode)  {  checkLevel();  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  level);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(this.protectSideEffectFreeCode);	  EnsureSideEffects();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
119	[BUG]  [BUGGY]  CheckSideEffects  level  =  getLevel();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  getLevel();	  EnsureSideEffects();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
120	[BUG]  [BUGGY]  CheckSideEffects  level  =  checkLevel();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  checkLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  checkLevel();	  EnsureSideEffects();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkNotNull(externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkNotNull(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkNotNull(externs);	  EnsureSideEffects();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
122	[BUG]  [BUGGY]  GuardSideEffects  level  =  protectSideEffectFreeCode();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  protectSideEffectFreeCode();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  protectSideEffectFreeCode();	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
123	[BUG]  [BUGGY]  GuardSideEffects  level  =  ensureSideEffects();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  ensureSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  ensureSideEffects();	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
124	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs.getFirstChild());	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
125	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs.getLastChild());	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
126	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(root);	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
127	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  level.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  level.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  level.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
128	[BUG]  [BUGGY]  protectSideEffectFreeCode(root.cloneTree());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
129	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root.cloneTree());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
130	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.cloneTree(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.cloneTree(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.cloneTree(),  level);	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
131	[BUG]  [BUGGY]  protectSideEffectFreeCode(compiler.cloneTree());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(compiler.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(compiler.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
132	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.cloneNode());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.cloneNode());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.cloneNode());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
133	[BUG]  [BUGGY]  validateSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs,  root);	  validateSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
134	[BUG]  [BUGGY]  validateSideEffects(root,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root,  level);	  validateSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
135	[BUG]  [BUGGY]  verifySideEffects(externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifySideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifySideEffects(externs);	  validateSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
136	[BUG]  [BUGGY]  verifySideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifySideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifySideEffects(externs,  root);	  validateSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
137	[BUG]  [BUGGY]  verifySideEffects(root);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifySideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifySideEffects(root);	  validateSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
138	[BUG]  [BUGGY]  validateSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root,  externs);	  validateSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
139	[BUG]  [BUGGY]  validateSideEffects(root,  externals);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root,  externals);	  validateSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  validateSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(null,  externs);	  validateSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  verifyNodeEffects();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifyNodeEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifyNodeEffects();	  validateNodeEffects();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
142	[BUG]  [BUGGY]  validateNodeEffects(externs);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateNodeEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateNodeEffects(externs);	  validateNodeEffects();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
143	[BUG]  [BUGGY]  validateEffects();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateEffects();	  validateNodeEffects();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
144	[BUG]  [BUGGY]  validateNodeEffects(root);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateNodeEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateNodeEffects(root);	  validateNodeEffects();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  level,  USELESS_CODE_ERROR);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
146	[BUG]  [BUGGY]  guardSideEffects(root.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root.getLastChild(),  level);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
147	[BUG]  [BUGGY]  guardSideEffects(externs,  root.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root.getLastChild(),  level);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
148	[BUG]  [BUGGY]  guardSideEffects(null,  externs.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  externs.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  externs.getLastChild(),  level);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
149	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  level,  PROTECTOR_FN);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
150	[BUG]  [BUGGY]  Validate.notNull(root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notNull(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(root);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
151	[BUG]  [BUGGY]  Validate.notEmpty(externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notEmpty(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notEmpty(externs);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
152	[BUG]  [BUGGY]  Validate.notEmpty(root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notEmpty(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notEmpty(root);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
153	[BUG]  [BUGGY]  Validate.notNull(externs,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notNull(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(externs,  level);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
154	[BUG]  [BUGGY]  Validate.notEmpty(externs,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notEmpty(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notEmpty(externs,  level);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
155	[BUG]  [BUGGY]  Validate.notEmpty(extrs);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notEmpty(extrs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notEmpty(extrs);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
156	[BUG]  [BUGGY]  Validate.notNull(root,  externs);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notNull(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(root,  externs);	  Validate.notNull(externs);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
157	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
159	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
160	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
161	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
162	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
163	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externals,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
164	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externes,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
165	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
166	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level  +  1);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
167	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
168	[BUG]  [BUGGY]  stopSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root.getFirstChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
169	[BUG]  [BUGGY]  stopSideEffects(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root.getFirstChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
170	[BUG]  [BUGGY]  stopSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getFirstChild(),  level);	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
171	[BUG]  [BUGGY]  stopSideEffects(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root.getLastChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
172	[BUG]  [BUGGY]  StopSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(root.getFirstChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
173	[BUG]  [BUGGY]  stopSideEffects(root,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root,  externs.getFirstChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
174	[BUG]  [BUGGY]  assureSideEffectFreeCode();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  assureSideEffectFreeCode();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffectFreeCode();	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
175	[BUG]  [BUGGY]  assureSideEffects(true);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  assureSideEffects(true);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffects(true);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
176	[BUG]  [BUGGY]  assureSideEffects(),  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  assureSideEffects(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffects(),  level);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
177	[BUG]  [BUGGY]  asSideEffects();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  asSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	asSideEffects();	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
178	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
179	[BUG]  [BUGGY]  ensureSideEffects()  ||  level!=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  ||  level!=  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  ||  level!=  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
180	[BUG]  [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
181	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
182	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
184	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
185	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  if(protectSideEffectFreeCode)  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  if(protectSideEffectFreeCode)  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  if(protectSideEffectFreeCode)  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(this.protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
187	[BUG]  [BUGGY]  guardSideEffects(root);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
188	[BUG]  [BUGGY]  guardSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root,  externs);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  guardSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  externs);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
190	[BUG]  [BUGGY]  guardSideEffects(root,  externals);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root,  externals);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
191	[BUG]  [BUGGY]  guardSideEffects(null);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
192	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  level);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
193	[BUG]  [BUGGY]  guardSideEffects(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(compiler,  externs,  root);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
194	[BUG]  [BUGGY]  GuardSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects(externs,  root,  level);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
195	[BUG]  [BUGGY]  guardSideEffects(null,  externs,  root);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  externs,  root);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
196	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
197	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  guardSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  guardSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  guardSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
198	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
199	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  protectedSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
200	[BUG]  [BUGGY]  protectSideEffectFreeCode(root.getLastChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root.getLastChild());	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
201	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root.getLastChild());	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
202	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getLastChild(),  level);	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
203	[BUG]  [BUGGY]  protectSideEffectFreeCode(root,  externs.getLastChild());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root,  externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root,  externs.getLastChild());	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
204	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root.getFirstChild());	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
205	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
206	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
208	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
210	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
211	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
212	[BUG]  [BUGGY]  validateSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root.getFirstChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
213	[BUG]  [BUGGY]  validateSideEffects(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs,  root.getFirstChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
214	[BUG]  [BUGGY]  validateSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs.getLastChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
215	[BUG]  [BUGGY]  validateSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs.getFirstChild(),  level);	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
216	[BUG]  [BUGGY]  validateSideEffects(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs,  root.getLastChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
217	[BUG]  [BUGGY]  validateSideEffects(root,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(root,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(root,  externs.getFirstChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
218	[BUG]  [BUGGY]  validateSideEffects(null,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(null,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(null,  externs.getFirstChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
219	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs);	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
220	[BUG]  [BUGGY]  protectSideEffectFreeCode(root,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root,  level);	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
221	[BUG]  [BUGGY]  protectSideEffectfreeCode(externs);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectfreeCode(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectfreeCode(externs);	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
222	[BUG]  [BUGGY]  CheckLevel  level  =  externs.getLevel();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  externs.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  externs.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
223	[BUG]  [BUGGY]  CheckLevel  level  =  root.getLevel();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  root.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  root.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
224	[BUG]  [BUGGY]  CheckLevel  level  =  externals.getLevel();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  externals.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  externals.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
225	[BUG]  [BUGGY]  CheckLevel  level  =  nodes.getLevel();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  nodes.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  nodes.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
226	[BUG]  [BUGGY]  CheckLevel  level  =  node.getLevel();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  node.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  node.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
227	[BUG]  [BUGGY]  CheckLevel  level  =  entry.getLevel();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  entry.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  entry.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
228	[BUG]  [BUGGY]  CheckLevel  level  =  externs.getLevel(null);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  externs.getLevel(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  externs.getLevel(null);	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
229	[BUG]  [BUGGY]  validateSideEffects(),  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  USELESS_CODE_ERROR);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
230	[BUG]  [BUGGY]  validateSideEffects(),  externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  externs);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
231	[BUG]  [BUGGY]  validateSideEffects(),  root);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  root);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
232	[BUG]  [BUGGY]  validateSideEffects(),  level  +  1);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level  +  1);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
233	[BUG]  [BUGGY]  validateSideEffects(),  level,  DEFAULT_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  DEFAULT_CODE_ERROR);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
234	[BUG]  [BUGGY]  validateSideEffects(),  externals);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  externals);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
235	[BUG]  [BUGGY]  validateSideEffects(),  level,  false);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  false);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  false);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
236	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  level);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
237	[BUG]  [BUGGY]  checkSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root,  externs);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
238	[BUG]  [BUGGY]  checkSideEffects(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(compiler,  externs,  root);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
239	[BUG]  [BUGGY]  ensureSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  root);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
240	[BUG]  [BUGGY]  CheckSideEffects  level  =  checkSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  checkSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  checkSideEffects(externs,  root);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getType()  ==  Token.FUNCTION);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
242	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
243	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
244	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
245	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
246	[BUG]  [BUGGY]  ensureSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root,  externs);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
247	[BUG]  [BUGGY]  ensureSideEffects(root,  externals);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root,  externals);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
248	[BUG]  [BUGGY]  ensureSideEffects(externs,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  level);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
249	[BUG]  [BUGGY]  ensureSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(null,  externs);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
250	[BUG]  [BUGGY]  ensureSideEffects(null);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(null);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
251	[BUG]  [BUGGY]  assureSideEffects(root);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  assureSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffects(root);	  ensureSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
252	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection(),  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection(),  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection(),  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
253	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
254	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
255	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
256	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
257	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externes,  level);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
258	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externs,  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  externs,  level);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
259	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  Level.USER_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  Level.USER_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  Level.USER_CODE_ERROR);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
260	[BUG]  [BUGGY]  protectSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(externs,  root,  level);	  protectSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
261	[BUG]  [BUGGY]  protectSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(root,  externs);	  protectSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
262	[BUG]  [BUGGY]  protectSideEffects(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffects(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(compiler,  externs,  root);	  protectSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
263	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild(),  level);	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
264	[BUG]  [BUGGY]  checkSideEffects(root,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root,  externs.getFirstChild());	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
265	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
266	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  junit,  externs,  this);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  junit,  externs,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  junit,  externs,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
267	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
268	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    level);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
269	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    level);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    level);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
271	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    level);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
272	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externs);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(root,  externs);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
273	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externals);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(root,  externals);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
274	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs,  root);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
275	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(null,  externs);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
276	[BUG]  [BUGGY]  ProtectionSideEffects  level  =  guardSideEffects(root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ProtectionSideEffects  level  =  guardSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ProtectionSideEffects  level  =  guardSideEffects(root);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
277	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externes);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(root,  externes);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(root,  externes);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
278	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  level);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
279	[BUG]  [BUGGY]  stopSideEffects(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(compiler,  externs,  root);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
280	[BUG]  [BUGGY]  StopSideEffects(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  root,  level);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
281	[BUG]  [BUGGY]  StopSideEffects(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(compiler,  externs,  root);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
282	[BUG]  [BUGGY]  stopSideEffects(null,  externs,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(null,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(null,  externs,  root);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
283	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
284	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externals,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
285	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  roots,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  roots,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
286	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externes,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
287	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  new  StripProtection());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
288	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
289	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
290	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  this);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
291	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  level);	  Traversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
292	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  this,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  root,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  this,  level);	  Traversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
293	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externals,  this);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  externals,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  externals,  this);	  Traversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
294	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externes,  this);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  externes,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  externes,  this);	  Traversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode,  level);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
296	[BUG]  [BUGGY]  Preconditions.checkState(level  ==  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(level  ==  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(level  ==  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
297	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
298	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
300	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
301	[BUG]  [BUGGY]  Preconditions.checkState(level!=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(level!=  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(level!=  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
302	[BUG]  [BUGGY]  ensureSideEffects(root,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root,  level);	  ensureSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
303	[BUG]  [BUGGY]  ensureSideEffects(compiler,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(compiler,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(compiler,  root);	  ensureSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
304	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
305	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripSideEffects());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
306	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects(),  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
307	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
308	[BUG]  [BUGGY]  protectSideEffects(root,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffects(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(root,  level);	  protectSideEffects(root);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
309	[BUG]  [BUGGY]  protectSideEffectFreeCode(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root.getFirstChild());	  protectSideEffectFreeCode(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
310	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getFirstChild(),  level);	  protectSideEffectFreeCode(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
311	[BUG]  [BUGGY]  protectSideEffectFreeCode(root,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(root,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(root,  externs.getFirstChild());	  protectSideEffectFreeCode(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
312	[BUG]  [BUGGY]  GuardedSideEffects  level  =  guardedSideEffects();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardedSideEffects  level  =  guardedSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardedSideEffects  level  =  guardedSideEffects();	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
313	[BUG]  [BUGGY]  guardedSideEffects(externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(externs);	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
314	[BUG]  [BUGGY]  guardedSideEffects(externs,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(externs,  level);	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
315	[BUG]  [BUGGY]  guardedSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(externs.getFirstChild());	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
316	[BUG]  [BUGGY]  guardedSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(externs.getLastChild());	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
317	[BUG]  [BUGGY]  guardedSideEffects(null);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(null);	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
318	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
319	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
320	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
321	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
322	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
323	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  protectedSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
325	[BUG]  [BUGGY]  CheckSideEffects  level  =  checkSideEffects();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  checkSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  checkSideEffects();	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode)  {  checkSideEffects();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
328	[BUG]  [BUGGY]  checkSideEffects(root);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root);	  checkSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
329	[BUG]  [BUGGY]  checkSideEffects(root,  externals);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(root,  externals);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(root,  externals);	  checkSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
330	[BUG]  [BUGGY]  checkSideEffects(null,  externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(null,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(null,  externs);	  checkSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
331	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
332	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
333	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
334	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  this);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
335	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
336	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
337	[BUG]  [BUGGY]  guardSideEffects(externs.getFirstChild(),  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getFirstChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
338	[BUG]  [BUGGY]  guardSideEffects(root.getLastChild(),  externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root.getLastChild(),  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root.getLastChild(),  externs);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
339	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root,  level);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
340	[BUG]  [BUGGY]  guardSideEffects(compiler.getLastChild(),  root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(compiler.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(compiler.getLastChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
341	[BUG]  [BUGGY]  guardSideEffects(root.getFirstChild(),  externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root.getFirstChild(),  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root.getFirstChild(),  externs);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
342	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  node);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  node);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  node);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
343	[BUG]  [BUGGY]  stopSideEffects(null,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(null,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(null,  level);	  stopSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
344	[BUG]  [BUGGY]  stopSideEffects(externs,  null);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  null);	  stopSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
345	[BUG]  [BUGGY]  stopSideEffects(new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(new  CheckSideEffects());	  stopSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
346	[BUG]  [BUGGY]  StopSideEffects(externs);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs);	  stopSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
347	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
348	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
349	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode))  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
351	[BUG]  [BUGGY]  Context.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Context.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Context.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  compiler.reportCodeChange();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
352	[BUG]  [BUGGY]  validateAssertionFailedError(externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(externs);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
353	[BUG]  [BUGGY]  validateAssertionFailedError(null);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(null);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
354	[BUG]  [BUGGY]  validateAssertionFailedError(root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(root);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
355	[BUG]  [BUGGY]  validateAssertionFailedError(false);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(false);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(false);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
356	[BUG]  [BUGGY]  validateAssertionFailedError(compiler);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(compiler);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(compiler);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
357	[BUG]  [BUGGY]  validateAssertionFailedError(externs,  root);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(externs,  root);	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
358	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
359	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
360	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
361	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
362	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
363	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
364	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkStandardErrors();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkStandardErrors();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkStandardErrors();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
365	[BUG]  [BUGGY]  safeSideEffects)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safeSideEffects)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safeSideEffects)  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
366	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  checkStandardEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely(protectSideEffectFreeCode)  {  checkStandardEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely(protectSideEffectFreeCode)  {  checkStandardEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
367	[BUG]  [BUGGY]  ensureSideEffects(root.getFirstChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root.getFirstChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
368	[BUG]  [BUGGY]  ensureSideEffects(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getLastChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
369	[BUG]  [BUGGY]  ensureSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getFirstChild(),  level);	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
370	[BUG]  [BUGGY]  ensureSideEffects(externs,  root.getFirstChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  root.getFirstChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
371	[BUG]  [BUGGY]  ensureSideEffects(externs,  root.getLastChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  root.getLastChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
372	[BUG]  [BUGGY]  ensureSideEffects(null,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(null,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(null,  externs.getFirstChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
373	[BUG]  [BUGGY]  ensureSideEffects(root,  externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(root,  externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(root,  externs.getFirstChild());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
374	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
375	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
376	[BUG]  [BUGGY]  warnSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  warnSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	warnSideEffectFreeCode(externs,  level,  USELESS_CODE_ERROR);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
377	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs,  level);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
378	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  level,  DEFAULT_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  level,  DEFAULT_CODE_ERROR);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
379	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR  +  1);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR  +  1);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
380	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
381	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
382	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level  +  1);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level  +  1);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
383	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  this);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  this);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
384	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  protectionSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
385	[BUG]  [BUGGY]  stopSideEffects(root.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(root.getLastChild());	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
386	[BUG]  [BUGGY]  stopSideEffects(externs.getLastChild(),  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getLastChild(),  level);	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
387	[BUG]  [BUGGY]  StopSideEffects(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs.getFirstChild());	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
388	[BUG]  [BUGGY]  guardSideEffects(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level,  USELESS_CODE_ERROR);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
389	[BUG]  [BUGGY]  guardSideEffects(root,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root,  level);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
390	[BUG]  [BUGGY]  guardSideEffects(null,  externs,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  externs,  level);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
391	[BUG]  [BUGGY]  guardSideEffects(externs,  level,  DEFAULT_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level,  DEFAULT_CODE_ERROR);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
392	[BUG]  [BUGGY]  guardSideEffects(externs,  level,  false);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  level,  false);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level,  false);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
393	[BUG]  [BUGGY]  guardSideEffects(externs,  level,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  level,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level,  new  CheckSideEffects());	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
394	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
395	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externes,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externes,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
396	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externals,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externals,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
397	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
398	[BUG]  [BUGGY]  Traversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  externs,  new  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
399	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  StripProtection());  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  level,  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  level,  StripProtection());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
400	[BUG]  [BUGGY]  ensureSideEffectfreeCode();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectfreeCode();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectfreeCode();	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
401	[BUG]  [BUGGY]  ensureSideEffectFreeCode(level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(level);	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
402	[BUG]  [BUGGY]  ensureSideEffectFreeCode(null);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(null);	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
403	[BUG]  [BUGGY]  ensureSideEffectFreeCode(compiler);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(compiler);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(compiler);	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
404	[BUG]  [BUGGY]  validateSideEffects(null,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(null,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(null,  level);	  validateSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
405	[BUG]  [BUGGY]  validateSideEffects(externs,  null);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs,  null);	  validateSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
406	[BUG]  [BUGGY]  validateSideEffects(new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(new  CheckSideEffects());	  validateSideEffects(null);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
407	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root,  level);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
408	[BUG]  [BUGGY]  protectSideEffectFreeCode(compiler,  externs,  root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(compiler,  externs,  root);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
409	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs,  root);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs,  root);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
410	[BUG]  [BUGGY]  protectSideEffectFreeCode(compiler,  externs);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(compiler,  externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(compiler,  externs);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
411	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs,  root,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs,  root,  level);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
412	[BUG]  [BUGGY]  stopAssertionFailedError(null);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(null);	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
413	[BUG]  [BUGGY]  stopAssertionFailedError(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs.getFirstChild());	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
414	[BUG]  [BUGGY]  stopAssertionFailedError(compiler);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(compiler);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(compiler);	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
415	[BUG]  [BUGGY]  stopAssertionFailedError(level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(level);	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
416	[BUG]  [BUGGY]  stopAssertionFailedError(externs,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs,  level);	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
417	[BUG]  [BUGGY]  ensureSideEffects(null,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(null,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(null,  level);	  ensureSideEffects(level);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
418	[BUG]  [BUGGY]  ensureSideEffects(compiler,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(compiler,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(compiler,  level);	  ensureSideEffects(level);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
419	[BUG]  [BUGGY]  guardSideEffects(root.getLastChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(root.getLastChild());	  guardSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
420	[BUG]  [BUGGY]  guardSideEffects(null,  externs.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  externs.getLastChild());	  guardSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
421	[BUG]  [BUGGY]  guardedSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardedSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardedSideEffects(externs,  root);	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
422	[BUG]  [BUGGY]  GuardedSideEffects  level  =  new  GuardedSideEffects();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardedSideEffects  level  =  new  GuardedSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardedSideEffects  level  =  new  GuardedSideEffects();	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
423	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  this);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  this);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
424	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  USELESS_CODE_ERROR);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
425	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  protectedSideEffectFreeCode);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
426	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  protectionSideEffectFreeCode);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
427	[BUG]  [BUGGY]  checkSideEffects(externs,  root,  false);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  root,  false);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  root,  false);	  checkSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
428	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  level  +  1);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
429	[BUG]  [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionError:  NodeTraversal.traverse(compiler,  externs,  this);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
430	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
431	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
432	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
433	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
434	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  level,  protectSideEffectFreeCode);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
435	[BUG]  [BUGGY]  GuardSideEffects(externs.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects(externs.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects(externs.getFirstChild(),  level);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
436	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  level  +  1);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  level  +  1);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  level  +  1);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
437	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStandardEffects());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStandardEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStandardEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
438	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStatement());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStatement());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripStatement());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
439	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getLastChild(),  root);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getLastChild(),  root);	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
440	[BUG]  [BUGGY]  System.err.println( "Standard  error: "  +  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  System.err.println( "Standard  error: "  +  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	System.err.println( "Standard  error: "  +  level);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
441	[BUG]  [BUGGY]  PrüfStandard  error  =  checkStandardEffects();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  PrüfStandard  error  =  checkStandardEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	PrüfStandard  error  =  checkStandardEffects();	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
442	[BUG]  [BUGGY]  PrüfState.checkState(false, "Standard  error: "  +  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  PrüfState.checkState(false, "Standard  error: "  +  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	PrüfState.checkState(false, "Standard  error: "  +  level);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
443	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  System.err.println( "Standard  error: "  +  level);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
444	[BUG]  [BUGGY]  validateAssertionFailedError(externs.getFirstChild());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(externs.getFirstChild());	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
445	[BUG]  [BUGGY]  validateAssertionFailedError(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateAssertionFailedError(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateAssertionFailedError(externs.getLastChild());	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
446	[BUG]  [BUGGY]  ensureAssertionFailedError();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureAssertionFailedError();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureAssertionFailedError();	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
447	[BUG]  [BUGGY]  verifyAssertionFailedError();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifyAssertionFailedError();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifyAssertionFailedError();	  validateAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
448	[BUG]  [BUGGY]  CheckLevel  level  =  getLevel(externs).getLevel();  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  getLevel(externs).getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  getLevel(externs).getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
449	[BUG]  [BUGGY]  CheckLevel  level  =  externes.getLevel();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  externes.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  externes.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
450	[BUG]  [BUGGY]  CheckLevel  level  =  interns.getLevel();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  interns.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  interns.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
451	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripSideEffects());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
452	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
453	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripEffects());	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
454	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  this);	  NodeTraversal.traverse(compiler,    root,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
455	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  securitySideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  securitySideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  securitySideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
456	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  PROTECTOR_FN);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
457	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
458	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode)  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
459	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root,  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root,  level,  protectSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
460	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree(),  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneTree(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree(),  root);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
461	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree(),  this);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneTree(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree(),  this);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
462	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild(),  root);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.getFirstChild(),  root);	  protectSideEffectFreeCode(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
463	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneTree(),  root);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.cloneTree(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneTree(),  root);	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
464	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneTree(),  true);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.cloneTree(),  true);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneTree(),  true);	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
465	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getType()  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getType()  ==  Token.EXPR_RESULT);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
466	[BUG]  [BUGGY]  assureSideEffects(externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  assureSideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	assureSideEffects(externs);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
467	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getLastChild().getString());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getLastChild().getString());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getLastChild().getString());	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
468	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild()!=  null);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild()!=  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getFirstChild()!=  null);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
469	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild()  ==  null);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild()  ==  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getFirstChild()  ==  null);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
470	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  2);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  2);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  2);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
471	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level  +  1,  new  CheckSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level    +    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
472	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  null);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs,  null);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
473	[BUG]  [BUGGY]  GuardSideEffects  level  =  protectSideEffectFreeCode(externs);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  protectSideEffectFreeCode(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  protectSideEffectFreeCode(externs);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
474	[BUG]  [BUGGY]  ensureSideEffects(externs.getFirstChild(),  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getFirstChild(),  root);	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
475	[BUG]  [BUGGY]  ensureSideEffects(externs.getNext());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getNext());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getNext());	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
476	[BUG]  [BUGGY]  StopSideEffects(externs,  root.cloneTree());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  root.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  root.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
477	[BUG]  [BUGGY]  stopSideEffects(externs.cloneTree(),  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.cloneTree(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.cloneTree(),  root);	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
478	[BUG]  [BUGGY]  stopSideEffects(externs,  nodes.cloneTree());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  nodes.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  nodes.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
479	[BUG]  [BUGGY]  stopSideEffects(externs.cloneNode());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.cloneNode());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.cloneNode());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
480	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
481	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  this,  level);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
482	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.SEVERE_ERROR);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
483	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  Level.WARNING);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  Level.WARNING);	  NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
484	[BUG]  [BUGGY]  GuardSideEffects(externs,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects(externs,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects(externs,  level,  USELESS_CODE_ERROR);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
485	[BUG]  [BUGGY]  guardSideEffects(externs,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  level,  protectSideEffectFreeCode);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
486	[BUG]  [BUGGY]  guardSideEffects(null,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(null,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(null,  level);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
487	[BUG]  [BUGGY]  guardSideEffects(externs,  new  CheckLevel());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  new  CheckLevel());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  new  CheckLevel());	  guardSideEffects(externs,    level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
488	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  Level.USER_CODE_ERROR);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
489	[BUG]  [BUGGY]  GuardSideEffects  level  =  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  USELESS_CODE_ERROR;	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
490	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
491	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
492	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
493	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  protectSideEffectFreeCode(root);  }  else  {  NodeTraversal.traverse(compiler,  root,  this);  }	  protectSideEffectFreeCode(root);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
494	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
495	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  this);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  this);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
496	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  protectedSideEffectFreeCode);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
497	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  protectionSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  protectionSideEffectFreeCode);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  	69	None	replace
498	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  protectSideEffectFreeCode);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  	69	None	replace
499	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  guardSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  guardSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  guardSideEffectFreeCode);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  	69	None	replace
500	[BUG]  [BUGGY]  stopSideEffects(externs,  root,  securitySideEffectFreeCode);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  root,  securitySideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  root,  securitySideEffectFreeCode);	  stopSideEffects(externs,    root);    	non-compiled	[CE]  	69	None	replace
501	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  	30	None	replace
502	[BUG]  [BUGGY]  Validate.notNull(externs,  guardSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notNull(externs,  guardSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(externs,  guardSideEffectFreeCode);	  Validate.notNull(externs);    	non-compiled	[CE]  	88	None	replace
503	[BUG]  [BUGGY]  Validate.notNull(externs,  protectedSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notNull(externs,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notNull(externs,  protectedSideEffectFreeCode);	  Validate.notNull(externs);    	non-compiled	[CE]  	88	None	replace
504	[BUG]  [BUGGY]  Validate.notEmpty(externs,  protectSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.notEmpty(externs,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.notEmpty(externs,  protectSideEffectFreeCode);	  Validate.notNull(externs);    	non-compiled	[CE]  	88	None	replace
505	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  CheckSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  	76	None	replace
506	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripSideEffects());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripSideEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripSideEffects());    	non-compiled	[CE]  	76	None	replace
507	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripProtection(),  level);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  	31	None	replace
508	[BUG]  [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  +  1;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  +  1;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  +  1;	  ensureSideEffects()    &&    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	64	None	replace
509	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  	81	None	replace
510	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripSideEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  	81	None	replace
511	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  	81	None	replace
512	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripEffects());	  NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  	81	None	replace
513	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild(),  root);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild(),  root);	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  	92	None	replace
514	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild(),  this);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getFirstChild(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild(),  this);	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  	92	None	replace
515	[BUG]  [BUGGY]  StopSideEffects(externs,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  null);	  stopSideEffects(null);    	non-compiled	[CE]  	6	None	replace
516	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  root);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    this);    	non-compiled	[CE]  	32	None	replace
517	[BUG]  [BUGGY]  ensureSideEffects(externs.getLastChild(),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getLastChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getLastChild(),  level);	  ensureSideEffects(level);    	non-compiled	[CE]  	56	None	replace
518	[BUG]  [BUGGY]  StopSideEffects(externs,  root.getFirstChild());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  root.getFirstChild());	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  	2	None	replace
519	[BUG]  [BUGGY]  stopSideEffects(externs.getFirstChild(),  root);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getFirstChild(),  root);	  stopSideEffects(externs.getFirstChild());    	non-compiled	[CE]  	2	None	replace
520	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  level,  new  CheckSideEffects());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  level,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  level,  new  CheckSideEffects());	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  	38	None	replace
521	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs.getFirstChild());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs.getFirstChild());	  ensureSideEffectFreeCode();    	non-compiled	[CE]  	37	None	replace
522	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs.getLastChild());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs.getLastChild());	  ensureSideEffectFreeCode();    	non-compiled	[CE]  	37	None	replace
523	[BUG]  [BUGGY]  ensureSideEffectfreeCode(externs);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectfreeCode(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectfreeCode(externs);	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
524	[BUG]  [BUGGY]  ensureSideEffectFreeCode(externs.cloneTree());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectFreeCode(externs.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectFreeCode(externs.cloneTree());	  ensureSideEffectFreeCode();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
525	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externes,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
526	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripEffects());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externals,  new  StripEffects());	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripEffects());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
527	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  +  1;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  +  1;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  +  1;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
528	[BUG]  [BUGGY]  ensureSideEffects()  |&  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  |&  level  ==  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  |&  level  ==  USELESS_CODE_ERROR;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
529	[BUG]  [BUGGY]  validateSideEffects(externs.getFirstChild(),  root);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs.getFirstChild(),  root);	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
530	[BUG]  [BUGGY]  validateSideEffects(externs.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(externs.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(externs.cloneTree());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
531	[BUG]  [BUGGY]  Preconditions.checkState(externs.getFirstChild()!=  null);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getFirstChild()!=  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getFirstChild()!=  null);	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
532	[BUG]  [BUGGY]  checkSideEffects(externs.getLastChild(),  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getLastChild(),  root);	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
533	[BUG]  [BUGGY]  checkSideEffects(externs.getLastChild(),  this);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getLastChild(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getLastChild(),  this);	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
534	[BUG]  [BUGGY]  Preconditions.checkState(!this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!this.protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!this.protectSideEffectFreeCode);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
535	[BUG]  [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
536	[BUG]  [BUGGY]  process(externs,  root,  this);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  this);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
537	[BUG]  [BUGGY]  process(externs,  root,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  USELESS_CODE_ERROR);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
538	[BUG]  [BUGGY]  process(externs,  root,  securitySideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  securitySideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  securitySideEffectFreeCode);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
539	[BUG]  [BUGGY]  process(externs,  root,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  protectedSideEffectFreeCode);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
540	[BUG]  [BUGGY]  process(externs,  root,  state);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  state);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  state);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
541	[BUG]  [BUGGY]  process(externs,  root,  false);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  false);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  false);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
542	[BUG]  [BUGGY]  stopAssertionFailedError(externs,  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs,  root);	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
543	[BUG]  [BUGGY]  stopSideEffectsError();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffectsError();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffectsError();	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
544	[BUG]  [BUGGY]  stopAssertionFailedError(externs.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs.getLastChild());	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
545	[BUG]  [BUGGY]  stopAssertionFailedError(externs.getString());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs.getString());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs.getString());	  stopAssertionFailedError();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
546	[BUG]  [BUGGY]  CheckLevel  level  =  level.isStatement()?  USELESS_CODE_ERROR  :  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  level.isStatement()?  USELESS_CODE_ERROR  :  USELESS_CODE_ERROR;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  level.isStatement()?  USELESS_CODE_ERROR  :  USELESS_CODE_ERROR;	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
547	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  this);  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
548	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	if(protectSideEffectFreeCode)  {  checkLevel();  }  else  {  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  }	  checkLevel();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
549	[BUG]  [BUGGY]  protectSideEffects(externs,  root,  this);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffects(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffects(externs,  root,  this);	  protectSideEffects(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
550	[BUG]  [BUGGY]  stopSideEffects(externs.getLastChild(),  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.getLastChild(),  root);	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
551	[BUG]  [BUGGY]  StopSideEffects(externs,  root.getLastChild());  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  root.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  root.getLastChild());	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
552	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  null);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externes,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
553	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs.cloneTree(),  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs.cloneTree(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs.cloneTree(),  root);	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
554	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  nodes.cloneTree());  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  nodes.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  nodes.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
555	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  junit.framework.AssertionFailedError);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  junit.framework.AssertionFailedError);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  junit.framework.AssertionFailedError);	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
556	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  this);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  this);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
557	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  protectionSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  protectionSideEffectFreeCode);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
558	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  protectedSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  protectedSideEffectFreeCode);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
559	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  protectSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  protectSideEffectFreeCode);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
560	[BUG]  [BUGGY]  guardSideEffects(externs,  root,  safetySideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root,  safetySideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root,  safetySideEffectFreeCode);	  guardSideEffects(externs,    root);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
561	[BUG]  [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkSideEffects();  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkSideEffects();  }  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  checkSideEffects();  }	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
562	[BUG]  [BUGGY]  guardSideEffects(externs,  nodes);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  nodes);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  nodes);	  guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
563	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectionSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root,  protectionSideEffectFreeCode);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
564	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root,  protectSideEffectFreeCode);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
565	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  this);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root,  this);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
566	[BUG]  [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectedSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.getLastChild(),  root,  protectedSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.getLastChild(),  root,  protectedSideEffectFreeCode);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
567	[BUG]  [BUGGY]  checkSideEffects(externs,  junit.framework.AssertionFailedError);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  junit.framework.AssertionFailedError);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  junit.framework.AssertionFailedError);	  checkSideEffects(externs);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
568	[BUG]  [BUGGY]  checkSideEffects(null);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(null);	  checkSideEffects(externs);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
569	[BUG]  [BUGGY]  CheckSideEffects  level  =  checkSideEffects(externs);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  checkSideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  checkSideEffects(externs);	  checkSideEffects(externs);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
570	[BUG]  [BUGGY]  CheckSideEffects  level  =  new  CheckSideEffects();  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  new  CheckSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  new  CheckSideEffects();	  EnsureSideEffects();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
571	[BUG]  [BUGGY]  CheckSideEffects  level  =  new  CheckSideEffects(externs,  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  new  CheckSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  new  CheckSideEffects(externs,  root);	  EnsureSideEffects();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
572	[BUG]  [BUGGY]  StopSideEffects(externs,  root);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  StopSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	StopSideEffects(externs,  root);	  stopSideEffects(externs,    level);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
573	[BUG]  [BUGGY]  stopSideEffects(externs,  new  CheckLevel());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  new  CheckLevel());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  new  CheckLevel());	  stopSideEffects(externs,    level);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
574	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  root,  this);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  root,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  root,  this);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
575	[BUG]  [BUGGY]  validateSideEffects(),  internalNodes);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  internalNodes);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  internalNodes);	  validateSideEffects(),    level);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
576	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  level);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  roots,  level);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
577	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(level,  USELESS_CODE_ERROR));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection(level,  USELESS_CODE_ERROR));  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection(level,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
578	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    root,    level);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
579	[BUG]  [BUGGY]  PrüfLevel  level  =  checkSideEffects();  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  PrüfLevel  level  =  checkSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	PrüfLevel  level  =  checkSideEffects();	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
580	[BUG]  [BUGGY]  PrüfLevel.checkSideEffects();  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  PrüfLevel.checkSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	PrüfLevel.checkSideEffects();	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    System.err.println(   "Standard    error:   "    +    level);    }    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
581	[BUG]  [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  root,  level);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionError:  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionError:  NodeTraversal.traverse(compiler,  root,  level);	  junit.framework.AssertionError:    NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
582	[BUG]  [BUGGY]  ensureSideEffectsVisible(externs);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffectsVisible(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffectsVisible(externs);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
583	[BUG]  [BUGGY]  protectSideEffectFreeCode(null);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(null);	  protectSideEffectFreeCode(externs);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
584	[BUG]  [BUGGY]  stopSideEffects(externs.removeFirstChild());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs.removeFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs.removeFirstChild());	  stopSideEffects(externs.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
585	[BUG]  [BUGGY]  guardSideEffects(externs.removeFirstChild());  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.removeFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.removeFirstChild());	  guardSideEffects(externs.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
586	[BUG]  [BUGGY]  guardSideEffects(externs,  nodes.getLastChild());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  nodes.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  nodes.getLastChild());	  guardSideEffects(externs.getLastChild());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
587	[BUG]  [BUGGY]  ensureSideEffects(level,  USELESS_CODE_ERROR);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(level,  USELESS_CODE_ERROR);	  ensureSideEffects(level);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
588	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  level);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs,  level);	  guardSideEffects(externs,    level);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
589	[BUG]  [BUGGY]  guardSideEffects(externs,  new  CheckLevel(level));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  new  CheckLevel(level));  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  new  CheckLevel(level));	  guardSideEffects(externs,    level);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
590	[BUG]  [BUGGY]  guardSideEffects(externs.cloneTree());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs.cloneTree());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
591	[BUG]  [BUGGY]  guardSideEffects(externs,  nodes.getFirstChild());  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  nodes.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  nodes.getFirstChild());	  guardSideEffects(externs.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
592	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtectionBuilder());  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtectionBuilder());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  new  StripProtectionBuilder());	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    new    StripProtection());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
593	[BUG]  [BUGGY]  checkLevel(level,  USELESS_CODE_ERROR);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkLevel(level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkLevel(level,  USELESS_CODE_ERROR);	  checkLevel();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
594	[BUG]  [BUGGY]  checkLevel(level);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkLevel(level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkLevel(level);	  checkLevel();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
595	[BUG]  [BUGGY]  CheckLevel  level  =  level.evaluate(externs,  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  level.evaluate(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  level.evaluate(externs,  root);	  checkLevel();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
596	[BUG]  [BUGGY]  CheckLevel  level  =  level.getNormalizedCheckLevel();  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  level.getNormalizedCheckLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  level.getNormalizedCheckLevel();	  checkLevel();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
597	[BUG]  [BUGGY]  validateNodeEffects(externs,  root);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateNodeEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateNodeEffects(externs,  root);	  validateNodeEffects();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
598	[BUG]  [BUGGY]  validateNodeEffects(null);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateNodeEffects(null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateNodeEffects(null);	  validateNodeEffects();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
599	[BUG]  [BUGGY]  Preconditions.checkArgument(!protectSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkArgument(!protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkArgument(!protectSideEffectFreeCode);	  Preconditions.checkState(!protectSideEffectFreeCode);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
600	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    externals,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
601	[BUG]  [BUGGY]  stopAssertionFailedError(externs.cloneTree());  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopAssertionFailedError(externs.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopAssertionFailedError(externs.cloneTree());	  stopAssertionFailedError();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
602	[BUG]  [BUGGY]  stopSideEffects(externs,  node.cloneTree());  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  stopSideEffects(externs,  node.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	stopSideEffects(externs,  node.cloneTree());	  stopSideEffects(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
603	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this,  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    this,    level);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
604	[BUG]  [BUGGY]  Preconditions.checkState(externs.getFirstChild()  ==  null);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getFirstChild()  ==  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getFirstChild()  ==  null);	  EnsureSideEffects();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
605	[BUG]  [BUGGY]  Preconditions.checkState(externs.getFirstChild()  ==  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Preconditions.checkState(externs.getFirstChild()  ==  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Preconditions.checkState(externs.getFirstChild()  ==  root);	  EnsureSideEffects();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
606	[BUG]  [BUGGY]  CheckSideEffects  level  =  checkStandardEffects();  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckSideEffects  level  =  checkStandardEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckSideEffects  level  =  checkStandardEffects();	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
607	[BUG]  [BUGGY]  Context.checkState(!protectSideEffectFreeCode);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Context.checkState(!protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Context.checkState(!protectSideEffectFreeCode);	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    compiler.reportCodeChange();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
608	[BUG]  [BUGGY]  guardSideEffects(externs,  compiler.getLastChild(),  root);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  compiler.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  compiler.getLastChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
609	[BUG]  [BUGGY]  guardSideEffects(externs,  node.getLastChild(),  root);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  node.getLastChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  node.getLastChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
610	[BUG]  [BUGGY]  guardSideEffects(externs,  externs.getFirstChild(),  root);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  externs.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  externs.getFirstChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
611	[BUG]  [BUGGY]  guardSideEffects(externs,  root.getFirstChild(),  root);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root.getFirstChild(),  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root.getFirstChild(),  root);	  guardSideEffects(externs.getLastChild(),    root);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
612	[BUG]  [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	safely())  {  checkSideEffects();  }  else  {  NodeTraversal.traverse(compiler,  root,  new  StripProtection());	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    root,    new    StripProtection());    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
613	[BUG]  [BUGGY]  ensureSideEffects(externs,  nodes.cloneTree());  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs,  nodes.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs,  nodes.cloneTree());	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
614	[BUG]  [BUGGY]  ensureSideEffects(externs.cloneTree(),  this);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.cloneTree(),  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.cloneTree(),  this);	  ensureSideEffects(externs.cloneTree());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
615	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild(),  true);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getFirstChild(),  true);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild(),  true);	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
616	[BUG]  [BUGGY]  checkSideEffects(externs.getFirstChild(),  null);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.getFirstChild(),  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.getFirstChild(),  null);	  checkSideEffects(externs.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
617	[BUG]  [BUGGY]  Validate.isTrue(root.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.isTrue(root.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.isTrue(root.getType()  ==  Token.EXPR_RESULT);	  Validate.notNull(externs);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
618	[BUG]  [BUGGY]  Validate.isTrue(root.getType()  ==  Token.NAME);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.isTrue(root.getType()  ==  Token.NAME);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.isTrue(root.getType()  ==  Token.NAME);	  Validate.notNull(externs);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
619	[BUG]  [BUGGY]  Validate.isTrue(root.getType()  ==  Token.ASSIGN);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Validate.isTrue(root.getType()  ==  Token.ASSIGN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Validate.isTrue(root.getType()  ==  Token.ASSIGN);	  Validate.notNull(externs);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
620	[BUG]  [BUGGY]  checkSideEffects(externs,  null);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  null);	  checkSideEffects(externs);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
621	[BUG]  [BUGGY]  verifySideEffects(externs,  root.getFirstChild());  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  verifySideEffects(externs,  root.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	verifySideEffects(externs,  root.getFirstChild());	  validateSideEffects(externs.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
622	[BUG]  [BUGGY]  checkSideEffects(externs,  nodes.getLastChild());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  nodes.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  nodes.getLastChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
623	[BUG]  [BUGGY]  checkSideEffects(externs.removeFirstChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.removeFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.removeFirstChild());	  checkSideEffects(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	95	None	replace
624	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree(),  true);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneTree(),  true);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree(),  true);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
625	[BUG]  [BUGGY]  checkSideEffects(externs,  nodes.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs,  nodes.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs,  nodes.cloneTree());	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
626	[BUG]  [BUGGY]  checkSideEffects(externs.cloneTree(),  null);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  checkSideEffects(externs.cloneTree(),  null);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	checkSideEffects(externs.cloneTree(),  null);	  checkSideEffects(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
627	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.cloneTree());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardSideEffects(externs.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardSideEffects(externs.cloneTree());	  GuardSideEffects    level    =    guardSideEffects();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
628	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  node.getFirstChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  node.getFirstChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  node.getFirstChild());	  protectSideEffectFreeCode(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
629	[BUG]  [BUGGY]  guardSideEffects(externs,  root.getFirstChild(),  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  guardSideEffects(externs,  root.getFirstChild(),  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	guardSideEffects(externs,  root.getFirstChild(),  level);	  guardSideEffects(externs.getLastChild(),    level);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
630	[BUG]  [BUGGY]  ensureSideEffects(externs.getFirstChild(),  true);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects(externs.getFirstChild(),  true);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects(externs.getFirstChild(),  true);	  ensureSideEffects(externs.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
631	[BUG]  [BUGGY]  Traversal.traverse(compiler,  root,  Level.WARNING);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Traversal.traverse(compiler,  root,  Level.WARNING);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Traversal.traverse(compiler,  root,  Level.WARNING);	  Traversal.traverse(compiler,    root,    this);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
632	[BUG]  [BUGGY]  GuardSideEffects  level  =  guardedSideEffects();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardSideEffects  level  =  guardedSideEffects();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardSideEffects  level  =  guardedSideEffects();	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
633	[BUG]  [BUGGY]  GuardedSideEffects  level  =  guardedSideEffects(externs);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  GuardedSideEffects  level  =  guardedSideEffects(externs);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	GuardedSideEffects  level  =  guardedSideEffects(externs);	  guardedSideEffects();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
634	[BUG]  [BUGGY]  CheckLevel  level  =  new  CheckLevel(externs.getLevel());  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  new  CheckLevel(externs.getLevel());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  new  CheckLevel(externs.getLevel());	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
635	[BUG]  [BUGGY]  CheckLevel  level  =  this.level.getLevel();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  this.level.getLevel();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  this.level.getLevel();	  CheckLevel    level    =    level.getLevel();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
636	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  node.cloneTree());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  node.cloneTree());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  node.cloneTree());	  protectSideEffectFreeCode(externs.cloneTree());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
637	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr  incadr	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
638	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    level);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
639	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_EXPR_ERROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
640	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ErROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ErROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ErROR);	  NodeTraversal.traverse(compiler,    externs,    level);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
641	[BUG]  [BUGGY]  ProtectionSideEffects  level  =  guardSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ProtectionSideEffects  level  =  guardSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ProtectionSideEffects  level  =  guardSideEffects(externs,  root);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
642	[BUG]  [BUGGY]  CheckLevel  level  =  guardSideEffects(externs,  root);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  CheckLevel  level  =  guardSideEffects(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	CheckLevel  level  =  guardSideEffects(externs,  root);	  GuardSideEffects    level    =    guardSideEffects(externs);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
643	[BUG]  [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE;	  ensureSideEffects()    &&    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
644	[BUG]  [BUGGY]  protectSideEffectFreeCode(externs,  node.getLastChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(externs,  node.getLastChild());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(externs,  node.getLastChild());	  protectSideEffectFreeCode(externs.getLastChild());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
645	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
646	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  level,  USELESS_CODE_ERROR,  security);	  AssertionFailedError:    NodeTraversal.traverse(compiler,    externs,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
647	[BUG]  [BUGGY]  protectSideEffectFreeCode(nodes,  root);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(nodes,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(nodes,  root);	  protectSideEffectFreeCode(externs,    root);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
648	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.EXPR_RESULT);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
649	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getFirstChild().getType()!=  Token.EXPR_RESULT);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
650	[BUG]  [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.ASSIGN);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.ASSIGN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError.checkState(externs.getFirstChild().getType()  ==  Token.ASSIGN);	  assureSideEffects();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
651	[BUG]  [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection(),  level,  USELESS_CODE_ERROR);	  junit.framework.AssertionFailedError:    NodeTraversal.traverse(compiler,    root,    new    StripProtection(),    level);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
652	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  CheckLevel  =  checkSideEffects()  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  CheckLevel  =  checkSideEffects()  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  else  {  CheckLevel  =  checkSideEffects()	  if(protectSideEffectFreeCode)    {    checkSideEffects();    }    else    {    NodeTraversal.traverse(compiler,    externs,    this);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
653	[BUG]  [BUGGY]  ProcessStatement.process(externs,  root);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ProcessStatement.process(externs,  root);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ProcessStatement.process(externs,  root);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
654	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  Context.reportCodeChange();  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	Context.reportCodeChange();	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
655	[BUG]  [BUGGY]  process(externs,  root,  securityCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  process(externs,  root,  securityCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	process(externs,  root,  securityCode);	  process(externs,    root);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
656	[BUG]  [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE;  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	ensureSideEffects()  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE;	  ensureSideEffects()    &&    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
657	[BUG]  [BUGGY]  protectSideEffectFreeCode(null,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  protectSideEffectFreeCode(null,  level);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	protectSideEffectFreeCode(null,  level);	  protectSideEffectFreeCode(externs,    level);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
658	[BUG]  [BUGGY]  validateSideEffects(),  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  protectSideEffectFreeCode);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  protectSideEffectFreeCode);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
659	[BUG]  [BUGGY]  validateSideEffects(),  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  PROTECTOR_FN);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  PROTECTOR_FN);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
660	[BUG]  [BUGGY]  validateSideEffects(),  level,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  new  CheckSideEffects());  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  new  CheckSideEffects());	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
661	[BUG]  [BUGGY]  validateSideEffects(),  level,  this);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);      if  (protectSideEffectFreeCode)  {      [BUGGY]  validateSideEffects(),  level,  this);  [BUGGY]      }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	74	74	1	replace	validateSideEffects(),  level,  this);	  validateSideEffects(),    level);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
