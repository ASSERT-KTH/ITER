bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
2	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
3	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
4	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
5	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
6	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  n.getJSDocInfo()!=  null)  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  n.getJSDocInfo()!=  null)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  n.getJSDocInfo()!=  null)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
7	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.FUNCTION)  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.FUNCTION)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.FUNCTION)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
8	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
9	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
10	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
11	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
12	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
13	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
14	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
15	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  isSimpleOp)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
16	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
17	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)||  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
18	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
19	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)&&  n!=  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
20	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
21	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)||  n!=  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
22	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
23	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)&&  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  parent.getFirstChild()  ==  n)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  parent.getFirstChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)&&  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
26	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)&&  n!=  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
29	[BUG]  [BUGGY]  if(n  ==  parent.getType()  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n  ==  parent.getType()  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n  ==  parent.getType()  ||  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
30	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
31	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
32	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
33	[BUG]  [BUGGY]  if(n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
34	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.CALL  &&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.CALL  &&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.CALL  &&  n  ==  parent.getFirstChild())  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
35	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.GETPROP  &&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.GETPROP  &&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.GETPROP  &&  n  ==  parent.getFirstChild())  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
36	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.VAR  &&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.VAR  &&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.VAR  &&  n  ==  parent.getFirstChild())  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
37	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.ASSIGN)  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
38	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.CALL  &&  parent.getFirstChild()  ==  n)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.CALL  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.CALL  &&  parent.getFirstChild()  ==  n)  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
39	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
40	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  If(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  If(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    If(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
41	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
42	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  Node  parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  Node  parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    Node  parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
43	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
44	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  >=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  >=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n  >=  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
45	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  >=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  >=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  >=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
46	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
47	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
48	[BUG]  [BUGGY]  if(isSimpleOp  ||  parent.getType()  ==  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp  ||  parent.getType()  ==  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  parent.getType()  ==  Token.COMMA)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
49	[BUG]  [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  parent.getType()  ==  Token.COMMA)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
50	[BUG]  [BUGGY]  if(isSimpleOp  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  parent.getType()  ==  Token.EXPR_RESULT)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
51	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    if  (n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
52	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    Node  an  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
53	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    Node  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
54	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  n.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  n.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    Node  an  =  n.getFirstChild();  if  (n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
55	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    if  (n!=  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
56	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  If(n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  If(n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    If(n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
57	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  int  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  int  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    int  n  =  parent.getFirstChild();  if  (n  ==  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
58	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  isResultUsed)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  isResultUsed)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  isResultUsed)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
59	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
60	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
61	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
62	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo()!=  null)  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo()!=  null)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo()!=  null)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
63	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo().isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo().isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getJSDocInfo().isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
64	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
65	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
66	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
67	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
68	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
69	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()  ==  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
70	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
71	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
72	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
73	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getFirstChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
74	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n!=  parent.getLastChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
75	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
76	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n!=  parent.getLastChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
77	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()  ==  n)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()  ==  n)  {	  if(NodeUtil.isAncestorsVisible(parent)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
78	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()!=  n)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()!=  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)||  parent.getLastChild()!=  n)  {	  if(NodeUtil.isAncestorsVisible(parent)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
79	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)||  n!=  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
80	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getFirstChild();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
81	[BUG]  [BUGGY]  Node  an  =  n.getParent();  [CE]  'else'  without  'if'  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getParent();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getParent();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
82	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  [CE]  'else'  without  'if'  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getLastChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getLastChild();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
83	[BUG]  [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  continue;  }  [CE]  'else'  without  'if'  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  continue;  }  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  continue;  }	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
84	[BUG]  [BUGGY]  Node  an  =  n.getAncestors();  [CE]  'else'  without  'if'  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getAncestors();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getAncestors();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
85	[BUG]  [BUGGY]  boolean  isResultUsed  =  NodeUtil.isSimpleOperatorType(n.getType());  [CE]  'else'  without  'if'  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  boolean  isResultUsed  =  NodeUtil.isSimpleOperatorType(n.getType());  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	boolean  isResultUsed  =  NodeUtil.isSimpleOperatorType(n.getType());	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
86	[BUG]  [BUGGY]  Node  an  =  parent.getParent();  [CE]  'else'  without  'if'  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  parent.getParent();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  parent.getParent();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
87	[BUG]  [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  parent.getAncestors())  {  continue;  }  [CE]  'else'  without  'if'  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  parent.getAncestors())  {  continue;  }  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp)  {  for(Node  an  :  parent.getAncestors())  {  continue;  }	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
88	[BUG]  [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  return;  }  [CE]  'else'  without  'if'  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  return;  }  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp)  {  for(Node  an  :  n.getAncestors())  {  return;  }	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
89	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
90	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()  ==  n)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()  ==  n)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
91	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getJSDocInfo()!=  null)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
92	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  2)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  2)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  2)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
93	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getFirstChild()!=  n)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
94	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {  [CE]  'else'  without  'if'  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
95	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  1)  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  1)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  &&  parent.getChildCount()  ==  1)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
96	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.GETPROP)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
97	[BUG]  [BUGGY]  Node  an  =  n.getAnces();  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getAnces();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getAnces();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
98	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  'else'  without  'if'  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  n.getNext();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getNext();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
99	[BUG]  [BUGGY]  Node  ancestor  =  n.getParent();  [CE]  'else'  without  'if'  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  ancestor  =  n.getParent();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  ancestor  =  n.getParent();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
100	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  'else'  without  'if'  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  parent.getFirstChild();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
101	[BUG]  [BUGGY]  if(parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.COMMA)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
102	[BUG]  [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.ASSIGN)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.ASSIGN)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
103	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
104	[BUG]  [BUGGY]  if(parent.getType()!=  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.COMMA  ||  parent.getType()!=  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
105	[BUG]  [BUGGY]  if(parent.getType()!=  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.FUNCTION  &&  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
106	[BUG]  [BUGGY]  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
107	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getChildCount()  ==  1  &&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getChildCount()  ==  1  &&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getChildCount()  ==  1  &&  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
108	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLestChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLestChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLestChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
109	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  >>  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  if(parent.getType()  ==  Token.FUNCTION  ||  n  >>  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    if(parent.getType()  ==  Token.FUNCTION  ||  n  >>  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
110	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
111	[BUG]  [BUGGY]  if(!NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(!NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
112	[BUG]  [BUGGY]  if(!NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(!NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(n)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  ';'  expected	14	None	replace
113	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
114	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
115	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  ';'  expected	10	None	replace
116	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  parent.getFirstChild()  ==  n)  {  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  parent.getFirstChild()  ==  n)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)||  parent.getFirstChild()  ==  n)  {	  if(NodeUtil.isAncestorsVisible(parent)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
117	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  n.getFirstChild();  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  n.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    Node  an  =  n.getFirstChild();	  	non-compiled	[CE]  ';'  expected	1	None	add
118	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  parent.getFirstChild();  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  Node  an  =  parent.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    Node  an  =  parent.getFirstChild();	  	non-compiled	[CE]  ';'  expected	1	None	add
119	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  AssertionFailedError:  There  should  be  one  warning  (n  ==  parent.getFirstChild());  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  AssertionFailedError:  There  should  be  one  warning  (n  ==  parent.getFirstChild());  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    AssertionFailedError:  There  should  be  one  warning  (n  ==  parent.getFirstChild());	  	non-compiled	[CE]  not  a  statement	1	None	add
120	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  AssertionFailedError:  There  should  be  one  n  ==  parent.getFirstChild();  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  AssertionFailedError:  There  should  be  one  n  ==  parent.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    AssertionFailedError:  There  should  be  one  n  ==  parent.getFirstChild();	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
121	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  int  n  =  parent.getFirstChild();  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  int  n  =  parent.getFirstChild();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    int  n  =  parent.getFirstChild();	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
122	[BUG]  [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  isResultUsed)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.EXPR_RESULT  ||  isResultUsed)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.EXPR_RESULT  ||  isResultUsed)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
123	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
124	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getLastChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
125	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  NodeUtil.isAncestorsVisible(parent)&&  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
126	[BUG]  [BUGGY]  n.setJSDocInfo(isResultUsed);  [CE]  'else'  without  'if'  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  n.setJSDocInfo(isResultUsed);  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.setJSDocInfo(isResultUsed);	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
127	[BUG]  [BUGGY]  int  level  =  n.getLevel();  [CE]  'else'  without  'if'  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  int  level  =  n.getLevel();  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	int  level  =  n.getLevel();	      	non-compiled	[CE]  'else'  without  'if'	6	None	replace
128	[BUG]  [BUGGY]  if(isResultUsed)  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed)  {	  if    (n    ==    parent.getFirstChild())    {    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
129	[BUG]  [BUGGY]  if(an.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(an.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(an.getType()!=  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
130	[BUG]  [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    parent.getType()!=    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
131	[BUG]  [BUGGY]  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
132	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getChildCount())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getChildCount())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  n  ==  parent.getChildCount())  {	  if(parent.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
133	[BUG]  [BUGGY]  if(isResultUsed  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  parent.getType()  ==  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
134	[BUG]  [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {	  if(parent.getType()    ==    Token.EXPR_RESULT    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
135	[BUG]  [BUGGY]  if(parent.getAncestors()!=  null)  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getAncestors()!=  null)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getAncestors()!=  null)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
136	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.COMMA  &&  isSimpleOp)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.COMMA  &&  isSimpleOp)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.COMMA  &&  isSimpleOp)  {	  if    (parent.getType()    ==    Token.COMMA)    {    	non-compiled	[CE]  'else'  without  'if'	7	None	replace
137	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n  ==  parent.getLastChild())  {	  if(n.getType()    ==    Token.FUNCTION    ||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
138	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectionSideEffectFreeCode)  {  [CE]  'else'  without  'if'  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectionSideEffectFreeCode)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  protectionSideEffectFreeCode)  {	  if(isResultUsed    ||    isSimpleOp)    {    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
139	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(n)&&  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)&&    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
140	[BUG]  [BUGGY]  if(an.getType()!=  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(an.getType()!=  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(an.getType()!=  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
141	[BUG]  [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  'else'  without  'if'  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  parent.getType()  ==  Token.EXPR_RESULT)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
142	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {  [CE]  'else'  without  'if'  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.BLOCK)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
143	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  isResultUsed)  {  [CE]  'else'  without  'if'  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  isResultUsed)  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  isResultUsed)  {	  if(parent.getType()    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
144	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  ==  parent.getLastChild())  {  [CE]  'else'  without  'if'  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  ==  parent.getLastChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    if  (n  ==  parent.getLastChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
145	[BUG]  [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  >=  parent.getFirstChild())  {  [CE]  'else'  without  'if'  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if  (n  ==  parent.getFirstChild())  {  if  (n  >=  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if    (n    ==    parent.getFirstChild())    {    if  (n  >=  parent.getFirstChild())  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
146	[BUG]  [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild()  ||  n  ==  parent.getFirstChild())  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (n.isQualifiedName()  &&  n.getJSDocInfo()  !=  null)  {  return;  }  boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }    [BUGGY]  if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild()  ||  n  ==  parent.getFirstChild())  {  [BUGGY]    for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAncestorsVisible(parent)||  n  ==  parent.getLastChild()  ||  n  ==  parent.getFirstChild())  {	  if(NodeUtil.isAncestorsVisible(parent)||    n    ==    parent.getLastChild())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
