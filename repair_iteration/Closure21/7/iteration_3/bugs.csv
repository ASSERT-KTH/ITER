bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getFirstChild().getNext();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild().getFirstChild().getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild().getFirstChild().getNext();	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
2	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
3	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  not  a  statement	158	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
5	[BUG]  [BUGGY]  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
6	[BUG]  [BUGGY]  For(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  For(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	For(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
7	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getString()));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getString()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
8	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLastChild()));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLastChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getLastChild()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
9	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  level);	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
10	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLocalName()));  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLocalName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getLocalName()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
11	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLineno()));  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getLineno()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getLineno()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
12	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getName()));  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getName()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
13	[BUG]  [BUGGY]  ||  n.isConstructor())  {  return;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isConstructor())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isConstructor())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
14	[BUG]  [BUGGY]  ||  n.isFunctionState())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionState())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionState())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
15	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
16	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
17	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
18	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
19	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
20	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
21	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
22	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
23	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
24	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
25	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
26	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
27	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
28	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
30	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
31	[BUG]  [BUGGY]  ||  parent.isExprResult())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExprResult())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExprResult())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprResult())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
32	[BUG]  [BUGGY]  ||  n.isCompiler())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCompiler())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCompiler())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprResult())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
33	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getString());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
37	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
38	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType()));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getType()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
41	[BUG]  [BUGGY]  n.removeChild(an);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(an);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
42	[BUG]  [BUGGY]  n.removeChild(n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(n);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
43	[BUG]  [BUGGY]  n.removeChild(a);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(a);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(a);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
44	[BUG]  [BUGGY]  n.removeChild(ancestor);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(ancestor);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
45	[BUG]  [BUGGY]  n.removeChild(then);  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(then);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(then);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
46	[BUG]  [BUGGY]  n.replaceChild(n,  parent);  [CE]  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  parent);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
47	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
48	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
49	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
50	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
51	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
52	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
53	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
54	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
55	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
56	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(n.getString()));  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " ".equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " ".equals(n.getString()));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
57	[BUG]  [BUGGY]  new  IllegalArgumentException( " "));  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
58	[BUG]  [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
59	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  level);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
60	[BUG]  [BUGGY]  new  IllegalArgumentException( " ")  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " ")	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
61	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(n.getType()));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " ".equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " ".equals(n.getType()));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
62	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
63	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
64	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
65	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
66	[BUG]  [BUGGY]  ParchetState.checkState(n.isComma());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(n.isComma());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
67	[BUG]  [BUGGY]  ParchetState.checkState(n.isEmpty()  ||  n.isComma());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(n.isEmpty()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(n.isEmpty()  ||  n.isComma());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
68	[BUG]  [BUGGY]  ParchetState.checkState(n.isFunction());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(n.isFunction());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
69	[BUG]  [BUGGY]  ParchetState.checkState(n.isExpr());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(n.isExpr());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(n.isExpr());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
70	[BUG]  [BUGGY]  ParchetState.checkState(parent.isEmpty());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(parent.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(parent.isEmpty());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
71	[BUG]  [BUGGY]  ParchetState.checkState(n.isVarArgs());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkState(n.isVarArgs());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkState(n.isVarArgs());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
72	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
73	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  n);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  n);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  <identifier>  expected	133	None	replace
74	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
75	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
76	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
77	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_MESSAGE);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_MESSAGE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_MESSAGE);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
78	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
79	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	94	None	replace
80	[BUG]  [BUGGY]  Context.reportError(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	94	None	replace
81	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	94	None	replace
82	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
87	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
88	[BUG]  [BUGGY]  ||  parent.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isFunctionPrototype())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
89	[BUG]  [BUGGY]  ||  n.isConstructor())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isConstructor())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isConstructor())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isFunctionPrototype())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
90	[BUG]  [BUGGY]  ||  n.isExprPrototype())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprPrototype())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprPrototype())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isFunctionPrototype())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
91	[BUG]  [BUGGY]  ||  parent.isSimpleOp())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isSimpleOp())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isSimpleOp())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleOp())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
93	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
94	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
95	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
96	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
97	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
98	[BUG]  [BUGGY]  ||  parent.isFunctionDeclaration())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunctionDeclaration())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunctionDeclaration())  {  return;	  ||    n.isFunctionDeclaration())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
99	[BUG]  [BUGGY]  ||  n.isFunctionDeclaration())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionDeclaration())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionDeclaration())  {  throw  new  IllegalStateException( " ");	  ||    n.isFunctionDeclaration())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
100	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ERROR);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
101	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level,  PROTECTOR_FN);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
102	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level,  STRICT_CODE_ERROR);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
103	[BUG]  [BUGGY]  assistExceptionHandler.throwAsStatement(t,  n,  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  assistExceptionHandler.throwAsStatement(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	assistExceptionHandler.throwAsStatement(t,  n,  level);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
104	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level,  DEFAULT_CODE_ERROR);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ErROR);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ErROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level,  USELESS_CODE_ErROR);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
106	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  t);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " "),  t);	  throw    new    UnsupportedOperationException(   "   "),    t);    	non-compiled	[CE]  <identifier>  expected	157	None	replace
107	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ",  t);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  UnsupportedOperationException( " ",  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  UnsupportedOperationException( " ",  t);	  throw    new    UnsupportedOperationException(   "   "),    t);    	non-compiled	[CE]  	157	None	replace
108	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
109	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
110	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
111	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
112	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
113	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
114	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FACTOR)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FACTOR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FACTOR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
115	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FACTOR)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FACTOR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FACTOR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
116	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
117	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FACTOR)  {  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FACTOR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FACTOR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
118	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FACTOR)  {  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FACTOR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FACTOR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
119	[BUG]  [BUGGY]  ||  parent.isExpr())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExpr())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExpr())  {  throw  new  IllegalStateException( " ");	  ||    n.isExpr())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  ||  n.isCompiler())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCompiler())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCompiler())  {  throw  new  IllegalStateException( " ");	  ||    n.isExpr())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
121	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
122	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	78	None	replace
123	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	78	None	replace
124	[BUG]  [BUGGY]  ||  parent.isFunctionPrototype())  {  return;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunctionPrototype())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunctionPrototype())  {  return;	  ||    n.isFunctionPrototype())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
125	[BUG]  [BUGGY]  ||  n.isExprPrototype())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprPrototype())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprPrototype())  {  return;	  ||    n.isFunctionPrototype())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
126	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
127	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
128	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
129	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
130	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
131	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
132	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
133	[BUG]  [BUGGY]  Context.checkState(n.isEmpty());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
134	[BUG]  [BUGGY]  Context.checkState(n.isFunction());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isFunction());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
135	[BUG]  [BUGGY]  Context.checkState(n.isExpr());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isExpr());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isExpr());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
136	[BUG]  [BUGGY]  Context.checkState(n.isExtern());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isExtern());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isExtern());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
137	[BUG]  [BUGGY]  Context.checkState(n.isExprResult());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isExprResult());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
138	[BUG]  [BUGGY]  Context.checkState(n.isVarArgs());  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isVarArgs());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isVarArgs());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
139	[BUG]  [BUGGY]  Context.checkState(n.isReturn());  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isReturn());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isReturn());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
140	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  n);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  n);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
141	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  parent);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  n,  parent);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
142	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  an);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
143	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  level);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  level);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
144	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  level);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  n,  level);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
145	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  parent,  level);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  parent,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  parent,  level);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
146	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  parent);  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(an,  parent);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
147	[BUG]  [BUGGY]  Reporter.error(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Reporter.error(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Reporter.error(t,  n,  level,  USELESS_CODE_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
148	[BUG]  [BUGGY]  reportError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  MISSING_CODE_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
149	[BUG]  [BUGGY]  reportError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  DEFAULT_CODE_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
150	[BUG]  [BUGGY]  reportError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
151	[BUG]  [BUGGY]  reportError(t,  n,  level  +  1);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level  +  1);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
152	[BUG]  [BUGGY]  Context.reportError(t,  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n,  level);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
153	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
154	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
155	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  null);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  null);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  <identifier>  expected	163	None	replace
156	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
157	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  Level.WARNING);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  Level.WARNING);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
158	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
159	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
160	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
161	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
162	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
163	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
164	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  not  a  statement	159	None	replace
165	[BUG]  [BUGGY]  parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
166	[BUG]  [BUGGY]  parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
167	[BUG]  [BUGGY]  parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
168	[BUG]  [BUGGY]  parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
169	[BUG]  [BUGGY]  parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
170	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
171	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
172	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
173	[BUG]  [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  PROTECTOR_FN);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
174	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
175	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
176	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
177	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
178	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
179	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
180	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
181	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
182	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
183	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
184	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  <identifier>  expected	141	None	replace
185	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
186	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
187	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
188	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
189	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
190	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
191	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
192	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
193	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
194	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));  [CE]  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
195	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
196	[BUG]  [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
197	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
198	[BUG]  [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
199	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
200	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
201	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
202	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
203	[BUG]  [BUGGY]  result  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  result  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	result  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
204	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getType());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getType());	  throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  	86	None	replace
205	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());	  throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
206	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getType()));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(n.getType()));	  throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
207	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getType());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getType());	  throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  	86	None	replace
208	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));	  throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(n.isComma());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isComma());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
210	[BUG]  [BUGGY]  Preconditions.checkState(n.isFunction());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isFunction());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(n.isExpr());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isExpr());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isExpr());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  parent.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  parent.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  parent.isComma());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkArgument(n.isEmpty());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkArgument(n.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkArgument(n.isEmpty());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
214	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	18	None	replace
215	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	18	None	replace
216	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
217	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
218	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getLastChild()));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getLastChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(n.getLastChild()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
219	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
220	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
221	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  false);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
222	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
223	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
224	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
225	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  this);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  this);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
226	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
227	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
228	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
229	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
230	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
231	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
232	[BUG]  [BUGGY]  ||  n.isFunctionState())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionState())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionState())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
233	[BUG]  [BUGGY]  ||  parent.isSimpleOp())  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isSimpleOp())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isSimpleOp())  {  return;	  ||    n.isSimpleOp())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
234	[BUG]  [BUGGY]  ||  parent.isEmpty())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isEmpty())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isEmpty())  {  return;	  ||    n.isEmpty())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
235	[BUG]  [BUGGY]  ||  parent.isExprState())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExprState())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExprState())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprState())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
236	[BUG]  [BUGGY]  ||  n.isExternState())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExternState())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExternState())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprState())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExprResult());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.isExprResult());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  &&  n.isComma());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  &&  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  &&  n.isComma());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
239	[BUG]  [BUGGY]  Preconditions.checkState(n.isExpr()  ||  n.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isExpr()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isExpr()  ||  n.isComma());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
240	[BUG]  [BUGGY]  Preconditions.checkState(n.isFunction()  ||  n.isComma());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isFunction()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isFunction()  ||  n.isComma());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExpr());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExpr());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.isExpr());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isFunction());  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.isFunction());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
243	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
244	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
245	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
246	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
247	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
248	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
249	[BUG]  [BUGGY]  Node  an  =  n.getLastChild().getFirstChild().getString();  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getLastChild().getFirstChild().getString();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getLastChild().getFirstChild().getString();	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
250	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  not  a  statement  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
251	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
252	[BUG]  [BUGGY]  For(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  For(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	For(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
253	[BUG]  [BUGGY]  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
254	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
255	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
256	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
257	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
258	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
259	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
260	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLOAT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLOAT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
261	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
262	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
263	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
264	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
265	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
266	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
267	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
268	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_COMMA_ERROR,  ancestorType);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_COMMA_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_COMMA_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
269	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
270	[BUG]  [BUGGY]  accept(t,  n,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  level);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
271	[BUG]  [BUGGY]  approve(t,  n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  approve(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	approve(t,  n,  level);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
272	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
273	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
274	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
275	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
276	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
277	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
278	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  null);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
279	[BUG]  [BUGGY]  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
280	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  false);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
281	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
282	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
283	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.FUNCTION);	  [Delete]    	non-compiled	[CE]  	150	None	replace
284	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.getType()  ==  Token.NAME);	  [Delete]    	non-compiled	[CE]  	150	None	replace
285	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  [Delete]    	non-compiled	[CE]  	150	None	replace
286	[BUG]  [BUGGY]  t.report(n,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
287	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
288	[BUG]  [BUGGY]  t.report(n,  Level.WARNING);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  Level.WARNING);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
289	[BUG]  [BUGGY]  t.report(n,  Level.ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  Level.ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  Level.ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
290	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
291	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
292	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
293	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
294	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
295	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
296	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
297	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
298	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
299	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	83	None	replace
300	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
301	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
302	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
303	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
304	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
305	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
306	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestor);  [CE]  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestor);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
307	[BUG]  [BUGGY]  ||  parent.isEmpty())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isEmpty())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isEmpty())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
308	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  this);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  this);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  	106	None	replace
309	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  this);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  this);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
310	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  	106	None	replace
311	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
312	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
313	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
314	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  level);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
315	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
316	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getSourceName(),  null);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getSourceName(),  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getSourceName(),  null);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
317	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getSourceName(),  level,  null);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getSourceName(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getSourceName(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
318	[BUG]  [BUGGY]  Throwables.checkArgument(n.getSourceName(),  t.getSourceName(),  null);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getSourceName(),  t.getSourceName(),  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getSourceName(),  t.getSourceName(),  null);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
319	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  Level.WARNING);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  Level.WARNING);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
320	[BUG]  [BUGGY]  safeTree())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree())  {  throw  new  IllegalStateException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
321	[BUG]  [BUGGY]  safeName())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeName())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeName())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
322	[BUG]  [BUGGY]  safeToken())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeToken())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeToken())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
323	[BUG]  [BUGGY]  safeInternal())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeInternal())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeInternal())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
324	[BUG]  [BUGGY]  safeLog())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeLog())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeLog())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
325	[BUG]  [BUGGY]  ||  parent.isEmpty())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isEmpty())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isEmpty())  {  throw  new  IllegalStateException( " ");	  ||    n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
326	[BUG]  [BUGGY]  ||  parent.isExpr())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExpr())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExpr())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExpr())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
327	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_WARNING)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_WARNING)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_WARNING)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
328	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_WARNING)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_WARNING)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_WARNING)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
329	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
330	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_WARNING)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_WARNING)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_WARNING)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
331	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WITHOUT_THRESHOLD)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WITHOUT_THRESHOLD)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WITHOUT_THRESHOLD)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
332	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
333	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
334	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
335	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
336	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
337	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
338	[BUG]  [BUGGY]  While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
339	[BUG]  [BUGGY]  While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
340	[BUG]  [BUGGY]  While(n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
341	[BUG]  [BUGGY]  While(n.isExpr())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isExpr())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isExpr())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
342	[BUG]  [BUGGY]  While(n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isFunction())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
343	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
344	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t.getMessage(),  n,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t.getMessage(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t.getMessage(),  n,  level);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
345	[BUG]  [BUGGY]  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
346	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t.getMessage(),  n,  level,  MISSING_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
347	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  n,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  n,  level);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
348	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t.getMessage(),  n,  level,  DEFAULT_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
349	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
350	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
351	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( " ");  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError( " ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
352	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  return    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	162	None	replace
353	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  return    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	162	None	replace
354	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  return    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	162	None	replace
355	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
356	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
357	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
358	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
359	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
360	[BUG]  [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
361	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
362	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  null);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
363	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  an,  null);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  an,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  <identifier>  expected	165	None	replace
364	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  an,  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  an,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
365	[BUG]  [BUGGY]  Parchet.checkState(n.isFunction()  ||  n.isComma());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isFunction()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isFunction()  ||  n.isComma());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
366	[BUG]  [BUGGY]  Parchet.checkState(n.isFunction(),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isFunction(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isFunction(),  level);	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
367	[BUG]  [BUGGY]  Parchet.checkState(n.isFunction()  ||  n.isCompiler());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isFunction()  ||  n.isCompiler());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isFunction()  ||  n.isCompiler());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
368	[BUG]  [BUGGY]  Parchet.checkState(n.isExpr());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isExpr());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isExpr());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
369	[BUG]  [BUGGY]  Parchet.checkState(n.isCompiler());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isCompiler());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isCompiler());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
370	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
371	[BUG]  [BUGGY]  new  IllegalStateException( " "));  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( " "));	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
372	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getType());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( "Unexpected  level: "  +  n.getType());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
373	[BUG]  [BUGGY]  new  IllegalStateException( "Unknown  level: "  +  n.getType());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( "Unknown  level: "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( "Unknown  level: "  +  n.getType());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
374	[BUG]  [BUGGY]  new  IllegalStateException( " ")  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( " ")	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
375	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getLevel());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getLevel());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( "Unexpected  level: "  +  n.getLevel());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
376	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getLineno());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( "Unexpected  level: "  +  n.getLineno());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
377	[BUG]  [BUGGY]  Context.reportError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n,  level,  USELESS_CODE_ERROR);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
378	[BUG]  [BUGGY]  Reporter.error(t,  n,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Reporter.error(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Reporter.error(t,  n,  level);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
379	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	123	None	replace
380	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getMessage());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getMessage());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
381	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getSourceName());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getSourceName());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
382	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getName());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getName());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
383	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno()  + "  does  not  exist: "  +  n.getString());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno()  + "  does  not  exist: "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getLineno()  + "  does  not  exist: "  +  n.getString());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
384	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getString());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
385	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
386	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
387	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
388	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
389	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
390	[BUG]  [BUGGY]  accept(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
391	[BUG]  [BUGGY]  append(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  append(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	append(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
392	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
393	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
394	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
395	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
396	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  an);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  an);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
397	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
398	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  parent);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
399	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  level);	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
400	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getType()));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getType()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
401	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getQualifiedName()));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getQualifiedName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getQualifiedName()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
402	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getNext()));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getNext()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getNext()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
403	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
404	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
405	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  an);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  an);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
406	[BUG]  [BUGGY]  ||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
407	[BUG]  [BUGGY]  ||  parent.isStatement())  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isStatement())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isStatement())  {  return;	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
408	[BUG]  [BUGGY]  ||  n.isStatement())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isStatement())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isStatement())  {  throw  new  IllegalStateException( " ");	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
409	[BUG]  [BUGGY]  ||  parent.isFunction())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunction())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunction())  {  throw  new  IllegalStateException( " ");	  ||    n.isFunction())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
410	[BUG]  [BUGGY]  ||  n.isConstructor())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isConstructor())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isConstructor())  {  throw  new  IllegalStateException( " ");	  ||    n.isFunction())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
411	[BUG]  [BUGGY]  ||  n.isFunctionState())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionState())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionState())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
412	[BUG]  [BUGGY]  ||  parent.isExtern())  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExtern())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExtern())  {  return;	  ||    n.isExtern())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
413	[BUG]  [BUGGY]  ||  n.isCompiler())  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCompiler())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCompiler())  {  return;	  ||    n.isExtern())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
414	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
415	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
416	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level.WARNING,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level.WARNING,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level.WARNING,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
417	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
418	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
419	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
420	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
421	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
422	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
423	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
424	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
425	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
426	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
427	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  	84	None	replace
428	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  level);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
429	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
430	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
431	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
432	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
433	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
434	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n.getType());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(NON_GLOBAL_EXPR_RESULT,  n.getType());	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
435	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
436	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
437	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
438	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
439	[BUG]  [BUGGY]  While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
440	[BUG]  [BUGGY]  While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isEmpty()  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
441	[BUG]  [BUGGY]  While(n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
442	[BUG]  [BUGGY]  While(n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
443	[BUG]  [BUGGY]  While(n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
444	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
445	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
446	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
447	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
448	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
449	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
450	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
451	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
452	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
453	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
454	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
455	[BUG]  [BUGGY]  Parchet.checkState(n.isExpr()  ||  n.isComma());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isExpr()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isExpr()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
456	[BUG]  [BUGGY]  Parchet.checkState(n.isEmpty()  &&  n.isComma());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isEmpty()  &&  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isEmpty()  &&  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
457	[BUG]  [BUGGY]  Parchet.checkState(n.isEmpty()  ||  n.isExprResult());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isEmpty()  ||  n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isEmpty()  ||  n.isExprResult());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
458	[BUG]  [BUGGY]  Parchet.checkState(n.isEmpty()  ||  parent.isComma());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isEmpty()  ||  parent.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isEmpty()  ||  parent.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
459	[BUG]  [BUGGY]  Parchet.checkState(n.isDefined()  ||  n.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isDefined()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isDefined()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
460	[BUG]  [BUGGY]  Parchet.checkState(n.isExprResult()  ||  n.isComma());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isExprResult()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isExprResult()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
461	[BUG]  [BUGGY]  ||  parent.isExtern())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExtern())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExtern())  {  throw  new  IllegalStateException( " ");	  ||    n.isExtern())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
462	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
463	[BUG]  [BUGGY]  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
464	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	90	None	replace
465	[BUG]  [BUGGY]  parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
466	[BUG]  [BUGGY]  parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
467	[BUG]  [BUGGY]  parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
468	[BUG]  [BUGGY]  parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
469	[BUG]  [BUGGY]  parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
470	[BUG]  [BUGGY]  n.setLineno(n.getLineno()  -  1);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno()  -  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno()  -  1);	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
471	[BUG]  [BUGGY]  n.setLineno(n.getLineno(),  n.getCharno());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno(),  n.getCharno());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
472	[BUG]  [BUGGY]  n.setLineno(n.getLineno()  +  1);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno()  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno()  +  1);	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
473	[BUG]  [BUGGY]  n.setLineno(n.getLineno(),  n.getLastChild());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno(),  n.getLastChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno(),  n.getLastChild());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
474	[BUG]  [BUGGY]  n.setLineno(n.getLineno(),  n.getLowerCase());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno(),  n.getLowerCase());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno(),  n.getLowerCase());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
475	[BUG]  [BUGGY]  n.setLineno(n.getLineno()  /  2);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno()  /  2);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno()  /  2);	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
476	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
477	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
478	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
479	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
480	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
481	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
482	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
483	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
484	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
485	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
486	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
487	[BUG]  [BUGGY]  Node  an  =  parent.getParent();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getParent();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getParent();	  Node    an    =    n.getParent();    	non-compiled	[CE]  	40	None	replace
488	[BUG]  [BUGGY]  Node  an  =  n.getAncestor();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor();	  Node    an    =    n.getParent();    	non-compiled	[CE]  	40	None	replace
489	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getNext();	  Node    an    =    n.getParent();    	non-compiled	[CE]  	40	None	replace
490	[BUG]  [BUGGY]  Node  an  =  n.getAncestor(1);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor(1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor(1);	  Node    an    =    n.getParent();    	non-compiled	[CE]  	40	None	replace
491	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
492	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
493	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
494	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  null);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
495	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level,  null);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
496	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	66	None	replace
497	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	66	None	replace
498	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
499	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
500	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
501	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
502	[BUG]  [BUGGY]  allowSideEffects(n,  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  allowSideEffects(n,  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	allowSideEffects(n,  level)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
503	[BUG]  [BUGGY]  approveSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  approveSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	approveSideEffects(n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
504	[BUG]  [BUGGY]  acceptSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  acceptSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	acceptSideEffects(n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
505	[BUG]  [BUGGY]  enableSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  enableSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	enableSideEffects(n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
506	[BUG]  [BUGGY]  allowSideEffects(n)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  allowSideEffects(n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	allowSideEffects(n)  {  return;  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
507	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
508	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
509	[BUG]  [BUGGY]  Context.traverse(compiler,  n,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.traverse(compiler,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.traverse(compiler,  n,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
510	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  an,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
511	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  this.level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
512	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
513	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
514	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
515	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
516	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
517	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
518	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	41	None	replace
519	[BUG]  [BUGGY]  Node  an  =  n.getAncestorChild();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestorChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestorChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	41	None	replace
520	[BUG]  [BUGGY]  Node  an  =  parent.getLastChild();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getLastChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	43	None	replace
521	[BUG]  [BUGGY]  Node  an  =  node.getLastChild();  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  node.getLastChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  node.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	43	None	replace
522	[BUG]  [BUGGY]  Node  an  =  n.removeFirstChild();  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.removeFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.removeFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	43	None	replace
523	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
524	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
525	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
526	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
527	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  this);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
528	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  this);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
529	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
530	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
531	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
532	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
533	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException(t,  n,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
534	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
535	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
536	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
537	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  isSimpleOp);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
538	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
539	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
540	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
541	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	120	None	replace
542	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
543	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
544	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
545	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
546	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
547	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAILURE)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAILURE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAILURE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
548	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
549	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
550	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
551	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  level);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
552	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.cloneTree()));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.cloneTree()));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
553	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  msg));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  msg));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
554	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  ancestorType));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  ancestorType));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  ancestorType));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
555	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.getType()));  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n.getType()));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
556	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  level));  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  level));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
557	[BUG]  [BUGGY]  ||  parent.isExprResult())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExprResult())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExprResult())  {  throw  new  IllegalStateException( " ");	  ||    parent.isComma())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
558	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	80	None	replace
559	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
560	[BUG]  [BUGGY]  ||  parent.isExpr())  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExpr())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExpr())  {  return;	  ||    n.isExpr())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
561	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
562	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
563	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
564	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
565	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
566	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAXIMIZED_CODE_ERROR);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAXIMIZED_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAXIMIZED_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
567	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
568	[BUG]  [BUGGY]  Parchet.checkState(n.isVarArgs());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isVarArgs());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isVarArgs());	  Parchet.checkState(n.isEmpty());    	non-compiled	[CE]  	60	None	replace
569	[BUG]  [BUGGY]  Parchet.checkState(n.isEmpty(),  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isEmpty(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isEmpty(),  level);	  Parchet.checkState(n.isEmpty());    	non-compiled	[CE]  	60	None	replace
570	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " "));	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
571	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " ")	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
572	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  n);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " ",  n);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
573	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " "),  level);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
574	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
575	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
576	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
577	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	67	None	replace
578	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	67	None	replace
579	[BUG]  [BUGGY]  ||  parent.isExtern())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExtern())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExtern())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExtern())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
580	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
581	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
582	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
583	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
584	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
585	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
586	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
587	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
588	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
589	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  ancestorType);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
590	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  parent);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
591	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  parent);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
592	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t,  n,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException(t,  n,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
593	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
594	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
595	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  t);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
596	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
597	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.EMPTY));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
598	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  n);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  n);	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
599	[BUG]  [BUGGY]  ||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
600	[BUG]  [BUGGY]  ||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
601	[BUG]  [BUGGY]  ||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExpr())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
602	[BUG]  [BUGGY]  ||  n.isExtern())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExtern())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExtern())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
603	[BUG]  [BUGGY]  ||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
604	[BUG]  [BUGGY]  ||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
605	[BUG]  [BUGGY]  ||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunction())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
606	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
607	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
608	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
609	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
610	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
611	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
612	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
613	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
614	[BUG]  [BUGGY]  Attorney  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Attorney  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Attorney  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
615	[BUG]  [BUGGY]  State  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  State  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	State  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
616	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
617	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkS  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkS  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkS	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
618	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.check  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.check  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.check	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
619	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
620	[BUG]  [BUGGY]  Parchet.checkState(n.isExprResult());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isExprResult());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
621	[BUG]  [BUGGY]  Parchet.checkState(n.isExtern());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isExtern());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isExtern());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
622	[BUG]  [BUGGY]  Parchet.checkState(n.isConstructor());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isConstructor());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isConstructor());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
623	[BUG]  [BUGGY]  Parchet.checkState(n.isReturn());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isReturn());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isReturn());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
624	[BUG]  [BUGGY]  ||  parent.isExprResult())  {  return;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isExprResult())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isExprResult())  {  return;	  ||    n.isExprResult())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
625	[BUG]  [BUGGY]  ||  n.isExternResult())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExternResult())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExternResult())  {  return;	  ||    n.isExprResult())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
626	[BUG]  [BUGGY]  ||  parent.isFunction())  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunction())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunction())  {  return;	  ||    n.isFunction())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
627	[BUG]  [BUGGY]  ||  n.isCall())  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCall())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCall())  {  return;	  ||    n.isFunction())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
628	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	13	None	replace
629	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	13	None	replace
630	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
631	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
632	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
633	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
634	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
635	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
636	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
637	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
638	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
639	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor);	  Throwables.throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
640	[BUG]  [BUGGY]  ||  parent.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isSimpleOp())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleOp())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
641	[BUG]  [BUGGY]  Context.checkState(n.isExpr()  ||  n.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isExpr()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isExpr()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
642	[BUG]  [BUGGY]  Context.checkState(n.isFunction()  ||  n.isComma());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isFunction()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isFunction()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
643	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  &&  n.isComma());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  &&  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  &&  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
644	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  parent.isComma());  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  parent.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  parent.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
645	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isExprResult());  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  n.isExprResult());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
646	[BUG]  [BUGGY]  Context.checkState(n.isExtern()  ||  n.isComma());  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isExtern()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isExtern()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
647	[BUG]  [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isFunction());  [CE]  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isEmpty()  ||  n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isEmpty()  ||  n.isFunction());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
648	[BUG]  [BUGGY]  ||  parent.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");	  ||    n.isFunctionPrototype())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
649	[BUG]  [BUGGY]  ||  n.isExprPrototype())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprPrototype())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprPrototype())  {  throw  new  IllegalStateException( " ");	  ||    n.isFunctionPrototype())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
650	[BUG]  [BUGGY]  ||  parent.isFunction())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.isFunction())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.isFunction())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isFunction())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
651	[BUG]  [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState.  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState.  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet.checkState.	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
652	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  sourceFile,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
653	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  an);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
654	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
655	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
656	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
657	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
658	[BUG]  [BUGGY]  accept(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  USELESS_CODE_ERROR);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
659	[BUG]  [BUGGY]  accept(t,  n,  parent);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  parent);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
660	[BUG]  [BUGGY]  scan(t,  n,  parent);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  scan(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	scan(t,  n,  parent);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
661	[BUG]  [BUGGY]  Accept(t,  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Accept(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Accept(t,  n,  level);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
662	[BUG]  [BUGGY]  inspect(t,  n,  parent);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  inspect(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	inspect(t,  n,  parent);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
663	[BUG]  [BUGGY]  accept(t,  n,  an);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  an);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
664	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
665	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_PROTECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
666	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
667	[BUG]  [BUGGY]  ||  n.isExprComma())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprComma())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprComma())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprState())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
668	[BUG]  [BUGGY]  ||  n.isCurrentState())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCurrentState())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCurrentState())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExprState())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
669	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_SIGNATURE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
670	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
671	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURE_ERROR,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURE_ERROR,  level);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
672	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
673	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
674	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  parent);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
675	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  an,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  an,  level);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
676	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level  +  1);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	aughtExceptionHandler.throwAsStatement(t,  n,  level  +  1);	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
677	[BUG]  [BUGGY]  Parchet.checkState(parent.isEmpty()  ||  n.isComma());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(parent.isEmpty()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(parent.isEmpty()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
678	[BUG]  [BUGGY]  Parchet.checkState(n.isNull()  ||  n.isComma());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isNull()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isNull()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
679	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
680	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_HANDLER)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_HANDLER)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_HANDLER)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
681	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WHILE)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WHILE)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WHILE)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
682	[BUG]  [BUGGY]  While(!n.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(!n.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(!n.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
683	[BUG]  [BUGGY]  new  CheckSideEffectsException( " ");  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  CheckSideEffectsException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  CheckSideEffectsException( " ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
684	[BUG]  [BUGGY]  new  IllegalStateException(n.getString());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException(n.getString());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
685	[BUG]  [BUGGY]  new  CheckStateException( " ");  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  CheckStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  CheckStateException( " ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
686	[BUG]  [BUGGY]  new  CheckLevelException( " ");  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  CheckLevelException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  CheckLevelException( " ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
687	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EMPTY)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EMPTY)  {	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
688	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
689	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
690	[BUG]  [BUGGY]  t.report(n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
691	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
692	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
693	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  parent);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  parent);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
694	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
695	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
696	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
697	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
698	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
699	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.cloneTree()));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.cloneTree()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
700	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.getFirstChild()),  n);	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
701	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
702	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	94	None	replace
703	[BUG]  [BUGGY]  SafeTree())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SafeTree())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SafeTree())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
704	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
705	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
706	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  isSideEffectFreeCode,  isSimpleOp);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  isSideEffectFreeCode,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  isSideEffectFreeCode,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
707	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
708	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
709	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException(t,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException(t,  n);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
710	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  n);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "  +  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " "  +  n);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
711	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
712	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  n);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  n);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
713	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
714	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR,  n);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_SIGNATURE_ERROR,  n);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
715	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  n);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
716	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
717	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLevel())  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLevel())  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLevel())  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
718	[BUG]  [BUGGY]  t.declare(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.declare(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.declare(n,  level,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
719	[BUG]  [BUGGY]  t.log(Level.WARNING, "SideEffects: "  +  n.getString());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.log(Level.WARNING, "SideEffects: "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.log(Level.WARNING, "SideEffects: "  +  n.getString());	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
720	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  parent,  ancestorType);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  parent,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  parent,  ancestorType);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
721	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(parent,  n);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(parent,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(parent,  n);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
722	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	18	None	replace
723	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getFirstChild());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getFirstChild());	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
724	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getString());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n.getString());	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
725	[BUG]  [BUGGY]  ||  n.isSideEffectFreeCode())  {  return;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSideEffectFreeCode())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSideEffectFreeCode())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
726	[BUG]  [BUGGY]  ||  n.isFunctionSideEffects())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionSideEffects())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionSideEffects())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
727	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
728	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
729	[BUG]  [BUGGY]  parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
730	[BUG]  [BUGGY]  parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
731	[BUG]  [BUGGY]  parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
732	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  parent);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  parent);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
733	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  an,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  an,  level);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
734	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  Level.WARNING,  level);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
735	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
736	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
737	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ",  n);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
738	[BUG]  [BUGGY]  Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
739	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  level,  null);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  level,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  an,  level,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
740	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  parent,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  parent,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  parent,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
741	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  an,  level);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
742	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  null);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
743	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  an,  null);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_NAMESPACE_ERROR,  an,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
744	[BUG]  [BUGGY]  ||  n.isSimpleEffect())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffect())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffect())  {  return;	  ||    n.isEmpty())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
745	[BUG]  [BUGGY]  ||  level  ==  USELESS_EXPR_RESULT  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_EXPR_RESULT  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_EXPR_RESULT  ||  level  ==  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
746	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAIL_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAIL_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_FAIL_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
747	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
748	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
749	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
750	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_SIDE_ERROR,  ancestorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_SIDE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_SIDE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
751	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
752	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  null,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  null,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  null,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
753	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  this);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  this);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
754	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  parent);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  parent);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
755	[BUG]  [BUGGY]  Node  an  =  n.getAncestor(2);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor(2);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor(2);	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	41	None	replace
756	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  this,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  this,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  this,  level);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  	106	None	replace
757	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  this);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  this);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  	106	None	replace
758	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  this);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  this);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
759	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  null,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  null,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  null,  level);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
760	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  ancestorType,  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  ancestorType,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  ancestorType,  null);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
761	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  parent);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  parent);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
762	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
763	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
764	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
765	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  n);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  n);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
766	[BUG]  [BUGGY]  Parchet.checkState(parent.isEmpty());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(parent.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(parent.isEmpty());	  Parchet.checkState(n.isEmpty());    	non-compiled	[CE]  	60	None	replace
767	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
768	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
769	[BUG]  [BUGGY]  ||  level  ==  n  &&  level!=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  n  &&  level!=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  n  &&  level!=  USELESS_CODE_ERROR)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
770	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
771	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
772	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
773	[BUG]  [BUGGY]  AssertionFailedError  msg  =  n.getString();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  n.getString();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  n.getString();	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
774	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
775	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
776	[BUG]  [BUGGY]  Preconditions.checkState(parent.isEmpty()  ||  n.isComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(parent.isEmpty()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(parent.isEmpty()  ||  n.isComma());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
777	[BUG]  [BUGGY]  Preconditions.checkState(n.isAll()  ||  n.isComma());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isAll()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isAll()  ||  n.isComma());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
778	[BUG]  [BUGGY]  allowSideEffects(n,  parent)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  allowSideEffects(n,  parent)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	allowSideEffects(n,  parent)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(n)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	156	None	replace
779	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
780	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
781	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
782	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level  +  1);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level  +  1);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
783	[BUG]  [BUGGY]  ||  n.isCurrentStatement())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCurrentStatement())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCurrentStatement())  {  return;	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
784	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level  +  1);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t.getMessage(),  n,  level  +  1);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
785	[BUG]  [BUGGY]  throw  new  IllegalStateException(t.getMessage(),  n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalStateException(t.getMessage(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalStateException(t.getMessage(),  n,  level);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
786	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getString());	  [Delete]    	non-compiled	[CE]  	150	None	replace
787	[BUG]  [BUGGY]  ||  level  ==  n  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  n  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  n  &&  level  ==  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
788	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
789	[BUG]  [BUGGY]  ||  n.isExprComma())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprComma())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprComma())  {  throw  new  IllegalStateException( " ");	  ||    n.isExprResult())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
790	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);	  Throwables.throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
791	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
792	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
793	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
794	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
795	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
796	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " "  +  n.getLineno());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " "  +  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwable  msg  =  new  IllegalArgumentException( " "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
797	[BUG]  [BUGGY]  new  IllegalArgumentException( " "  +  n.getLineno());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "  +  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
798	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getCharno());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getCharno());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
799	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getSourceName());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getLineno(),  n.getSourceName());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  	123	None	replace
800	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
801	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  t);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  t);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
802	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  n);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  n);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
803	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  msg);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  msg);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
804	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  false);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  false);	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
805	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this));  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EXPR_RESULT,  n),  this));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
806	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
807	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  Level.WARNING,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
808	[BUG]  [BUGGY]  Context.checkState(parent.isComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(parent.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(parent.isComma());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
809	[BUG]  [BUGGY]  Context.checkState(n.isError());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isError());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isError());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
810	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
811	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
812	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
813	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  parent);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  an,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
814	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  parent,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  parent,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  parent,  level);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
815	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
816	[BUG]  [BUGGY]  reportError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n.getLineno(),  USELESS_CODE_ERROR);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
817	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
818	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_STANDARD_ERROR);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
819	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
820	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.NAME));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.NAME));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.NAME));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
821	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
822	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  this));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
823	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
824	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
825	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
826	[BUG]  [BUGGY]  Preconditions.checkState(n.isNull());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isNull());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isNull());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
827	[BUG]  [BUGGY]  Preconditions.checkState(n.isAll());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isAll());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isAll());	  Preconditions.checkState(n.isEmpty());    	non-compiled	[CE]  	116	None	replace
828	[BUG]  [BUGGY]  ||  n.isSideEffectFreeCode())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSideEffectFreeCode())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSideEffectFreeCode())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
829	[BUG]  [BUGGY]  ||  n.isExprState())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprState())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprState())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
830	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
831	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
832	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getFirstChild();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild().getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild().getFirstChild();	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
833	[BUG]  [BUGGY]  n.setLineno(parent.getLineno());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(parent.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(parent.getLineno());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
834	[BUG]  [BUGGY]  n.setLineno(n.getLineno(),  n.getSourceName());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno(),  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno(),  n.getSourceName());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
835	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  n);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  n);	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
836	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()  +  1));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()  +  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()  +  1));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
837	[BUG]  [BUGGY]  ||  n.isExprComma())  {  return;  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprComma())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprComma())  {  return;	  ||    n.isExprResult())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
838	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
839	[BUG]  [BUGGY]  Parchet.checkState(parent.isFunction());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(parent.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(parent.isFunction());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
840	[BUG]  [BUGGY]  Parchet.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.getType()  ==  Token.FUNCTION);	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
841	[BUG]  [BUGGY]  Parchet.checkState(n.isFunction()  &&  n.isComma());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isFunction()  &&  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isFunction()  &&  n.isComma());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
842	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
843	[BUG]  [BUGGY]  return  asSimpleEffectFreeCode.make(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  asSimpleEffectFreeCode.make(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  asSimpleEffectFreeCode.make(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
844	[BUG]  [BUGGY]  Context.checkState(n.isNull()  ||  n.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isNull()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isNull()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
845	[BUG]  [BUGGY]  Context.checkState(n.isAll()  ||  n.isComma());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isAll()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isAll()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
846	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_STANDARD_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
847	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
848	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
849	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
850	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  null);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  null);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
851	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  this);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  this);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
852	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  null);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n.getString(),    null);    	non-compiled	[CE]  	163	None	replace
853	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString()));  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getString()));	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  	84	None	replace
854	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	159	None	replace
855	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	159	None	replace
856	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	159	None	replace
857	[BUG]  [BUGGY]  n.removeChild(this);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(this);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
858	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
859	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
860	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
861	[BUG]  [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  return    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  not  a  statement	162	None	replace
862	[BUG]  [BUGGY]  AssertionFailedError.error(t,  n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.error(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.error(t,  n,  level);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
863	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
864	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
865	[BUG]  [BUGGY]  Parchet.checkState(parent.isComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(parent.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(parent.isComma());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
866	[BUG]  [BUGGY]  Parchet.checkState(n.isDefined());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isDefined());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isDefined());	  Parchet.checkState(n.isComma());    	non-compiled	[CE]  	59	None	replace
867	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
868	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_PROTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_PROTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_PROTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
869	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NEW)  {  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NEW)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NEW)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
870	[BUG]  [BUGGY]  parent!=  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  &&  parent.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
871	[BUG]  [BUGGY]  parent!=  null  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  ||  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
872	[BUG]  [BUGGY]  parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
873	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
874	[BUG]  [BUGGY]  parent!=  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  &&  parent.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
875	[BUG]  [BUGGY]  parent!=  null  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  ||  n.isComma())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
876	[BUG]  [BUGGY]  parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  &&  n.isExprResult())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
877	[BUG]  [BUGGY]  parent  ==  null  &&  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  &&  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  &&  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	90	None	replace
878	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "  +  n,  t);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  n,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  UnsupportedOperationException( " "  +  n,  t);	  throw    new    UnsupportedOperationException(   "   "),    t);    	non-compiled	[CE]  	157	None	replace
879	[BUG]  [BUGGY]  ||  n.isComparison())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isComparison())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isComparison())  {  throw  new  IllegalStateException( " ");	  ||    n.isExpr())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
880	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
881	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level));  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level));	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
882	[BUG]  [BUGGY]  new  IllegalArgumentException(n.getString());  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException(n.getString());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
883	[BUG]  [BUGGY]  new  IllegalArgumentException(n.getType()  ==  Token.NAME);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException(n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException(n.getType()  ==  Token.NAME);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
884	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  n.getLineno());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  n.getLineno());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
885	[BUG]  [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
886	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
887	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
888	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getLastChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
889	[BUG]  [BUGGY]  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	for(Node  an  :  n.getFirstChild().getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
890	[BUG]  [BUGGY]  ||  n.isSideEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSideEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSideEffectFreeCode())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
891	[BUG]  [BUGGY]  ||  n.isFunctionSideEffects())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionSideEffects())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionSideEffects())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
892	[BUG]  [BUGGY]  ||  n.isVarArgs())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isVarArgs())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isVarArgs())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
893	[BUG]  [BUGGY]  JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
894	[BUG]  [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  not  a  statement	164	None	replace
895	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  parent);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  parent);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
896	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  an,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  an,  level);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
897	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level  +  1);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level  +  1);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
898	[BUG]  [BUGGY]  return  new  CheckSideEffectsError(t,  n,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  CheckSideEffectsError(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  CheckSideEffectsError(t,  n,  level);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
899	[BUG]  [BUGGY]  ||  n.isComparison())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isComparison())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isComparison())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isExpr())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
900	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
901	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
902	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  level);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
903	[BUG]  [BUGGY]  return  asSimpleEffectFreeCode.create(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  asSimpleEffectFreeCode.create(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  asSimpleEffectFreeCode.create(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
904	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
905	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
906	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
907	[BUG]  [BUGGY]  test(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  USELESS_CODE_ERROR);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
908	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
909	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
910	[BUG]  [BUGGY]  scan(t,  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  scan(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	scan(t,  n,  level);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
911	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getType());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
912	[BUG]  [BUGGY]  reportError(t,  n,  level,  USAS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USAS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USAS_CODE_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
913	[BUG]  [BUGGY]  reportError(t,  n,  level-1);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level-1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level-1);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
914	[BUG]  [BUGGY]  While(!n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(!n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(!n.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
915	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLineno())  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLineno())  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getLineno())  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
916	[BUG]  [BUGGY]  parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isEmpty())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
917	[BUG]  [BUGGY]  parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isStatement())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
918	[BUG]  [BUGGY]  parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
919	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
920	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getParent())  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getParent())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getParent())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
921	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
922	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  an,  USELESS_CODE_ERROR,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
923	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  an);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
924	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
925	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_WARNING)    {    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
926	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  Throwables.throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
927	[BUG]  [BUGGY]  Context.checkState(n.isInitializingComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isInitializingComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isInitializingComma());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
928	[BUG]  [BUGGY]  Context.checkState(n.isComma()  ||  n.isExprResult());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isComma()  ||  n.isExprResult());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isComma()  ||  n.isExprResult());	  Context.checkState(n.isComma());    	non-compiled	[CE]  	117	None	replace
929	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  level);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
930	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
931	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
932	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	82	None	replace
933	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  n);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  UnsupportedOperationException( " "),  n);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
934	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
935	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
936	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	21	None	replace
937	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
938	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  return    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	168	None	replace
939	[BUG]  [BUGGY]  Reporter.warning(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Reporter.warning(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Reporter.warning(t,  n,  level,  USELESS_CODE_ERROR);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
940	[BUG]  [BUGGY]  Reporter.warning(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Reporter.warning(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Reporter.warning(t,  n,  USELESS_CODE_ERROR);	  reportError(t,    n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	111	None	replace
941	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
942	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
943	[BUG]  [BUGGY]  ||  n.isFunction())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunction())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunction())  {  return;  }	  ||    n.isFunction())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
944	[BUG]  [BUGGY]  ||  n.isInitializingFunction())  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isInitializingFunction())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isInitializingFunction())  {  return;	  ||    n.isFunction())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
945	[BUG]  [BUGGY]  ||  n.isUnknown())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isUnknown())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isUnknown())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleOp())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
946	[BUG]  [BUGGY]  parent!=  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  &&  n.isExprResult())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
947	[BUG]  [BUGGY]  parent!=  null  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent!=  null  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent!=  null  &&  n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	120	None	replace
948	[BUG]  [BUGGY]  State  state  =  n.getFirstChild();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  State  state  =  n.getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	State  state  =  n.getFirstChild();	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	120	None	replace
949	[BUG]  [BUGGY]  Node  an  =  node.getFirstChild();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  node.getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  node.getFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	43	None	replace
950	[BUG]  [BUGGY]  While(n.isComma())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isComma())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isComma())  {  throw  new  IllegalStateException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	64	None	replace
951	[BUG]  [BUGGY]  Parchet.checkArgument(n.isFunction());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkArgument(n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkArgument(n.isFunction());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
952	[BUG]  [BUGGY]  Parchet.checkNotNull(n.isFunction());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkNotNull(n.isFunction());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkNotNull(n.isFunction());	  Parchet.checkState(n.isFunction());    	non-compiled	[CE]  	65	None	replace
953	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
954	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
955	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	25	None	replace
956	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
957	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
958	[BUG]  [BUGGY]  ||  n.isStatement())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isStatement())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isStatement())  {  return;  }	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
959	[BUG]  [BUGGY]  ||  n.isStatement())  {  throw  new  AssertionFailedError(t,  n,  parent);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isStatement())  {  throw  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isStatement())  {  throw  new  AssertionFailedError(t,  n,  parent);	  ||    n.isStatement())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
960	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
961	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  isSimpleOp);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
962	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  an,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  an,  level);	  AssertionFailedError    t    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	93	None	replace
963	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
964	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  MESSAGE_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  MESSAGE_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  MESSAGE_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    this);    	non-compiled	[CE]  	106	None	replace
965	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
966	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
967	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
968	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
969	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.NAME,  n.getFirstChild()));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.NAME,  n.getFirstChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.NAME,  n.getFirstChild()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.getFirstChild()));    	non-compiled	[CE]  	152	None	replace
970	[BUG]  [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safely())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	121	None	replace
971	[BUG]  [BUGGY]  ||  n.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionPrototype())  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.isFunctionPrototype())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
972	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
973	[BUG]  [BUGGY]  Patrick  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Patrick  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Patrick  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet  Parchet	  Parchet    Parchet.checkState(n.isComma());    	non-compiled	[CE]  	154	None	replace
974	[BUG]  [BUGGY]  t.report(n,  level1,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level1,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level1,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
975	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ErROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ErROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ErROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
976	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR;  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR;	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
977	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
978	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  getJSDocInfo(n)));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  getJSDocInfo(n)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  getJSDocInfo(n)));	  parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	151	None	replace
979	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
980	[BUG]  [BUGGY]  Parchet.checkState(n.isAll()  ||  n.isComma());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isAll()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isAll()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
981	[BUG]  [BUGGY]  Parchet.checkState(n.isSimple()  ||  n.isComma());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isSimple()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isSimple()  ||  n.isComma());	  Parchet.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	57	None	replace
982	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
983	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getChildren())  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getChildren())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME)  {  for(Node  an  :  n.getChildren())  {  return;  }	  [Delete]    	non-compiled	[CE]  	150	None	replace
984	[BUG]  [BUGGY]  ||  n.isSimple())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimple())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimple())  {  return;	  ||    n.isEmpty())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
985	[BUG]  [BUGGY]  ||  n.isAll())  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isAll())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isAll())  {  return;	  ||    n.isEmpty())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
986	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
987	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getType());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").print(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
988	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  an);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
989	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  true);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  true);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  true);	  return    AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	143	None	replace
990	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
991	[BUG]  [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExtern());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.isEmpty()  ||  n.isExtern());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.isEmpty()  ||  n.isExtern());	  Preconditions.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	42	None	replace
992	[BUG]  [BUGGY]  n.setLineno(n.getLineno()  ||  n.isComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getLineno()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getLineno()  ||  n.isComma());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
993	[BUG]  [BUGGY]  n.setLineno(n.getCharno());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setLineno(n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setLineno(n.getCharno());	  n.setLineno(n.getLineno());    	non-compiled	[CE]  	160	None	replace
994	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
995	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
996	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild().getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	41	None	replace
997	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	81	None	replace
998	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  not  a  statement	13	None	replace
999	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
1000	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR.getLineno());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR.getLineno());	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
1001	[BUG]  [BUGGY]  reportError(t,  n,  level,  USAILL_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USAILL_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USAILL_CODE_ERROR);	  reportError(t,    n,    level);    	non-compiled	[CE]  	103	None	replace
1002	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_FACTOR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_FACTOR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_FACTOR  ||  level  ==  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FACTOR)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1003	[BUG]  [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectFreeCode())  {  return;  }	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1004	[BUG]  [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectfreeCode())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1005	[BUG]  [BUGGY]  ||  n.isProtectedSideEffectFreeCode())  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isProtectedSideEffectFreeCode())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isProtectedSideEffectFreeCode())  {  return;	  ||    n.isSimpleEffectFreeCode())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1006	[BUG]  [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1007	[BUG]  [BUGGY]  ||  n.isCallback())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCallback())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCallback())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1008	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1009	[BUG]  [BUGGY]  ||  n.isSimpleOp())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleOp())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleOp())  {  return;  }	  ||    n.isSimpleOp())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1010	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	96	None	replace
1011	[BUG]  [BUGGY]  ||  n.isCallback())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCallback())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCallback())  {  throw  new  IllegalStateException( " ");	  ||    n.isExpr())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1012	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1013	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
1014	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
1015	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_EXPECTED  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_EXPECTED  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_EXPECTED  ||  level  ==  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1016	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1017	[BUG]  [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectFreeCode())  {  throw  new  IllegalStateException( " ");  }	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1018	[BUG]  [BUGGY]  ||  n.isVarArgs())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isVarArgs())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isVarArgs())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1019	[BUG]  [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleEffectfreeCode())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleEffectFreeCode())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1020	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  protectSideEffectFreeCode);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
1021	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	164	None	replace
1022	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
1023	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  warning);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  warning);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  warning);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	119	None	replace
1024	[BUG]  [BUGGY]  ||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");	  ||    n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1025	[BUG]  [BUGGY]  Context.checkState(n.isDefine()  ||  n.isComma());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.isDefine()  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.isDefine()  ||  n.isComma());	  Context.checkState(n.isEmpty()    ||    n.isComma());    	non-compiled	[CE]  	44	None	replace
1026	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR);	  accept(t,    n,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	169	None	replace
1027	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  an);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeUtil.copyCurrentStructure(n,  n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeUtil.copyCurrentStructure(n,  n,  an);	  NodeUtil.copyCurrentStructure(n,    parent);    	non-compiled	[CE]  	118	None	replace
1028	[BUG]  [BUGGY]  accept(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
1029	[BUG]  [BUGGY]  accept(t,  n,  an,  NO_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  an,  NO_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  an,  NO_GLOBAL_EXPR_RESULT);	  accept(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	146	None	replace
1030	[BUG]  [BUGGY]  return  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
1031	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  not  a  statement	51	None	replace
1032	[BUG]  [BUGGY]  return  AssertionFailedError.make(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t.getMessage(),  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
1033	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  an,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t.getMessage(),  n,  an,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t.getMessage(),  n,  an,  level);	  throw    new    AssertionFailedError(t.getMessage(),    n,    level);    	non-compiled	[CE]  	51	None	replace
1034	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
1035	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
1036	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  compiler.reportCodeChange();  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  compiler.reportCodeChange();  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  compiler.reportCodeChange();  }	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
1037	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwAsStatement(t,  n,  level);  }  else  {  throw  new  IllegalStateException( " ");  }	  aughtExceptionHandler.throwAsStatement(t,    n,    level);    	non-compiled	[CE]  	58	None	replace
1038	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
1039	[BUG]  [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1040	[BUG]  [BUGGY]  AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1041	[BUG]  [BUGGY]  AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1042	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
1043	[BUG]  [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " ");  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.wrap(new  IllegalArgumentException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	53	None	replace
1044	[BUG]  [BUGGY]  ||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunction())  {  throw  new  IllegalStateException( " ");  }	  ||    n.isFunction())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1045	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  not  a  statement	23	None	replace
1046	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	23	None	replace
1047	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.getSourceName(),  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.getSourceName(),  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.getSourceName(),  n,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	92	None	replace
1048	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1049	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1050	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  an);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
1051	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  true);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  true);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  USELESS_CODE_ERROR,  true);	  return    AssertionFailedError.create(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	145	None	replace
1052	[BUG]  [BUGGY]  ParchetState.checkArgument(n.isEmpty());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ParchetState.checkArgument(n.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	ParchetState.checkArgument(n.isEmpty());	  ParchetState.checkState(n.isEmpty());    	non-compiled	[CE]  	91	None	replace
1053	[BUG]  [BUGGY]  ||  n.isFunctionPrototype())  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionPrototype())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionPrototype())  {  return;  }	  ||    n.isFunctionPrototype())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1054	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  an);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  an);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
1055	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protectSideEffectFreeCode);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
1056	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
1057	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
1058	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  message);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	141	None	replace
1059	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  an,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
1060	[BUG]  [BUGGY]  ||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isSimpleOp())  {  throw  new  IllegalStateException( " ");  }	  ||    n.isSimpleOp())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1061	[BUG]  [BUGGY]  ||  n.isUnknown())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isUnknown())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isUnknown())  {  throw  new  IllegalStateException( " ");	  ||    n.isSimpleOp())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1062	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
1063	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.cloneTree());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.cloneTree());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.cloneTree());	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
1064	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  an,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  an,  parent);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
1065	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.removeFirstChild());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.removeFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.removeFirstChild());	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	97	None	replace
1066	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
1067	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
1068	[BUG]  [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.create(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.create(t,  n,  level,  NON_SIGNATURE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_SIGNATURE_ERROR);    	non-compiled	[CE]  	127	None	replace
1069	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getString())  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME);  for(Node  an  :  n.getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
1070	[BUG]  [BUGGY]  for(Node  an  :  n.getFirstChild().getString())  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  for(Node  an  :  n.getFirstChild().getString())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	for(Node  an  :  n.getFirstChild().getString())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getLastChild().getFirstChild().getString())    {    return;    }    	non-compiled	[CE]  	161	None	replace
1071	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  an,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  an,  null);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
1072	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  an);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  an);	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
1073	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(t,    n.getLineno(),    null);    	non-compiled	[CE]  	68	None	replace
1074	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
1075	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectionSideEffectFreeCode);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
1076	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectSideEffectFreeCode);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
1077	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    this);    	non-compiled	[CE]  	26	None	replace
1078	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1079	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
1080	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  this,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	115	None	replace
1081	[BUG]  [BUGGY]  State  state  =  n.getState();  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  State  state  =  n.getState();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	State  state  =  n.getState();	  parent    ==    null    &&    n.isComma())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	90	None	replace
1082	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getFirstChild().getFirstChild().getNext()!=  null)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getFirstChild().getFirstChild().getNext()!=  null)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getFirstChild().getFirstChild().getNext()!=  null)  {  for(Node  an  :  n.getFirstChild().getFirstChild().getNext())  {  return;  }	  if(n.getType()    ==    Token.NAME)    {    for(Node    an    :    n.getFirstChild().getFirstChild().getNext())    {    return;    }    	non-compiled	[CE]  	158	None	replace
1083	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EXPR_RESULT,  n));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EXPR_RESULT,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.EXPR_RESULT,  n));	  parent.replaceChild(n,    new    Node(Token.EXPR_RESULT,    n));    	non-compiled	[CE]  	153	None	replace
1084	[BUG]  [BUGGY]  ||  n.isExtern())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExtern())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExtern())  {  throw  new  IllegalStateException( " ");  }	  ||    n.isExtern())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1085	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  msg);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    n);    	non-compiled	[CE]  	133	None	replace
1086	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_STANDARD_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
1087	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_STANDARD_ERROR,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    Level.WARNING,    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	112	None	replace
1088	[BUG]  [BUGGY]  ||  n.isLocal())  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isLocal())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isLocal())  {  return;	  ||    n.isExtern())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1089	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
1090	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	132	None	replace
1091	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
1092	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").append(n.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").append(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").append(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
1093	[BUG]  [BUGGY]  ||  n.isAll())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isAll())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isAll())  {  throw  new  IllegalStateException( " ");	  ||    n.isEmpty())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1094	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  an,  parent);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  an,  parent);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
1095	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  an);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  an);	  throw    new    AssertionFailedError(t,    n,    parent);    	non-compiled	[CE]  	105	None	replace
1096	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  	128	None	replace
1097	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  an);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  an);	  throw    new    AssertionFailedError(t,    n.getSourceName(),    null);    	non-compiled	[CE]  	69	None	replace
1098	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  protectiveSideEffectFreeCode);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  protectiveSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  protectiveSideEffectFreeCode);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
1099	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	95	None	replace
1100	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_STANDARD_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_STANDARD_ERROR);    	non-compiled	[CE]  	113	None	replace
1101	[BUG]  [BUGGY]  ||  n.isExprDeclaration())  {  return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isExprDeclaration())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isExprDeclaration())  {  return;	  ||    n.isFunctionDeclaration())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1102	[BUG]  [BUGGY]  ||  n.isDeclaration())  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isDeclaration())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isDeclaration())  {  return;	  ||    n.isFunctionDeclaration())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1103	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  protectionSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
1104	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  guard);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  guard);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  guard);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
1105	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parents);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parents);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parents);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	24	None	replace
1106	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
1107	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedException(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
1108	[BUG]  [BUGGY]  Parchet.checkArgument(n.isEmpty());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkArgument(n.isEmpty());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkArgument(n.isEmpty());	  Parchet.checkState(n.isEmpty());    	non-compiled	[CE]  	60	None	replace
1109	[BUG]  [BUGGY]  Parchet.checkState(n.isAll());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Parchet.checkState(n.isAll());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Parchet.checkState(n.isAll());	  Parchet.checkState(n.isEmpty());    	non-compiled	[CE]  	60	None	replace
1110	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ProTECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_PROTECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1111	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
1112	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
1113	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getNext());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getNext());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getNext());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	20	None	replace
1114	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level!=    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1115	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " "  +  n.getLineno());  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  IllegalArgumentException( " "  +  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  IllegalArgumentException( " "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "   "    +    n.getLineno());    	non-compiled	[CE]  not  a  statement	123	None	replace
1116	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1117	[BUG]  [BUGGY]  While(n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  While(n.isComma())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	While(n.isComma())  {  throw  new  IllegalArgumentException( " ");  }	  While(n.isEmpty())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	56	None	replace
1118	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  an,  null);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  an,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
1119	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  an,  null);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  an,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  an,  null);	  throw    new    AssertionFailedError(t,    n,    an,    null);    	non-compiled	[CE]  	165	None	replace
1120	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXPR_RESULT)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1121	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1122	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
1123	[BUG]  [BUGGY]  reportError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
1124	[BUG]  [BUGGY]  accept(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  accept(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	accept(t,  n,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
1125	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_ERROR);	  throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_ERROR);    	non-compiled	[CE]  	167	None	replace
1126	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
1127	[BUG]  [BUGGY]  Context.report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(n,  level,  USELESS_CODE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  	46	None	replace
1128	[BUG]  [BUGGY]  new  IllegalStateException( " "),  n);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( " "),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( " "),  n);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
1129	[BUG]  [BUGGY]  new  IllegalStateException( " "),  t);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( " "),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( " "),  t);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  	126	None	replace
1130	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  call  n.visit(t,  n,  parent);  [CE]  unclosed  string  literal  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( "Failed  to  call  n.visit(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( "Failed  to  call  n.visit(t,  n,  parent);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	126	None	replace
1131	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  n);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  n);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
1132	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1133	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1134	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  t);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.toString()),  t);	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
1135	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.trim()));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.NAME,  n.trim()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.NAME,  n.trim()));	  parent.replaceChild(n,    new    Node(Token.NAME,    n.toString()));    	non-compiled	[CE]  	155	None	replace
1136	[BUG]  [BUGGY]  parent  ==  null  ||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent  ==  null  ||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent  ==  null  ||  n.isSimple())  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    n.isComma())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	54	None	replace
1137	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1138	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1139	[BUG]  [BUGGY]  ||  n.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isFunctionPrototype())  {  throw  new  IllegalStateException( " ");  }	  ||    n.isFunctionPrototype())    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1140	[BUG]  [BUGGY]  n.addChildToFront(an);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.addChildToFront(an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.addChildToFront(an);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
1141	[BUG]  [BUGGY]  n.replaceChild(an,  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(an,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(an,  n);	  n.removeChild(parent);    	non-compiled	[CE]  	45	None	replace
1142	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
1143	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
1144	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	98	None	replace
1145	[BUG]  [BUGGY]  ||  n.isCallback())  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.isCallback())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.isCallback())  {  return;	  ||    n.isExpr())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1146	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
1147	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
1148	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (n.isExprResult())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    ancestorType);    	non-compiled	[CE]  	49	None	replace
