bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);  [CE]  <identifier>  expected  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
3	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
4	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
5	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  null;  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  null;  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  null;	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
6	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection();  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection();	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]    [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	  	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
8	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
9	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
10	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
11	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
12	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
13	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
14	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
15	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
16	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]  this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);	this.compiler  =  compiler;  	non-compiled	[CE]  <identifier>  expected	25	None	replace
