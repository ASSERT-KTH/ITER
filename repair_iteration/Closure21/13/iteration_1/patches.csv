bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  this.protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  this.protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
5	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
6	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  null,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  null,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  null,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  PROTECTOR_FN,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  PROTECTOR_FN,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  PROTECTOR_FN,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protègeSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protègeSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protègeSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection(compiler);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection(compiler);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection(compiler);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  This.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	This.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection  &&(StripProtection)compiler  :  new  StripProtection();	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(0);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(0);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(0);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(level);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(level);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &(StripProtection)compiler  :  new  StripProtection();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection  &(StripProtection)compiler  :  new  StripProtection();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection  &(StripProtection)compiler  :  new  StripProtection();	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protectiveSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectingSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  PROTECTOR_FN,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  PROTECTOR_FN,  new  CheckSideEffects());  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  PROTECTOR_FN,  new  CheckSideEffects());	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectiveSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectiveSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  this(compiler,  level,  null,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  null,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  null,  protectSideEffectFreeCode);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  this(compiler,  level,  true,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  true,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  true,  protectSideEffectFreeCode);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  false);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  USELESS_CODE_ERROR,  false);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  Compiler.checkState(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  Compiler.checkState(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	junit.framework.AssertionFailedError:  Compiler.checkState(compiler,  level,  protectSideEffectFreeCode);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  USELESS_CODE_ERROR);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  junit.framework.AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	junit.framework.AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
40	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  if(compiler  ==  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  this.compiler!=  null;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  this.compiler!=  null;  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	junit.framework.AssertionFailedError:  this.compiler!=  null;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  this.compiler  ==  null;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  junit.framework.AssertionFailedError:  this.compiler  ==  null;  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	junit.framework.AssertionFailedError:  this.compiler  ==  null;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
46	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
47	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
48	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
49	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  false);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  false);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  false);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  false);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  guardSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  guardSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  guardSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  true);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  true);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  true);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
56	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  USELESS_CODE_ERROR);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  false);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  true);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  true);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  true);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warnSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
60	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warning);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warning);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  warning);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects();  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects();	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  Lists.newArrayList();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  Lists.newArrayList();	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  CheckSideEffects(compiler,  level);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  AssertionFailedError(compiler,  level,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  AssertionFailedError(compiler,  level,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	AssertionFailedError(compiler,  level,  ProtectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  This.compiler  =  compiler;  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  This.compiler  =  compiler;  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	This.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
75	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
76	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
82	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
83	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
84	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects());	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects()  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects()  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideEffects()	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideE  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideE  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  new  CheckSideE	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(protectSideEffectFreeCode)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level  +  1);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level  +  1);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level  +  1);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
92	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
93	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
96	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
98	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
100	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
101	[BUG]  [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  true);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  true);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  USELESS_CODE_ERROR,  true);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
102	[BUG]  [BUGGY]  this(compiler,  level,  false);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  false);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  false);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
103	[BUG]  [BUGGY]  this(compiler,  level,  new  DiagnosticType(USERESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  new  DiagnosticType(USERESS_CODE_ERROR));  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  new  DiagnosticType(USERESS_CODE_ERROR));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
104	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  USELESS_CODE_ERROR);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
110	[BUG]  [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectS  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectS  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	safely(compiler)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectS	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
112	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
113	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  securitySideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  securitySideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  securitySideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  UNKNOWN;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  UNKNOWN;  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  UNKNOWN;	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    null;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
115	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
116	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkArgument(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkArgument(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkArgument(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(this.protectSideEffectFreeCode  ==  protectSideEffectFreeCode);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
119	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.compiler,  level,  USELESS_CODE_ERROR);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  1,  this.compiler,  level,  USELESS_CODE_ERROR);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
120	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
121	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectedSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
122	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protégerSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
123	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  builder);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  builder);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  builder);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.compiler  =  compiler;  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler!=  null);  this.compiler  =  compiler;  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler!=  null);  this.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
125	[BUG]  [BUGGY]  Iterator  <  CheckSideEffects>  level  =  compiler.getLevels().iterator();  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Iterator  <  CheckSideEffects>  level  =  compiler.getLevels().iterator();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Iterator  <  CheckSideEffects>  level  =  compiler.getLevels().iterator();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
126	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkState(compiler  ==  null);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
127	[BUG]  [BUGGY]  Iterator  <  CheckSideEffects>  it  =  compilers.iterator();  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Iterator  <  CheckSideEffects>  it  =  compilers.iterator();  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Iterator  <  CheckSideEffects>  it  =  compilers.iterator();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    protectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
128	[BUG]  [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
129	[BUG]  [BUGGY]  super(compiler,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  super(compiler,  level);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	super(compiler,  level);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
130	[BUG]  [BUGGY]  this(compiler,  level,  protectSideEffectFreeCode,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this(compiler,  level,  protectSideEffectFreeCode,  new  CheckSideEffects());  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this(compiler,  level,  protectSideEffectFreeCode,  new  CheckSideEffects());	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkArgument(this.protectSideEffectFreeCode!=  null);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  Preconditions.checkArgument(this.protectSideEffectFreeCode!=  null);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	Preconditions.checkArgument(this.protectSideEffectFreeCode!=  null);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    new    CheckSideEffects());    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
132	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
133	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
134	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  CheckSideEffects(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
135	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    	non-compiled	[CE]  <identifier>  expected	13	None	replace
136	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  protectionSideEffectFreeCode,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
137	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(compiler,  level,  ProtectSideEffectFreeCode,  protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
138	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  this.protectSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
139	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectSideEffectFreeCode,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
140	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  CheckSideEffects?(CheckSideEffects)compiler  :  new  CheckSideEffects(compiler,  level,  protectionSideEffectFreeCode);	  this.compiler    =    compiler    instanceof    CheckSideEffects?(CheckSideEffects)compiler    :    new    CheckSideEffects(compiler,    level,    protectSideEffectFreeCode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
141	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
142	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protecţiSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protecţiSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  protecţiSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    protectionSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
143	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(1);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(1);  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	this.compiler  =  compiler  instanceof  StripProtection?(StripProtection)compiler  :  new  StripProtection(1);	  this.compiler    =    compiler    instanceof    StripProtection?(StripProtection)compiler    :    new    StripProtection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
144	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    CheckSideEffects(AbstractCompiler  compiler,  CheckLevel  level,  boolean  protectSideEffectFreeCode)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }  [BUGGY]    this.level  =  level;  this.protectSideEffectFreeCode  =  protectSideEffectFreeCode;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  <init>  [RETURN_TYPE]  CheckLevel,boolean)  AbstractCompiler  compiler  CheckLevel  level  boolean  protectSideEffectFreeCode  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  List  problemNodes  String  PROTECTOR_FN  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	59	59	1	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(this.compiler,  0,  this.compiler,  level,  USELESS_CODE_ERROR,  ProtectSideEffectFreeCode);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    level,    USELESS_CODE_ERROR,    ProtectSideEffectFreeCode);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
