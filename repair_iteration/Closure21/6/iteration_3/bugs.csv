bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType,  false));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType,  false));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType,  false));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  true));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  true));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  true));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType,  false));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  level);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  level);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
7	[BUG]  [BUGGY]  Context.traverse(compiler,  n,  new  StripProtection(ancestorType,  false));  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Context.traverse(compiler,  n,  new  StripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Context.traverse(compiler,  n,  new  StripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	18	None	replace
9	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	18	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  level);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  level,  ancestorType);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  level,  ancestorType);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectSideEffectFreeCode);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  protectSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectiveSideEffectFreeCode);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectiveSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  protectiveSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectedSideEffectFreeCode);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  protectedSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  protectedSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp,  protectSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isSimpleOp);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  ancestorType);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  	9	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
23	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  StripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  stripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  new  StripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  level));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  level));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  level));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
27	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Traversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Traversal.traverse(compiler,  n,  level,  new  StripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection(ancestorType));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection(ancestorType));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
29	[BUG]  [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	21	None	replace
30	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	21	None	replace
31	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  false);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  false);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  false);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  MAXIMIZED_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  MAXIMIZED_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  MAXIMIZED_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  stripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
41	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  level,  StripProtection());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Traversal.traverse(compiler,  n,  level,  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Traversal.traverse(compiler,  n,  level,  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
42	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	17	None	replace
43	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	17	None	replace
44	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	17	None	replace
45	[BUG]  [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	parent.getType()  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	17	None	replace
46	[BUG]  [BUGGY]  n  =  an.getLastChild();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getLastChild();	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
47	[BUG]  [BUGGY]  n  =  an.getNext();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getNext();	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
48	[BUG]  [BUGGY]  n  =  parent.getFirstChild();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  parent.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  parent.getFirstChild();	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
49	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
50	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
51	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
52	[BUG]  [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.FUNCTION)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	16	None	replace
53	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Context.checkState(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Context.checkState(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	16	None	replace
54	[BUG]  [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	20	None	replace
56	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	20	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	6	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	6	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectedSideEffectFreeCode);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectedSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectedSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	6	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectiveSideEffectFreeCode);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectiveSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectiveSideEffectFreeCode);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	6	None	replace
61	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	19	None	replace
62	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	8	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  parent);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  msg);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  problemNodes);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  problemNodes);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  problemNodes);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  if(ancestorType!=  null  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  null  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  null  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  	1	None	replace
67	[BUG]  [BUGGY]  Node  n  =  an.getLastChild();  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getLastChild();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
68	[BUG]  [BUGGY]  Node  n  =  an.getNext();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getNext();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
69	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  parent.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  parent.getFirstChild();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
70	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.FUNCTION;	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
71	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getFirstChild()  ||  ancestorType!=  Token.FUNCTION;	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.EXPR_RESULT;	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  n.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  n.getLastChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
74	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  parent.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  Node  an  =  n.getAncestors();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  n.getAncestors();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  n.getAncestors();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
76	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  n.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  n.getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
77	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  an.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  an.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
78	[BUG]  [BUGGY]  Node  an  =  node.getFirstChild();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  node.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  node.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
79	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	18	None	replace
80	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	18	None	replace
81	[BUG]  [BUGGY]  Node  an  =  ancestorType.getFirstChild();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  ancestorType.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  ancestorType.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
82	[BUG]  [BUGGY]  Node  an  =  an.getLastChild();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  an.getLastChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	5	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  an);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	6	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  an,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  this.level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR),  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR),  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevelProperty(ancestorType,  USELESS_CODE_ERROR),  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  	7	None	replace
88	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler())	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	19	None	replace
89	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	19	None	replace
90	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	17	None	replace
91	[BUG]  [BUGGY]  if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)return;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)return;	  if(ancestorType    >=    Token.EXPR_RESULT    ||    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  	15	None	replace
92	[BUG]  [BUGGY]  if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  >>  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)return;	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  	1	None	replace
93	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
94	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
95	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  	12	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
97	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
98	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  	10	None	replace
99	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	21	None	replace
100	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	21	None	replace
101	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	16	None	replace
102	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	16	None	replace
103	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  	16	None	replace
104	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
105	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  isResultUsed));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  isResultUsed));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  isResultUsed));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectionSideEffectFreeCode));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectionSideEffectFreeCode));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectionSideEffectFreeCode));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
108	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  level);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  	11	None	replace
109	[BUG]  [BUGGY]  Node  n  =  an.getParent();  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getParent();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getParent();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
110	[BUG]  [BUGGY]  Node  n  =  an.getAncestors();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getAncestors();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getAncestors();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
111	[BUG]  [BUGGY]  Node  n  =  an.getOwnerDocument();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getOwnerDocument();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getOwnerDocument();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  	4	None	replace
112	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  	20	None	replace
113	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR,  false));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  USELESS_CODE_ERROR,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
114	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection(ancestorType,  false));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection(ancestorType,  false));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection(ancestorType,  false));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  	13	None	replace
115	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  	21	None	replace
116	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  >=  Token.BLOCK)return;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  >=  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  >=  Token.BLOCK)return;	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  	1	None	replace
117	[BUG]  [BUGGY]  n  =  an.removeFirstChild();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.removeFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.removeFirstChild();	  n    =    an.getFirstChild();    	non-compiled	[CE]  	14	None	replace
118	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.SEMI;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	n  =  an.getFirstChild()  ||  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
120	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
121	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
122	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
123	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  return;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  isResultUsed);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  isResultUsed);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  isResultUsed);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
125	[BUG]  [BUGGY]  Node  n  =  an.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.removeFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.removeFirstChild();	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
126	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  n  =  an.getFirstChild()  ||  ancestorType  ==  Token.COMMA;	  Node    n    =    an.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  t);  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  t);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType),  t);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
128	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectSideEffectFreeCode));  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectSideEffectFreeCode));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  protectSideEffectFreeCode));	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
130	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  isResultUsed  ||  isSimpleOp  ||!NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
131	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  USELESS_CODE_ERROR)return;  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  USELESS_CODE_ERROR)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  USELESS_CODE_ERROR)return;	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
132	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.SEMI)return;  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.SEMI)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.SEMI)return;	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
133	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.FUNCTION)return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.FUNCTION)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.FUNCTION)return;	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
134	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.CATCH)return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.CATCH)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.CATCH)return;	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    return;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  Node  an  =  an.getNext();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  Node  an  =  an.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	Node  an  =  an.getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
136	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  break;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR,  isResultUsed);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR,    isSimpleOp);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
139	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  this);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  this);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  this);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
140	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  t);  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  t);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(ancestorType,  false),  t);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection(ancestorType,    false));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
141	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtectionBuilder());  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtectionBuilder());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtectionBuilder());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
142	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  message);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
143	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR,  this);	  NodeTraversal.traverse(compiler,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
144	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      boolean  isResultUsed  =  NodeUtil.isExpressionResultUsed(n);  boolean  isSimpleOp  =  NodeUtil.isSimpleOperatorType(n.getType());  if  (parent.getType()  ==  Token.COMMA)  {  if  (isResultUsed)  {  return;  }  if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (!  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext())))  {  return;  }  }  if  (  (isSimpleOp  ||  !NodeUtil.mayHaveSideEffects(n,  t.getCompiler())))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure21/src/com/google/javascript/jscomp/CheckSideEffects.java	0.7071067811865475	121	121	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(isResultUsed  ||  isSimpleOp  ||  NodeUtil.mayHaveSideEffects(an,  t.getCompiler()))  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    if(isResultUsed    ||    isSimpleOp    ||!NodeUtil.mayHaveSideEffects(an,    t.getCompiler()))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
