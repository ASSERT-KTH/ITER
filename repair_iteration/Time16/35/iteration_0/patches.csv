bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.withLocale(locale);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.withLocale(locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.withLocale(locale);		non-compiled	[CE]  cannot  find  symbol	68	None	add
2	[BUG]  [BUGGY]    DateTimeParser  parser  =  iPrinter.withLocale(locale);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimeParser  parser  =  iPrinter.withLocale(locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimeParser  parser  =  iPrinter.withLocale(locale);		non-compiled	[CE]  cannot  find  symbol	68	None	add
3	[BUG]  [BUGGY]    Integer  locale  =  getLocale();  [CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    Integer  locale  =  getLocale();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    Integer  locale  =  getLocale();		non-compiled	[CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)	68	None	add
4	[BUG]  [BUGGY]    DateTimeFormatter  iPrinter  =  iPrinter.withLocale(locale);  [CE]  no  suitable  constructor  found  for  DateTimeFormatter(DateTimeFormatter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int)  [FE]          AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimeFormatter  iPrinter  =  iPrinter.withLocale(locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimeFormatter  iPrinter  =  iPrinter.withLocale(locale);		non-compiled	[CE]  no  suitable  constructor  found  for  DateTimeFormatter(DateTimeFormatter,DateTimeParser,Locale,boolean,Chronology,DateTimeZone,Integer,int)	68	None	add
5	[BUG]  [BUGGY]    if(locale  ==  null)  {  locale  =  DateTimeUtils.getLocale(locale);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    if(locale  ==  null)  {  locale  =  DateTimeUtils.getLocale(locale);  }  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    if(locale  ==  null)  {  locale  =  DateTimeUtils.getLocale(locale);  }		non-compiled	[CE]  cannot  find  symbol	68	None	add
6	[BUG]  [BUGGY]    int  locale  =  getLocale();  [CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)  [FE]              AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    int  locale  =  getLocale();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    int  locale  =  getLocale();		non-compiled	[CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)	68	None	add
7	[BUG]  [BUGGY]    Locale  locale  =  getLocale();  [CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)  [FE]                AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    Locale  locale  =  getLocale();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    Locale  locale  =  getLocale();		non-compiled	[CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)	68	None	add
8	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.createFormatter(iParser,  locale);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.createFormatter(iParser,  locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.createFormatter(iParser,  locale);		non-compiled	[CE]  cannot  find  symbol	68	None	add
9	[BUG]  [BUGGY]    DateTimeParser  parser  =  iPrinter.withLocale(getLocale());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimeParser  parser  =  iPrinter.withLocale(getLocale());  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimeParser  parser  =  iPrinter.withLocale(getLocale());		non-compiled	[CE]  cannot  find  symbol	68	None	add
10	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
11	[BUG]  [BUGGY]  iParser  parser  =  iPrinter.withLocale(locale);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  iPrinter.withLocale(locale);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  iPrinter.withLocale(locale);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
12	[BUG]  [BUGGY]  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  missing  return  statement  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  missing  return  statement	69	None	replace
13	[BUG]  [BUGGY]  if(iParser  ==  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CE]  missing  return  statement  [FE]          AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  if(iParser  ==  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	if(iParser  ==  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  missing  return  statement	69	None	replace
14	[BUG]  [BUGGY]  if(iParser!=  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CE]  missing  return  statement  [FE]            AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  if(iParser!=  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	if(iParser!=  null)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  missing  return  statement	69	None	replace
15	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimePrinter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
16	[BUG]  [BUGGY]  iParser  parser  =  iPrinter.createFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  iPrinter.createFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  iPrinter.createFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
17	[BUG]  [BUGGY]  iParser  parser  =  iPrinter.withLocale(locale);  return  new  DateTimeFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  iPrinter.withLocale(locale);  return  new  DateTimeFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  iPrinter.withLocale(locale);  return  new  DateTimeFormatter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
18	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimeFormatter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimeFormatter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimeFormatter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
19	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]                      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]    [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	  	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  missing  return  statement	69	None	replace
20	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimePrinter(iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
21	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
22	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getDateTimeFormat( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getDateTimeFormat( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.getDateTimeFormat( "yyyy-MM-dd'T'HH:mm:ss.SSS ");		non-compiled	[CE]  cannot  find  symbol	68	None	add
23	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getInstance(locale);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getInstance(locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.getInstance(locale);		non-compiled	[CE]  cannot  find  symbol	68	None	add
24	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getFormatter( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getFormatter( "yyyy-MM-dd'T'HH:mm:ss.SSS ");  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.getFormatter( "yyyy-MM-dd'T'HH:mm:ss.SSS ");		non-compiled	[CE]  cannot  find  symbol	68	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  getPrinter();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	    DateTimePrinter  printer  =  getPrinter();		compilable	  [FE]  AssertionFailedError  	68	7	add
26	[BUG]  [BUGGY]    DateTimePrinter  printer  =  getPrinter();  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  getPrinter();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  getPrinter();		compilable	  [FE]  AssertionFailedError  	68	7	add
27	[BUG]  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getInstance();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  iPrinter.getInstance();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  iPrinter.getInstance();		non-compiled	[CE]  cannot  find  symbol	68	None	add
28	[BUG]  [BUGGY]    DateTimePrinter  printer  =  getFormatter(locale);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  printer  =  getFormatter(locale);  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  printer  =  getFormatter(locale);		non-compiled	[CE]  cannot  find  symbol	68	None	add
29	[BUG]  [BUGGY]  if(iParser  ==  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CE]  cannot  find  symbol  parser  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  if(iParser  ==  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	if(iParser  ==  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol  parser	69	None	replace
30	[BUG]  [BUGGY]  if(iParser!=  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CE]  cannot  find  symbol  parser  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  if(iParser!=  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	if(iParser!=  parser)  {  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol  parser	69	None	replace
31	[BUG]  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iLocale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  [BUGGY]  iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iLocale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  [BUGGY]  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	191	192	7	replace	iParser  parser  =  new  DateTimePrinter(iPrinter,  locale,  iLocale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);	return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  	non-compiled	[CE]  cannot  find  symbol	69	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  iPrinter  =  getPrinter();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	    DateTimePrinter  iPrinter  =  getPrinter();		compilable	  [FE]  AssertionFailedError  	68	7	add
33	[BUG]  [BUGGY]    DateTimePrinter  iPrinter  =  getPrinter();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimePrinter  iPrinter  =  getPrinter();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimePrinter  iPrinter  =  getPrinter();		compilable	  [FE]  AssertionFailedError  	68	7	add
34	[BUG]  [BUGGY]    Integer  locale  =  iChrono.getInstanceUTC();  [CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    Integer  locale  =  iChrono.getInstanceUTC();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    Integer  locale  =  iChrono.getInstanceUTC();		non-compiled	[CE]  variable  locale  is  already  defined  in  method  withLocale(Locale)	68	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimeParser  iParser  =  getParser();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	    DateTimeParser  iParser  =  getParser();		compilable	  [FE]  AssertionFailedError  	68	7	add
36	[BUG]  [BUGGY]    DateTimeParser  iParser  =  getParser();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    DateTimeParser  iParser  =  getParser();  [BUGGY]  if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	    DateTimeParser  iParser  =  getParser();		compilable	  [FE]  AssertionFailedError  	68	7	add
