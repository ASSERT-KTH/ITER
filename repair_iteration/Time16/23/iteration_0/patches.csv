bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter();	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
2	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter(buf);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter(buf);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter(buf);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  getPrinter();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	add	DateTimePrinter  printer  =  getPrinter();	DateTimePrinter  printer  =  requirePrinter();  	compilable	  [FE]  AssertionFailedError  	45	7	replace
4	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getPrinter();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  getPrinter();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  getPrinter();	DateTimePrinter  printer  =  requirePrinter();  	compilable	  [FE]  AssertionFailedError  	45	7	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter;  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	add	DateTimePrinter  printer  =  iPrinter;	DateTimePrinter  printer  =  requirePrinter();  	compilable	  [FE]  AssertionFailedError  	45	7	replace
6	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter;  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter;  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter;	DateTimePrinter  printer  =  requirePrinter();  	compilable	  [FE]  AssertionFailedError  	45	7	replace
7	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.requirePrinter();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter.requirePrinter();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter.requirePrinter();	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
8	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter(buf,  instant);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter(buf,  instant);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter(buf,  instant);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
9	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinterFactory().printTo(buf,  instant,  chrono);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinterFactory().printTo(buf,  instant,  chrono);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinterFactory().printTo(buf,  instant,  chrono);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
10	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.withZone(chrono);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter.withZone(chrono);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter.withZone(chrono);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
11	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.withUTC();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  iPrinter.withUTC();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  iPrinter.withUTC();	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol	45	None	replace
12	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  printer  [FE]                      AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]    [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	  	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol  printer	45	None	replace
13	[BUG]  [BUGGY]    int  newPos  =  iParser.parseInstant(instant,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]    AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iParser.parseInstant(instant,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iParser.parseInstant(instant,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
14	[BUG]  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]      AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.parseInstant(instant,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
15	[BUG]  [BUGGY]    int  newPos  =  text.length();  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]        AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  text.length();  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  text.length();		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
16	[BUG]  [BUGGY]    newPos  =  iChrono.parseInstant(instant,  text,  position);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    newPos  =  iChrono.parseInstant(instant,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    newPos  =  iChrono.parseInstant(instant,  text,  position);		non-compiled	[CE]  cannot  find  symbol	44	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    instant.setChronology(chrono);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	add	    instant.setChronology(chrono);		compilable	  [FE]  AssertionFailedError  	44	7	add
18	[BUG]  [BUGGY]    instant.setChronology(chrono);  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    instant.setChronology(chrono);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    instant.setChronology(chrono);		compilable	  [FE]  AssertionFailedError  	44	7	add
19	[BUG]  [BUGGY]    int  newPos  =  iParser.parseInto(bucket,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]              AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iParser.parseInto(bucket,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iParser.parseInto(bucket,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
20	[BUG]  [BUGGY]    int  newPos  =  iPrinter.parseInstant(instant,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iPrinter.parseInstant(instant,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iPrinter.parseInstant(instant,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
21	[BUG]  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant,  text);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                  AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant,  text);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.parseInstant(instant,  text);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
22	[BUG]  [BUGGY]    int  newPos  =  iParser.parseInstant(instant,  text);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                    AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iParser.parseInstant(instant,  text);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iParser.parseInstant(instant,  text);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
23	[BUG]  [BUGGY]    int  newPos  =  iPrinter.parseInstant(bucket,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                      AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iPrinter.parseInstant(bucket,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iPrinter.parseInstant(bucket,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
24	[BUG]  [BUGGY]    int  newPos  =  iPrinter.parseInto(bucket,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]    AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iPrinter.parseInto(bucket,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iPrinter.parseInto(bucket,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
25	[BUG]  [BUGGY]    int  newPos  =  iChrono.parseInto(bucket,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]      AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.parseInto(bucket,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.parseInto(bucket,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
26	[BUG]  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]        AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.parseInstant(instant);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.parseInstant(instant);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
27	[BUG]  [BUGGY]    int  newPos  =  instant.getPivotYear();  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]          AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  instant.getPivotYear();  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  instant.getPivotYear();		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
28	[BUG]  [BUGGY]    int  newPos  =  iChrono.parse(bucket,  text,  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]            AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.parse(bucket,  text,  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.parse(bucket,  text,  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
29	[BUG]  [BUGGY]  DateTimePrinter  printer  =  requirePrinter(buf);  [CE]  method  requirePrinter  in  class  DateTimeFormatter  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  requirePrinter(buf);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  requirePrinter(buf);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  method  requirePrinter  in  class  DateTimeFormatter  cannot  be  applied  to  given  types;	45	None	replace
30	[BUG]  [BUGGY]  DateTimePrinter  printer  =  parser.requirePrinter();  [CE]  cannot  find  symbol  parser  [FE]      AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  parser.requirePrinter();  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  parser.requirePrinter();	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  cannot  find  symbol  parser	45	None	replace
31	[BUG]  [BUGGY]    int  newPos  =  getOffset(bucket.getOffset(),  parsedOffset);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]    AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  getOffset(bucket.getOffset(),  parsedOffset);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  getOffset(bucket.getOffset(),  parsedOffset);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
32	[BUG]  [BUGGY]    int  newPos  =  iChrono.getOffsetMillis(parsedOffset);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]      AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.getOffsetMillis(parsedOffset);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.getOffsetMillis(parsedOffset);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
33	[BUG]  [BUGGY]    int  newPos  =  getOffset(bucket.getLocalMillis(),  position);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]        AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  getOffset(bucket.getLocalMillis(),  position);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  getOffset(bucket.getLocalMillis(),  position);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
34	[BUG]  [BUGGY]    int  newPos  =  getOffset(parsedOffset,  iLocale);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]          AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  getOffset(parsedOffset,  iLocale);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  getOffset(parsedOffset,  iLocale);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
35	[BUG]  [BUGGY]    int  newPos  =  iChrono.getOffset(parsedOffset);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]            AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  iChrono.getOffset(parsedOffset);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  iChrono.getOffset(parsedOffset);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
36	[BUG]  [BUGGY]    int  newPos  =  getOffset(bucket.getLocalMillis(),  parsedOffset);  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]              AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  getOffset(bucket.getLocalMillis(),  parsedOffset);  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  getOffset(bucket.getLocalMillis(),  parsedOffset);		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
37	[BUG]  [BUGGY]    int  newPos  =  parsedOffset  -  text.length();  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  parsedOffset  -  text.length();  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  parsedOffset  -  text.length();		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
38	[BUG]  [BUGGY]    int  newPos  =  parsedOffset  +  text.length();  [CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)  [FE]                  AssertionFailedError  [CONTEXT]  int  parsedOffset  =  bucket.getOffsetInteger();  DateTimeZone  parsedZone  =  DateTimeZone.forOffsetMillis(parsedOffset);  chrono  =  chrono.withZone(parsedZone);  }  else  if  (bucket.getZone()  !=  null)  {  chrono  =  chrono.withZone(bucket.getZone());  }  instant.setChronology(chrono);  if  (iZone  !=  null)  {  instant.setZone(iZone);  }  [BUGGY]    int  newPos  =  parsedOffset  +  text.length();  [BUGGY]  return  newPos;  }  [CLASS]  DateTimeFormatter  [METHOD]  parseInto  [RETURN_TYPE]  int  ReadWritableInstant  instant  String  text  int  position  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  DateTimeParserBucket  bucket  ReadWritableInstant  instant  Chronology  chrono  iChrono  String  text  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  parsedZone  zone  int  defaultYear  iDefaultYear  newPos  offset  parsedOffset  pivotYear  position  long  instantLocal  instantMillis  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.7071067811865476	723	723	7	replace	    int  newPos  =  parsedOffset  +  text.length();		non-compiled	[CE]  variable  newPos  is  already  defined  in  method  parseInto(ReadWritableInstant,String,int)	44	None	add
39	[BUG]  [BUGGY]  DateTimePrinter  printer  =  selectChronology(chrono);  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  private  void  printTo(StringBuffer  buf,  long  instant,  Chronology  chrono)  {  [BUGGY]  DateTimePrinter  printer  =  selectChronology(chrono);  [BUGGY]  chrono  =  selectChronology(chrono);    DateTimeZone  zone  =  chrono.getZone();  int  offset  =  zone.getOffset(instant);  long  adjustedInstant  =  instant  +  offset;  if  ((instant  ^  adjustedInstant)  <  0  &&  (instant  ^  offset)  >=  0)  {  zone  =  DateTimeZone.UTC;  offset  =  0;  [CLASS]  DateTimeFormatter  [METHOD]  printTo  [RETURN_TYPE]  void  StringBuffer  buf  long  instant  Chronology  chrono  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  StringBuffer  buf  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  long  adjustedInstant  instant  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6831300510639733	618	618	7	replace	DateTimePrinter  printer  =  selectChronology(chrono);	DateTimePrinter  printer  =  requirePrinter();  	non-compiled	[CE]  incompatible  types	45	None	replace
