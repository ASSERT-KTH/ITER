bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
2	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
4	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
6	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]    [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	  	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
8	[BUG]  [BUGGY]    printer  =  iPrinter.withZone(iZone);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.withZone(iZone);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.withZone(iZone);		non-compiled	[CE]  cannot  find  symbol	66	None	add
9	[BUG]  [BUGGY]    printer  =(DateTimePrinter)printer.clone();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =(DateTimePrinter)printer.clone();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =(DateTimePrinter)printer.clone();		non-compiled	[CE]  cannot  find  symbol	66	None	add
10	[BUG]  [BUGGY]    iPrinter  =  printer.withZone(iZone);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]        AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    iPrinter  =  printer.withZone(iZone);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    iPrinter  =  printer.withZone(iZone);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	66	None	add
11	[BUG]  [BUGGY]    printer  =  iPrinter.withLocalMillis(iLocalMillis);  [CE]  cannot  find  symbol  iLocalMillis  [FE]          AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.withLocalMillis(iLocalMillis);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.withLocalMillis(iLocalMillis);		non-compiled	[CE]  cannot  find  symbol  iLocalMillis	66	None	add
12	[BUG]  [BUGGY]    printer  =  iPrinter.withZone(iLocale);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.withZone(iLocale);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.withZone(iLocale);		non-compiled	[CE]  cannot  find  symbol	66	None	add
13	[BUG]  [BUGGY]    printer  =  iPrinter.getParser();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.getParser();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.getParser();		non-compiled	[CE]  cannot  find  symbol	66	None	add
14	[BUG]  [BUGGY]    iPrinter  =  printer.getParser();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    iPrinter  =  printer.getParser();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    iPrinter  =  printer.getParser();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	66	None	add
15	[BUG]  [BUGGY]    printer  =  new  DateTimePrinter(this.iZone,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  new  DateTimePrinter(this.iZone,  iLocale);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  new  DateTimePrinter(this.iZone,  iLocale);		non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	66	None	add
16	[BUG]  [BUGGY]    Printer  printer  =  iPrinter.withZone(iZone);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    Printer  printer  =  iPrinter.withZone(iZone);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    Printer  printer  =  iPrinter.withZone(iZone);		non-compiled	[CE]  cannot  find  symbol	66	None	add
17	[BUG]  [BUGGY]    printer  =  new  DateTimePrinter(this.iZone,  this.iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  new  DateTimePrinter(this.iZone,  this.iLocale);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  new  DateTimePrinter(this.iZone,  this.iLocale);		non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	66	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
19	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  DateTimeFormatter  withLocale(Locale  locale)  {  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]  return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	if  (locale  ==  getLocale()  ||  (locale  !=  null  &&  locale.equals(getLocale())))  {  	compilable	  [FE]  AssertionFailedError  	67	7	replace
20	[BUG]  [BUGGY]    printer  =  new  DateTimePrinter(getChronology());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]    AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  new  DateTimePrinter(getChronology());  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  new  DateTimePrinter(getChronology());		non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	66	None	add
21	[BUG]  [BUGGY]    printer  =  new  DateTimePrinter(printer.getChronology());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  new  DateTimePrinter(printer.getChronology());  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  new  DateTimePrinter(printer.getChronology());		non-compiled	[CE]  cannot  find  symbol	66	None	add
22	[BUG]  [BUGGY]    printer  =  iPrinter.withUTC();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.withUTC();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.withUTC();		non-compiled	[CE]  cannot  find  symbol	66	None	add
23	[BUG]  [BUGGY]    printer  =(DateTimePrinter)printer.getParser();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =(DateTimePrinter)printer.getParser();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =(DateTimePrinter)printer.getParser();		non-compiled	[CE]  cannot  find  symbol	66	None	add
24	[BUG]  [BUGGY]    iPrinter  =  printer.withUTC();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]            AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    iPrinter  =  printer.withUTC();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    iPrinter  =  printer.withUTC();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	66	None	add
25	[BUG]  [BUGGY]    printer  =  new  DateTimePrinter(getChronology()).requirePrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  new  DateTimePrinter(getChronology()).requirePrinter();  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  new  DateTimePrinter(getChronology()).requirePrinter();		non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	66	None	add
26	[BUG]  [BUGGY]    printer  =  iPrinter.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =  iPrinter.withLocalMillis(iLocale);  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =  iPrinter.withLocalMillis(iLocale);		non-compiled	[CE]  cannot  find  symbol	66	None	add
27	[BUG]  [BUGGY]    printer  =(DateTimePrinter)printer.clone();  iLocale  =  locale;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    printer  =(DateTimePrinter)printer.clone();  iLocale  =  locale;  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    printer  =(DateTimePrinter)printer.clone();  iLocale  =  locale;		non-compiled	[CE]  cannot  find  symbol	66	None	add
28	[BUG]  [BUGGY]    if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }		non-compiled	[CE]  illegal  start  of  expression	66	None	add
29	[BUG]  [BUGGY]    if(printer  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException( "Printing  not  supported ");  }  [BUGGY]    if(printer  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]  return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	    if(printer  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }		non-compiled	[CE]  illegal  start  of  expression	66	None	add
