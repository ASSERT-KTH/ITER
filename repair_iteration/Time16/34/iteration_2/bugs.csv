bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iPrinter.withUTC());	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
2	[BUG]  [BUGGY]  Printer  printer  =  iPrinter.withUTC();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iPrinter.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iPrinter.withUTC();	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
3	[BUG]  [BUGGY]  printer  =  iPrinter.withUTC(iChrono);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withUTC(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withUTC(iChrono);	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
4	[BUG]  [BUGGY]  printer  =  iPrinter.withoutUTC();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withoutUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withoutUTC();	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
5	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iLocale);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iLocale);	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
6	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iChrono);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iPrinter.withUTC(),  iChrono);	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
7	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.getParser(),  iLocale);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.getParser(),  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iPrinter.getParser(),  iLocale);	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
8	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(zone);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(zone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(zone);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
9	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(iChrono);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(iChrono);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
10	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(this.iZone);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(this.iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(this.iZone);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
11	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(iLocale);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
12	[BUG]  [BUGGY]  printer  =  printer.withZone(iZone);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  printer.withZone(iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  printer.withZone(iZone);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
13	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(iZone,  iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(iZone,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(iZone,  iLocale);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
14	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(iZone,  iPivotYear);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(iZone,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(iZone,  iPivotYear);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
15	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(iZone,  iDefaultYear);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(iZone,  iDefaultYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(iZone,  iDefaultYear);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
16	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iZone);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iZone);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iChrono);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iChrono);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iOffsetParsed);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iOffsetParsed);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iOffsetParsed);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
19	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iPivotYear);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iPivotYear);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
20	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iDefaultYear);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iDefaultYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iDefaultYear);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
21	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iParser);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iParser);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
22	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iTimeZone);  [CE]  cannot  find  symbol  iTimeZone  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iTimeZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iTimeZone);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol  iTimeZone	11	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	9	replace
24	[BUG]  [BUGGY]  if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	9	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  &&  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  &&  locale!=  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	8	replace
26	[BUG]  [BUGGY]  if(locale  ==  getLocale()  &&  locale!=  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  &&  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  &&  locale!=  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	8	replace
27	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equalsIgnoreCase(getLocale()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equalsIgnoreCase(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equalsIgnoreCase(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
28	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	2	None	replace
29	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getOwnLocale()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getOwnLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getOwnLocale()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
30	[BUG]  [BUGGY]  Printer  printer  =  iZone.withZone(iPrinter);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withZone(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withZone(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
31	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPrinter(iPrinter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPrinter(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPrinter(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
32	[BUG]  [BUGGY]  Printer  printer  =  iZone.withField(iPrinter);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withField(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withField(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
33	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPivotYear(iPrinter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPivotYear(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPivotYear(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
34	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPercentile(iPrinter);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPercentile(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPercentile(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
35	[BUG]  [BUGGY]  Printer  printer  =  iZone.withImmediateParser(iPrinter);  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withImmediateParser(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withImmediateParser(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
36	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPermission(iPrinter);  [CE]  cannot  find  symbol  [FE]                                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPermission(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPermission(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
37	[BUG]  [BUGGY]  Printer  printer  =  iZone.withImmutableField(iPrinter);  [CE]  cannot  find  symbol  [FE]                                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withImmutableField(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withImmutableField(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
38	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iChrono);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iChrono);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
39	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iChrono);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  iChrono);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
40	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iZone,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iZone,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iZone,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
41	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iLocale,  this.iChrono);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iLocale,  this.iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  iLocale,  this.iChrono);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
42	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iPivotYear,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iPivotYear,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  iPivotYear,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
43	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  this.iZone,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  this.iZone,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono,  this.iZone,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
44	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iLocale,  iPivotYear);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iLocale,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  iLocale,  iPivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
45	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
46	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
47	[BUG]  [BUGGY]  iPrinter  =  parser.getParser();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  parser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  parser.getParser();	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
48	[BUG]  [BUGGY]  iPrinter  =  printer.requirePrinter();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.requirePrinter();	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
49	[BUG]  [BUGGY]  parser  =  printer.getParser();  [CE]  cannot  find  symbol  parser  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parser  =  printer.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parser  =  printer.getParser();	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  find  symbol  parser	14	None	replace
50	[BUG]  [BUGGY]  iPrinter  =  printer.getParser(iChrono);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.getParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.getParser(iChrono);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
51	[BUG]  [BUGGY]  iPrinter  =  printer.withParser(iChrono);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withParser(iChrono);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
52	[BUG]  [BUGGY]  iPrinter  =  printer.withParser(iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withParser(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withParser(iLocale);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
53	[BUG]  [BUGGY]  iPrinter  =  printer.findParser(iChrono);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.findParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.findParser(iChrono);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
54	[BUG]  [BUGGY]  printer  =  printer.getParser();  [CE]  cannot  find  symbol  [FE]                                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  printer.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  printer.getParser();	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
55	[BUG]  [BUGGY]  if(printer  ==  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer  ==  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer  ==  null)  {  if(iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  if(printer!=  null)  {  if(locale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(locale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(locale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  if(locale  ==  locale)  {  if(printer!=  null)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(locale  ==  locale)  {  if(printer!=  null)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(locale  ==  locale)  {  if(printer!=  null)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
58	[BUG]  [BUGGY]  if(printer  ==  null)  {  if(locale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer  ==  null)  {  if(locale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer  ==  null)  {  if(locale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
59	[BUG]  [BUGGY]  if(iLocale!=  locale)  {  if(printer!=  null)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iLocale!=  locale)  {  if(printer!=  null)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iLocale!=  locale)  {  if(printer!=  null)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
60	[BUG]  [BUGGY]  if(iPrinter!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iPrinter!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iPrinter!=  null)  {  if(iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
61	[BUG]  [BUGGY]  if(locale!=  locale)  {  if(printer!=  null)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(locale!=  locale)  {  if(printer!=  null)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(locale!=  locale)  {  if(printer!=  null)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
62	[BUG]  [BUGGY]  if(printer!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
63	[BUG]  [BUGGY]  if(iLocale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iLocale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iLocale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
64	[BUG]  [BUGGY]  if(iPrinter!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iPrinter!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iPrinter!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
65	[BUG]  [BUGGY]  if(printer!=  null)  {  if(locale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(locale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(locale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  if(locale!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(locale!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(locale!=  null)  {  if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  if(locale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(locale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(locale!=  locale)  {  if(printer  ==  null)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  if(printer  ==  null)  {  if(locale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer  ==  null)  {  if(locale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer  ==  null)  {  if(locale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
69	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
70	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
71	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
72	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
73	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
74	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    if(locale  >=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
75	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iPrinter.clone();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iPrinter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iPrinter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
76	[BUG]  [BUGGY]  printer  =(DateTimePrinter)this.iPrinter.clone();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)this.iPrinter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)this.iPrinter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
77	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iprinter.clone();  [CE]  cannot  find  symbol  iprinter  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iprinter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iprinter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol  iprinter	9	None	replace
78	[BUG]  [BUGGY]  Printer  printer  =(DateTimePrinter)iPrinter.clone();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =(DateTimePrinter)iPrinter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =(DateTimePrinter)iPrinter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
79	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iParser.clone();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iParser.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iParser.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
80	[BUG]  [BUGGY]  printer  =(DateTimePrinter)delegate.clone();  [CE]  cannot  find  symbol  delegate  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)delegate.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)delegate.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol  delegate	9	None	replace
81	[BUG]  [BUGGY]  printer  =(DateTimePrinter)super.clone();  [CE]  missing  return  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)super.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)super.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  missing  return  statement	9	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	9	replace
83	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	9	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	9	replace
85	[BUG]  [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	9	replace
86	[BUG]  [BUGGY]  if(locale  ==  getDefaultLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getDefaultLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getDefaultLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
87	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	19	None	replace
88	[BUG]  [BUGGY]  iPrinter.setLocale(locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iPrinter.setLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iPrinter.setLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
89	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  iPrinter.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  iPrinter.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
90	[BUG]  [BUGGY]  iPrinter  =  iPrinter.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iPrinter  =  iPrinter.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iPrinter  =  iPrinter.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
91	[BUG]  [BUGGY]  DateTimePrinter  parser  =  iPrinter.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  parser  =  iPrinter.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  parser  =  iPrinter.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
92	[BUG]  [BUGGY]  DateTimeParser  parser  =  iPrinter.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimeParser  parser  =  iPrinter.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimeParser  parser  =  iPrinter.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  iParser  =  iPrinter.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iParser  =  iPrinter.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iParser  =  iPrinter.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  iParser.setLocale(locale);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iParser.setLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iParser.setLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.createFormatter(iLocale,  locale);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  iPrinter.createFormatter(iLocale,  locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  iPrinter.createFormatter(iLocale,  locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
96	[BUG]  [BUGGY]  iPrinter.setLocale(getLocale());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iPrinter.setLocale(getLocale());  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iPrinter.setLocale(getLocale());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
98	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale!=  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale!=  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  ==  getLocale()  ||  (locale!=  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
99	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale!=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale!=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale!=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
100	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  >=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  >=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  >=  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
101	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale  >=  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  (locale  >=  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  ==  getLocale()  ||  (locale  >=  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
102	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  If(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  If(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    If(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
103	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
104	[BUG]  [BUGGY]  iLocale  =  locale;  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
105	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
106	[BUG]  [BUGGY]  iLocale  =  locale.clone();  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =  locale.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =  locale.clone();	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
107	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iLocale.clone();  iLocale  =  locale;  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iLocale.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iLocale.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
108	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iParser.clone();  iLocale  =  locale;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iParser.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iParser.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
109	[BUG]  [BUGGY]  printer  =(DateTimePrinter)locale.clone();  iLocale  =  printer;  [CE]  cannot  find  symbol  locale  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)locale.clone();  iLocale  =  printer;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)locale.clone();  iLocale  =  printer;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  find  symbol  locale	27	None	replace
110	[BUG]  [BUGGY]  iLocale  =(DateTimePrinter)printer.clone();  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =(DateTimePrinter)printer.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =(DateTimePrinter)printer.clone();	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
111	[BUG]  [BUGGY]  iLocale  =  printer.clone();  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =  printer.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =  printer.clone();	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
112	[BUG]  [BUGGY]  iLocale  =(DateTimePrinter)locale.clone();  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =(DateTimePrinter)locale.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =(DateTimePrinter)locale.clone();	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	27	None	replace
113	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getZone()).requirePrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getZone()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  getZone()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
114	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC()).requirePrinter();  [CE]  cannot  find  symbol  ISOChronology  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  cannot  find  symbol  ISOChronology	25	None	replace
115	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getParser()).requirePrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getParser()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getParser()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
116	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance()).requirePrinter();  [CE]  cannot  find  symbol  ISOChronology  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  cannot  find  symbol  ISOChronology	25	None	replace
117	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getPeriodType()).requirePrinter();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getPeriodType()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  getPeriodType()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
118	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getPercentBase()).requirePrinter();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getPercentBase()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  getPercentBase()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
119	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  this).requirePrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  this).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  this).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
120	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getPeriod()).requirePrinter();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getPeriod()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getPeriod()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
121	[BUG]  [BUGGY]  printer  =  iLocale.withLocalMillis(iPrinter);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iLocale.withLocalMillis(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iLocale.withLocalMillis(iPrinter);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
122	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iLocale,  locale);  [CE]  cannot  find  symbol  locale  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iLocale,  locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iLocale,  locale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol  locale	26	None	replace
123	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(locale);  [CE]  cannot  find  symbol  locale  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(locale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol  locale	26	None	replace
124	[BUG]  [BUGGY]  iLocale  =  iPrinter.withLocalMillis(iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iLocale  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iLocale  =  iPrinter.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iLocale  =  iPrinter.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iLocale	26	None	replace
125	[BUG]  [BUGGY]  printer  =  iPivotYear.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPivotYear.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPivotYear.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
126	[BUG]  [BUGGY]  printer  =  iDateTimePrinter.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  iDateTimePrinter  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iDateTimePrinter.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iDateTimePrinter.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol  iDateTimePrinter	26	None	replace
127	[BUG]  [BUGGY]  printer  =  iTimePrinter.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  iTimePrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iTimePrinter.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iTimePrinter.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol  iTimePrinter	26	None	replace
128	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iChrono);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iChrono);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
129	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  this.iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  this.iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChrono,  this.iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
130	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iPivotYear);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iPivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
131	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iPivotYear);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.iPivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
132	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iPivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
133	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iChrono);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  iChrono);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
134	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.pivotYear);  [CE]  cannot  find  symbol  pivotYear  [FE]                                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.pivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iLocale,  this.pivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  cannot  find  symbol  pivotYear	17	None	replace
135	[BUG]  [BUGGY]  printer  =  printer.withUTC();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  printer.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  printer.withUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
136	[BUG]  [BUGGY]  iPrinter  =  printer.withZone();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	24	None	replace
137	[BUG]  [BUGGY]  iPrinter  =  printer.withLocale();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withLocale();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withLocale();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	24	None	replace
138	[BUG]  [BUGGY]  iPrinter  =  printer.withTimeZone(iZone);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withTimeZone(iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withTimeZone(iZone);	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	24	None	replace
139	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
140	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale!=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
141	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  >=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
142	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    If(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
143	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  >=  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
144	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >>  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >>  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  >>  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
145	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  [BUGGY]  null  &&  locale.equals(getLocale()))  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  [BUGGY]  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  [BUGGY]  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  ')'  expected	1	None	add
146	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iParser.getParser();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iParser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iParser.getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
147	[BUG]  [BUGGY]  printer  =(DateTimePrinter)this.iParser.getParser();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)this.iParser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)this.iParser.getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
148	[BUG]  [BUGGY]  Printer  printer  =(DateTimePrinter)iParser.getParser();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =(DateTimePrinter)iParser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =(DateTimePrinter)iParser.getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
149	[BUG]  [BUGGY]  printer  =(DateTimePrinter)parser.getParser();  [CE]  cannot  find  symbol  parser  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)parser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)parser.getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol  parser	23	None	replace
150	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.parser();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.parser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.parser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
151	[BUG]  [BUGGY]  printer  =(DateTimePrinter)delegate.getParser();  [CE]  cannot  find  symbol  delegate  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)delegate.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)delegate.getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol  delegate	23	None	replace
152	[BUG]  [BUGGY]  printer  =(DateTimePrinter)getParser();  [CE]  missing  return  statement  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)getParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  missing  return  statement	23	None	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	4	9	replace
154	[BUG]  [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale!=  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	4	9	replace
155	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
156	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale!=  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
157	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    if(locale!=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
158	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    If(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  ';'  expected	18	None	add
159	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  >=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    if(locale  >=  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
160	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  locale  >=  null  ||  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
161	[BUG]  [BUGGY]  printer  =  iParser.getParser();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iParser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iParser.getParser();	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
162	[BUG]  [BUGGY]  printer  =  iPrinter.parseDateTimeParser(iParser);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parseDateTimeParser(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parseDateTimeParser(iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
163	[BUG]  [BUGGY]  printer  =  iPrinter.parseParser(iParser);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parseParser(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parseParser(iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
164	[BUG]  [BUGGY]  printer  =  iPrinter.withParser(iParser);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withParser(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withParser(iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
165	[BUG]  [BUGGY]  printer  =  iPrinter.parser();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parser();	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
166	[BUG]  [BUGGY]  printer  =  iPrinter.withParser(iLocale);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withParser(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withParser(iLocale);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
167	[BUG]  [BUGGY]  printer  =  iPrinter.withParser(iChrono);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withParser(iChrono);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
168	[BUG]  [BUGGY]  printer  =  iPrinter.requireParser();  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.requireParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.requireParser();	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
169	[BUG]  [BUGGY]  printer  =  iZone.withZone(iPrinter);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withZone(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withZone(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
170	[BUG]  [BUGGY]  printer  =  iZone.withField(iPrinter);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withField(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withField(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
171	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iZone,  iChrono);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iZone,  iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iZone,  iChrono);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
172	[BUG]  [BUGGY]  printer  =  iZone.withPivotYear(iPrinter);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withPivotYear(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withPivotYear(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
173	[BUG]  [BUGGY]  printer  =  iZone.withPrinter(iPrinter);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withPrinter(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withPrinter(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
174	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iZone,  iPivotYear);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iZone,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iZone,  iPivotYear);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
175	[BUG]  [BUGGY]  printer  =  iZone.withPercentile(iPrinter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withPercentile(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withPercentile(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
176	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iZone,  iLocale);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iZone,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iZone,  iLocale);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
177	[BUG]  [BUGGY]  printer  =  iPrinter.withLocale(iLocale);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocale(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocale(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
178	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iLocale,  locale);  [CE]  cannot  find  symbol  locale  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iLocale,  locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iLocale,  locale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol  locale	12	None	replace
179	[BUG]  [BUGGY]  printer  =  iLocale.withZone(iPrinter);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iLocale.withZone(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iLocale.withZone(iPrinter);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
180	[BUG]  [BUGGY]  printer  =  iZone.withZone(iLocale);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withZone(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
181	[BUG]  [BUGGY]  printer  =  iPivotYear.withZone(iLocale);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPivotYear.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPivotYear.withZone(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
182	[BUG]  [BUGGY]  printer  =  iDateTimePrinter.withZone(iLocale);  [CE]  cannot  find  symbol  iDateTimePrinter  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iDateTimePrinter.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iDateTimePrinter.withZone(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol  iDateTimePrinter	12	None	replace
183	[BUG]  [BUGGY]  Printer  printer  =  iPrinter.withZone(iLocale);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iPrinter.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iPrinter.withZone(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
184	[BUG]  [BUGGY]  printer  =  iPrinter.withLocale(locale);  [CE]  cannot  find  symbol  locale  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocale(locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocale(locale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol  locale	12	None	replace
185	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono.getChronology());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
186	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  printer.getChronology());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  printer.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono,  printer.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
187	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono.getChronology());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
188	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iParser.getChronology());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iParser.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iParser.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
189	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(chrono.getChronology());  [CE]  cannot  find  symbol  chrono  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(chrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(chrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol  chrono	21	None	replace
190	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  printer.getChronology());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  printer.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChrono,  printer.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
191	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iParser,  iChrono.getChronology());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iParser,  iChrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iParser,  iChrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
192	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChronology.getChronology());  [CE]  cannot  find  symbol  iChronology  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChronology.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChronology.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol  iChronology	21	None	replace
193	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  this);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  this);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  this);	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
194	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC());  [CE]  cannot  find  symbol  ISOChronology  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstanceUTC());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  cannot  find  symbol  ISOChronology	20	None	replace
195	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getZone());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getZone());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  getZone());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
196	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getParser());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getParser());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getParser());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
197	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance());  [CE]  cannot  find  symbol  ISOChronology  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.getInstance());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  cannot  find  symbol  ISOChronology	20	None	replace
198	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  iZone);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  iZone);	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
199	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.UTC);  [CE]  cannot  find  symbol  ISOChronology  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.UTC);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  ISOChronology.UTC);	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  cannot  find  symbol  ISOChronology	20	None	replace
200	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  iLocale);	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
201	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getPeriod());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getPeriod());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getPeriod());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
202	[BUG]  [BUGGY]  printer  =  parser.getParser();  [CE]  cannot  find  symbol  parser  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  parser.getParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  parser.getParser();	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol  parser	13	None	replace
203	[BUG]  [BUGGY]  printer  =  iPrinter.withParser(printer);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withParser(printer);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withParser(printer);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
204	[BUG]  [BUGGY]  printer  =  iPrinter.parse(iChrono,  iPrinter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parse(iChrono,  iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parse(iChrono,  iPrinter);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
205	[BUG]  [BUGGY]  printer  =  iPrinter.findParser(iChrono);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.findParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.findParser(iChrono);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
206	[BUG]  [BUGGY]  printer  =  iPrinter.parse(iChrono,  iParser);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parse(iChrono,  iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parse(iChrono,  iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
207	[BUG]  [BUGGY]  printer  =  iPrinter.parseDateTimeParser(iChrono);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.parseDateTimeParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.parseDateTimeParser(iChrono);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
208	[BUG]  [BUGGY]  null  <  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  null  <  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	null  <  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
209	[BUG]  [BUGGY]  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  cannot  find  symbol  locale  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  cannot  find  symbol  locale	28	None	replace
210	[BUG]  [BUGGY]  parent  ==  null  &&  iLocale!=  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parent  ==  null  &&  iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parent  ==  null  &&  iLocale!=  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
211	[BUG]  [BUGGY]  if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  print;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  print;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(iLocale  ==  locale)  {  return  print;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
212	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(locale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(locale);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
213	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(getChronology());  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(getChronology());	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
214	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(this);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(this);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(this);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
215	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(this.iChrono);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(this.iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(this.iChrono);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
216	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(null);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(null);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(null);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
217	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  iPrinter.withUTC());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono,  iPrinter.withUTC());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono,  iPrinter.withUTC());	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
218	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iChrono.withUTC());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iChrono.withUTC());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iChrono.withUTC());	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	22	None	replace
219	[BUG]  [BUGGY]  if(iLocale!=  locale)  {  return  printer;  }  [CE]  cannot  find  symbol  locale  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  cannot  find  symbol  locale	29	None	replace
220	[BUG]  [BUGGY]  parent  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parent  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parent  ==  null)  {  if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
221	[BUG]  [BUGGY]  if(printer!=  null)  {  if(iLocale!=  locale)  {  return  print;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(iLocale!=  locale)  {  return  print;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(iLocale!=  locale)  {  return  print;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
222	[BUG]  [BUGGY]  iPrinter  =(DateTimePrinter)printer.clone();  iLocale  =  locale;  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =(DateTimePrinter)printer.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =(DateTimePrinter)printer.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	27	None	replace
223	[BUG]  [BUGGY]  printer  =(DateTimePrinter)iZone.clone();  iLocale  =  locale;  [CE]  clone()  has  protected  access  in  Object  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)iZone.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)iZone.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  clone()  has  protected  access  in  Object	27	None	replace
224	[BUG]  [BUGGY]  iPrinter  =(DateTimePrinter)locale.clone();  iLocale  =  printer;  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =(DateTimePrinter)locale.clone();  iLocale  =  printer;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =(DateTimePrinter)locale.clone();  iLocale  =  printer;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	27	None	replace
225	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  getChronology());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  getChronology());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
226	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this,  getChronology());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this,  getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this,  getChronology());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
227	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getPeriodType());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getPeriodType());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getPeriodType());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
228	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
229	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getZone()).requirePrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getZone()).requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getZone()).requirePrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
230	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).withUTC();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).withUTC();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
231	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).withZone(iZone);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).withZone(iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).withZone(iZone);	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
232	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getFormatter(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
233	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale(this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale(this);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getFormatter(locale).withLocale(this);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
234	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withUTC();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withUTC();  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getFormatter(locale).withUTC();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
235	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale(iChrono);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale(iChrono);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getFormatter(locale).withLocale(iChrono);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
236	[BUG]  [BUGGY]  iParser  =  getPrinter().withLocale(locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  iParser  =  getPrinter().withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	iParser  =  getPrinter().withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
237	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getFormatter(locale).withLocale();  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getFormatter(locale).withLocale();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
238	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLastChronology()))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLastChronology()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLastChronology()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getChronology()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getChronology()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	7	replace
240	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getChronology()))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getChronology()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getChronology()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	7	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getPivotYear()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getPivotYear()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	7	replace
242	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getPivotYear()))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getPivotYear()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getPivotYear()))  {	  if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	2	7	replace
243	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(this.iZone);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(this.iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(this.iZone);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
244	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(getChronology());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(getChronology());	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
245	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(null);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(null);	      printer    =    iPrinter.withLocalMillis(iLocalMillis);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
246	[BUG]  [BUGGY]  printer  =(DateTimePrinter)filter.clone();  [CE]  cannot  find  symbol  filter  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)filter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)filter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol  filter	9	None	replace
247	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.withZone(iChrono);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.withZone(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.withZone(iChrono);	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
248	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.withParser(iChrono);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.withParser(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.withParser(iChrono);	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
249	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.withParser(iParser);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.withParser(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.withParser(iParser);	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
250	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.requireParser();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.requireParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.requireParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  null  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  null  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	4	8	replace
252	[BUG]  [BUGGY]  if(locale  ==  null  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  null  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  null  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	4	8	replace
253	[BUG]  [BUGGY]  iPrinter  =  printer.getParser(this);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.getParser(this);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.getParser(this);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
254	[BUG]  [BUGGY]  iPrinter  =  printer.requireParser();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.requireParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.requireParser();	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
255	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  If(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    If(locale  ==  getLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
256	[BUG]  [BUGGY]  iPrinter  =  printer.withoutUTC();  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withoutUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withoutUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	24	None	replace
257	[BUG]  [BUGGY]  immutablePrinter  =  printer.withUTC();  [CE]  cannot  find  symbol  immutablePrinter  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  immutablePrinter  =  printer.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	immutablePrinter  =  printer.withUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  find  symbol  immutablePrinter	24	None	replace
258	[BUG]  [BUGGY]  parser  =  printer.withUTC();  [CE]  cannot  find  symbol  parser  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parser  =  printer.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parser  =  printer.withUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  find  symbol  parser	24	None	replace
259	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iChrono,  iLocale);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iChrono,  iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
260	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iChrono);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iChrono);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
261	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  this.iZone);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  this.iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChrono,  this.iZone);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
262	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iParser,  this.iZone,  this.iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iParser,  this.iZone,  this.iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iParser,  this.iZone,  this.iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
263	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iLocale,  this.iZone);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iLocale,  this.iZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iLocale,  this.iZone);	      printer    =    new    DateTimePrinter(this.iZone,    this.iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	17	None	replace
264	[BUG]  [BUGGY]  Printer  printer  =  iZone.withFixedPrinter(iPrinter);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withFixedPrinter(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withFixedPrinter(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
265	[BUG]  [BUGGY]  Printer  printer  =  iZone.withFixedZone(iPrinter);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withFixedZone(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withFixedZone(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
266	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPeriod(iPrinter);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPeriod(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPeriod(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
267	[BUG]  [BUGGY]  Printer  printer  =  iZone.withImmediateParentPointer(iPrinter);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withImmediateParentPointer(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withImmediateParentPointer(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
268	[BUG]  [BUGGY]  Printer  printer  =  iZone.withSlot(iPrinter);  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withSlot(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withSlot(iPrinter);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
269	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.chrono.getChronology());  [CE]  cannot  find  symbol  chrono  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.chrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.chrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol  chrono	21	None	replace
270	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  printer.getChronology());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  printer.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  printer.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
271	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iChrono,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
272	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iPivotYear);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  iPivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
273	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.pivotYear);  [CE]  cannot  find  symbol  pivotYear  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.pivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.pivotYear);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  cannot  find  symbol  pivotYear	15	None	replace
274	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iChrono,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(this.iZone,  this.iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(this.iZone,  this.iChrono,  iLocale);	      printer    =    new    DateTimePrinter(this.iZone,    iLocale);    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	15	None	replace
275	[BUG]  [BUGGY]  printer  =  iZone.withFixedZone(iPrinter);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withFixedZone(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withFixedZone(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
276	[BUG]  [BUGGY]  printer  =  iZone.withPeriod(iPrinter);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withPeriod(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withPeriod(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
277	[BUG]  [BUGGY]  printer  =  iZone.withSlot(iPrinter);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withSlot(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withSlot(iPrinter);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
278	[BUG]  [BUGGY]  printer  =  iPrinter.withLocalMillis(iChrono,  iLocale);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withLocalMillis(iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withLocalMillis(iChrono,  iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
279	[BUG]  [BUGGY]  printer  =  iZone.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iZone.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iZone.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
280	[BUG]  [BUGGY]  printer  =  iChrono.withLocalMillis(iLocale);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iChrono.withLocalMillis(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iChrono.withLocalMillis(iLocale);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
281	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  localized!=  null  &&  locale.equals(getLocale()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale!=  null  &&  locale.equals(getLocale()))  {  if(locale  ==  getLocale()  ||  localized!=  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    locale!=    null    &&    locale.equals(getLocale()))    {    if(locale  ==  getLocale()  ||  localized!=  null  &&  locale.equals(getLocale()))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
282	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.iPrinter.clone();  [CE]  cannot  find  symbol  iPrinter  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.iPrinter.clone();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.iPrinter.clone();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol  iPrinter	9	None	replace
283	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.iPrinter();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.iPrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.iPrinter();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
284	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.intermediateParser();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.intermediateParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.intermediateParser();	      printer    =(DateTimePrinter)printer.clone();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
285	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getLocale());  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology(),  getLocale());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology(),  getLocale());	      printer    =    new    DateTimePrinter(getChronology());    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	20	None	replace
286	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(iZone,  iDefaultYear);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(iZone,  iDefaultYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(iZone,  iDefaultYear);	      printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
287	[BUG]  [BUGGY]  Printer  printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =(DateTimePrinter)iPrinter.clone();  iLocale  =  locale;	      printer    =(DateTimePrinter)printer.clone();    iLocale    =    locale;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
288	[BUG]  [BUGGY]  iPrinter  =  printer.findParser(iChrono,  iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.findParser(iChrono,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.findParser(iChrono,  iLocale);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
289	[BUG]  [BUGGY]  iPrinter  =  printer.findParser(iLocale);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.findParser(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.findParser(iLocale);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
290	[BUG]  [BUGGY]  iPrinter  =  printer.parse(iChrono,  iParser);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.parse(iChrono,  iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.parse(iChrono,  iParser);	      iPrinter    =    printer.getParser();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	14	None	replace
291	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equalsIgnoreCase(getLocale()))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equalsIgnoreCase(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equalsIgnoreCase(getLocale()))  {	  if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
292	[BUG]  [BUGGY]  printer  =  iPrinter.loadParser(iChrono,  iParser);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.loadParser(iChrono,  iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.loadParser(iChrono,  iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
293	[BUG]  [BUGGY]  printer  =  iPrinter.findParser(iLocale);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.findParser(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.findParser(iLocale);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
294	[BUG]  [BUGGY]  printer  =  iPrinter.findParser(iLocale,  iPrinter);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.findParser(iLocale,  iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.findParser(iLocale,  iPrinter);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
295	[BUG]  [BUGGY]  printer  =  iPrinter.filterParser(iParser);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.filterParser(iParser);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.filterParser(iParser);	      printer    =    iPrinter.getParser();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
296	[BUG]  [BUGGY]  if(locale  ==  getDefaultLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getDefaultLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getDefaultLocale()  ||  locale  ==  null  &&  locale.equals(getLocale()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    &&    locale.equals(getLocale()))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
297	[BUG]  [BUGGY]  Printer  printer  =  iZone.withPrinter(printer);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iZone.withPrinter(printer);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iZone.withPrinter(printer);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
298	[BUG]  [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iChrono);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iChrono);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iPrinter.withZone(iZone,  iChrono);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
299	[BUG]  [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iLocale);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iPrinter.withZone(iZone,  iLocale);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
300	[BUG]  [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iPivotYear);  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  iPrinter.withZone(iZone,  iPivotYear);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  iPrinter.withZone(iZone,  iPivotYear);	      Printer    printer    =    iPrinter.withZone(iZone);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
301	[BUG]  [BUGGY]  if(printer!=  locale)  {  if(iLocale!=  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  locale)  {  if(iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  locale)  {  if(iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
302	[BUG]  [BUGGY]  parent  ==  null  ||  iLocale!=  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parent  ==  null  ||  iLocale!=  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parent  ==  null  ||  iLocale!=  locale)  {  return  printer;  }	      if(printer    ==    null)    {    if(iLocale!=    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
303	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).process(iPrinter,  iLocale);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).process(iPrinter,  iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).process(iPrinter,  iLocale);	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
304	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).printer();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).printer();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).printer();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
305	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).process(iPrinter);  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                      AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).process(iPrinter);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).process(iPrinter);	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
306	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).iPrinter();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).iPrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).iPrinter();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
307	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).bindingsToParser();  [CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated  [FE]                          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(getChronology()).bindingsToParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(getChronology()).bindingsToParser();	      printer    =    new    DateTimePrinter(getChronology()).requirePrinter();    	non-compiled	[CE]  DateTimePrinter  is  abstract;  cannot  be  instantiated	25	None	replace
308	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  {  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  if(locale  {  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale    ==    getLocale()    ||    (locale    ==    null    &&    locale.equals(getLocale())))    {    if(locale  {  getLocale()  ||  (locale  ==  null  &&  locale.equals(getLocale())))  {	  	non-compiled	[CE]  ')'  expected	5	None	add
309	[BUG]  [BUGGY]  Printer  printer  =  printer.withUTC();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  Printer  printer  =  printer.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	Printer  printer  =  printer.withUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
310	[BUG]  [BUGGY]  printinger  =  printer.withUTC();  [CE]  cannot  find  symbol  printinger  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printinger  =  printer.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printinger  =  printer.withUTC();	      iPrinter    =    printer.withUTC();    	non-compiled	[CE]  cannot  find  symbol  printinger	24	None	replace
311	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.getChronology());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(iPrinter.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(iPrinter.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
312	[BUG]  [BUGGY]  printer  =  new  DateTimePrinter(printer,  iChrono.getChronology());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  new  DateTimePrinter(printer,  iChrono.getChronology());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  new  DateTimePrinter(printer,  iChrono.getChronology());	      printer    =    new    DateTimePrinter(printer.getChronology());    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
313	[BUG]  [BUGGY]  printer  =  iLocale.withLocalMillis(printer);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iLocale.withLocalMillis(printer);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iLocale.withLocalMillis(printer);	      printer    =    iPrinter.withLocalMillis(iLocale);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
314	[BUG]  [BUGGY]  if(printer  ==  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer  ==  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer  ==  locale)  {  if(iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
315	[BUG]  [BUGGY]  if(printer!=  null)  {  if(iLocale  ==  locale  ||  iPivotYear  ==  iDefaultYear)  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(iLocale  ==  locale  ||  iPivotYear  ==  iDefaultYear)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(iLocale  ==  locale  ||  iPivotYear  ==  iDefaultYear)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
316	[BUG]  [BUGGY]  if(printer!=  null)  {  if(!iLocale.equals(locale))  {  return  printer;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  if(printer!=  null)  {  if(!iLocale.equals(locale))  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	if(printer!=  null)  {  if(!iLocale.equals(locale))  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
317	[BUG]  [BUGGY]  parent!=  null  &&  iLocale  ==  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parent!=  null  &&  iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parent!=  null  &&  iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
318	[BUG]  [BUGGY]  parent  ==  null  ||  iLocale  ==  locale)  {  return  printer;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  parent  ==  null  ||  iLocale  ==  locale)  {  return  printer;  }  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	parent  ==  null  ||  iLocale  ==  locale)  {  return  printer;  }	      if(printer!=    null)    {    if(iLocale    ==    locale)    {    return    printer;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
319	[BUG]  [BUGGY]  printer  =  this.iPrinter.withUTC();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  this.iPrinter.withUTC();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  this.iPrinter.withUTC();	      printer    =    iPrinter.withUTC();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
320	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(getZone());  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]            AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(getZone());  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(getZone());	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
321	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(timeZone);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(timeZone);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(timeZone);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
322	[BUG]  [BUGGY]  iPrinter  =  printer.withZone(region);  [CE]  cannot  assign  a  value  to  final  variable  iPrinter  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  iPrinter  =  printer.withZone(region);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	iPrinter  =  printer.withZone(region);	      iPrinter    =    printer.withZone(iZone);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  iPrinter	10	None	replace
323	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.getInstance(locale);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  iPrinter.getInstance(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  iPrinter.getInstance(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
324	[BUG]  [BUGGY]  DateTimePrinter  printer  =  getPrinter();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  getPrinter();  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  getPrinter();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
325	[BUG]  [BUGGY]  Integer  iPivotYear  =  iParser.withLocale(locale);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  Integer  iPivotYear  =  iParser.withLocale(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	Integer  iPivotYear  =  iParser.withLocale(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
326	[BUG]  [BUGGY]  DateTimePrinter  printer  =  iPrinter.getInstance();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  DateTimePrinter  printer  =  iPrinter.getInstance();  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	DateTimePrinter  printer  =  iPrinter.getInstance();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
327	[BUG]  [BUGGY]  Integer  iPivotYear  =  iParser.parseInt(locale);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  Integer  iPivotYear  =  iParser.parseInt(locale);  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	Integer  iPivotYear  =  iParser.parseInt(locale);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
328	[BUG]  [BUGGY]  printer  =  iPrinter.withZone(locale);  [CE]  cannot  find  symbol  locale  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iPrinter.withZone(locale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iPrinter.withZone(locale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  cannot  find  symbol  locale	12	None	replace
329	[BUG]  [BUGGY]  printer  =  iChrono.withZone(iLocale);  [CE]  method  withZone  in  class  Chronology  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =  iChrono.withZone(iLocale);  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =  iChrono.withZone(iLocale);	      printer    =    iPrinter.withZone(iLocale);    	non-compiled	[CE]  method  withZone  in  class  Chronology  cannot  be  applied  to  given  types;	12	None	replace
330	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.iParser();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.iParser();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.iParser();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
331	[BUG]  [BUGGY]  printer  =(DateTimePrinter)printer.requirePrinter();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  DateTimePrinter  requirePrinter()  {  DateTimePrinter  printer  =  iPrinter;  if  (printer  ==  null)  {  throw  new  UnsupportedOperationException(   "Printing  not  supported   ");  }    [BUGGY]  printer  =(DateTimePrinter)printer.requirePrinter();  [BUGGY]    return  printer;  }  [CLASS]  DateTimeFormatter  [METHOD]  requirePrinter  [RETURN_TYPE]  DateTimePrinter  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  offset  pivotYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6614378277661476	661	661	7	replace	printer  =(DateTimePrinter)printer.requirePrinter();	      printer    =(DateTimePrinter)printer.getParser();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
332	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getPivotYear()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	add	if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getPivotYear()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
333	[BUG]  [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getPivotYear()))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  DateTimeFormatter  withLocale(Locale  locale)  {    [BUGGY]  if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getPivotYear()))  {  [BUGGY]    return  this;  }  return  new  DateTimeFormatter(iPrinter,  iParser,  locale,  iOffsetParsed,  iChrono,  iZone,  iPivotYear,  iDefaultYear);  }  [CLASS]  DateTimeFormatter  [METHOD]  withLocale  [RETURN_TYPE]  DateTimeFormatter  Locale  locale  [VARIABLES]  Locale  iLocale  locale  Integer  iPivotYear  pivotYear  DateTimeParser  iParser  parser  boolean  iOffsetParsed  offsetParsed  Chronology  chrono  iChrono  DateTimePrinter  iPrinter  printer  DateTimeZone  iZone  zone  int  defaultYear  iDefaultYear  	projects/Time16/src/main/java/org/joda/time/format/DateTimeFormatter.java	0.6060915267313265	188	188	7	replace	if(locale  ==  getLocale()  ||  locale  ==  null  ||  locale.equals(getPivotYear()))  {	  if(locale    ==    getLocale()    ||    locale    ==    null    ||    locale.equals(getLocale()))    {    	compilable	  [FE]  AssertionFailedError  	19	7	replace
