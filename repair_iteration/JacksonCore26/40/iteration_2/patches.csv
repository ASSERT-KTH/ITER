bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
2	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
3	[BUG]  [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
5	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
7	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startArrayScope();  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
8	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  _icUTF8);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	54	None	replace
9	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	54	None	replace
10	[BUG]  [BUGGY]  return  _startArrayScope(_origBuffer,  ch,  _inputBufferLen);  [CE]  cannot  find  symbol  _origBuffer  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_origBuffer,  ch,  _inputBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_origBuffer,  ch,  _inputBufferLen);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  cannot  find  symbol  _origBuffer	54	None	replace
11	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _icUTF8);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	54	None	replace
12	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(null,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch,  _origBufferLen);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
13	[BUG]  [BUGGY]  return  _startArrayScope(ch,  null);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  null);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  null);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
14	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(null,  ch,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch,  _icUTF8);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
15	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(null,  ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch,  _inputBuffer);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
16	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _icUTF8);	  return    _startArrayScope(_inputBuffer,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	53	None	replace
17	[BUG]  [BUGGY]  return  _startJsonToken(true,  ch);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(true,  ch);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
18	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(false,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch,  _origBufferLen);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
19	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch,  JsonToken.END_OBJECT);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(false,  ch,  JsonToken.END_OBJECT);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch,  JsonToken.END_OBJECT);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
20	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch,  _origBufferLength);  [CE]  cannot  find  symbol  _origBufferLength  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(false,  ch,  _origBufferLength);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch,  _origBufferLength);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol  _origBufferLength	52	None	replace
21	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
24	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  return  _startTrueToken(ch);  [CE]  method  _startTrueToken  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startTrueToken(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startTrueToken(ch);	  return    _startTrueToken();    return    _startTrueToken();    	non-compiled	[CE]  method  _startTrueToken  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	25	None	replace
26	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    	compilable	  [FE]  JsonParseException  	3	1	replace
27	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    	compilable	  [FE]  JsonParseException  	3	1	replace
28	[BUG]  [BUGGY]  ||  ch  ==  ']')  {  return  _startNullToken();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  ']')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  ']')  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    	compilable	  [FE]  JsonParseException  	3	1	replace
30	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  [FE]  JsonParseException  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    	compilable	  [FE]  JsonParseException  	3	1	replace
31	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
32	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startStringToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
34	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
36	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
38	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
39	[BUG]  [BUGGY]  ||  ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
41	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    ']')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
42	[BUG]  [BUGGY]  case  ']':  [CE]  duplicate  case  label  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':	          case    '[':    	non-compiled	[CE]  duplicate  case  label	56	None	replace
43	[BUG]  [BUGGY]  Case  '[':  [CE]  not  a  statement  [FE]          JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  Case  '[':  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	Case  '[':	          case    '[':    	non-compiled	[CE]  not  a  statement	56	None	replace
44	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _start  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _start  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _start	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
45	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _start  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _start  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _start	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
46	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
47	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	5	1	replace
49	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	5	1	replace
50	[BUG]  [BUGGY]  ||  ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
52	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	26	1	replace
53	[BUG]  [BUGGY]  case  ']':  return  _startStringToken(true,  ch);  [CE]  cannot  find  symbol  [FE]          JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startStringToken(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startStringToken(true,  ch);	  case    ']':    return    _startStringToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
54	[BUG]  [BUGGY]  case  ']':  return  _startStringToken(false,  ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startStringToken(false,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startStringToken(false,  ch,  _origBufferLen);	  case    ']':    return    _startStringToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
55	[BUG]  [BUGGY]  case  ']':  return  _startStringToken(false,  ch,  _origBufferLength);  [CE]  cannot  find  symbol  _origBufferLength  [FE]              JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startStringToken(false,  ch,  _origBufferLength);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startStringToken(false,  ch,  _origBufferLength);	  case    ']':    return    _startStringToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol  _origBufferLength	19	None	replace
56	[BUG]  [BUGGY]  ||  _startNullToken()  ==  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  _startNullToken()  ==  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  _startNullToken()  ==  JsonToken.VALUE_NULL;	  return    _startNullToken();    ||    _startNullToken()    ==    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
57	[BUG]  [BUGGY]  ||  _startNullToken()!=  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  _startNullToken()!=  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  _startNullToken()!=  JsonToken.VALUE_NULL;	  return    _startNullToken();    ||    _startNullToken()    ==    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')return  _startTrueToken();  }  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']'  ||  ch  =='<  ')return  _startTrueToken();  }	  return    _startTrueToken();    if(ch    ==    ']'    ||    ch    =='<    ')    {    return    _startTrueToken();    }    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
59	[BUG]  [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }	  return    _startTrueToken();    if(ch    ==    ']'    ||    ch    =='<    ')    {    return    _startTrueToken();    }    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
60	[BUG]  [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startNullToken();  }  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']'    ||    ch    =='<    ')    {    return    _startTrueToken();    }    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
61	[BUG]  [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startStringToken();  }  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startStringToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startStringToken();  }	  return    _startTrueToken();    if(ch    ==    ']'    ||    ch    =='<    ')    {    return    _startTrueToken();    }    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
62	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _nextToken());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _nextToken());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _nextToken());	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
63	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _origBufferLen());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _origBufferLen());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _origBufferLen());	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
64	[BUG]  [BUGGY]  return  _startArrayScope(_nextToken());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_nextToken());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_nextToken());	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
65	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
66	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
67	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
68	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
69	[BUG]  [BUGGY]  return  _startArrayScope(false,  ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(false,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(false,  ch,  _origBufferLen);	  return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	34	None	replace
70	[BUG]  [BUGGY]  return  _startArrayScope(ch,  false);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  false);	  return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	34	None	replace
71	[BUG]  [BUGGY]  return  _startArrayScope(false,  ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(false,  ch,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(false,  ch,  _icUTF8);	  return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	34	None	replace
72	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
73	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >>  '>  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >>  '>  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >>  '>	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
74	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
75	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
76	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startPositiveNumber(ch);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    ch  =  _startPositiveNumber(ch);	  	non-compiled	[CE]  incompatible  types	7	None	add
77	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  return  _startPositiveNumber(ch);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    return  _startPositiveNumber(ch);	  	non-compiled	[CE]  unreachable  statement	7	None	add
78	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startPositiveNumber();  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startPositiveNumber();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    ch  =  _startPositiveNumber();	  	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	7	None	add
79	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  return  _startTrueToken();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    return  _startTrueToken();	  	non-compiled	[CE]  unreachable  statement	7	None	add
80	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startTrueToken();  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  ch  =  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    ch  =  _startTrueToken();	  	non-compiled	[CE]  incompatible  types	7	None	add
81	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.END_ARRAY))  {  return  _start  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.END_ARRAY))  {  return  _start  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber()!=  JsonToken.END_ARRAY))  {  return  _start	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
82	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _start  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _start  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _start	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
83	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startStringToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
84	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _origBuffer,  _origLen);  [CE]  cannot  find  symbol  _origBuffer  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _origBuffer,  _origLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _origBuffer,  _origLen);	  return    _startArrayScope(ch,    _origBufferLen);    	non-compiled	[CE]  cannot  find  symbol  _origBuffer	9	None	replace
85	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _origBufferLen,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _origBufferLen,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _origBufferLen,  _inputBuffer);	  return    _startArrayScope(ch,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	9	None	replace
86	[BUG]  [BUGGY]  return  _startJsonToken(ch);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(ch);	  return    _startJsonToken();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
87	[BUG]  [BUGGY]  return  _startBigIntegerToken(ch);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigIntegerToken(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerToken(ch);	  return    _startBigIntegerToken();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
88	[BUG]  [BUGGY]  return  _startBigDecimalToken();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalToken();	  return    _startBigIntegerToken();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
89	[BUG]  [BUGGY]  return  _startBigInteger(ch);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigInteger(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigInteger(ch);	  return    _startBigIntegerToken();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
90	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	_startTrueToken();	  return    _startTrueToken();    _startTrueToken();    	compilable	  [FE]  JsonParseException  	27	1	replace
91	[BUG]  [BUGGY]  _startTrueToken();  [FE]  JsonParseException  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	_startTrueToken();	  return    _startTrueToken();    _startTrueToken();    	compilable	  [FE]  JsonParseException  	27	1	replace
92	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
93	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startNullToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
94	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
95	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startStringToken();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startStringToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startStringToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
96	[BUG]  [BUGGY]  return  _startUnexpectedToken(ch);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startUnexpectedToken(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startUnexpectedToken(ch);	  return    _startUnexpectedToken();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
97	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	_startNullToken();	  return    _startNullToken();    _startNullToken();    	compilable	  [FE]  JsonParseException  	4	1	replace
98	[BUG]  [BUGGY]  _startNullToken();  [FE]  JsonParseException  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	_startNullToken();	  return    _startNullToken();    _startNullToken();    	compilable	  [FE]  JsonParseException  	4	1	replace
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
100	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
101	[BUG]  [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
103	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startPositiveNumber(ch);  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
105	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	compilable	  [FE]  AssertionFailedError  	48	1	replace
106	[BUG]  [BUGGY]  return  _startDoubleToken(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(ch,  _origBufferLen);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
107	[BUG]  [BUGGY]  return  _startDoubleToken(false,  ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(false,  ch);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
108	[BUG]  [BUGGY]  return  _startDoubleToken(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(JsonToken.VALUE_STRING);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(JsonToken.VALUE_STRING);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
109	[BUG]  [BUGGY]  return  _startDoubleToken(ch,  _inputBuffer);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(ch,  _inputBuffer);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
110	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen,  ch);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	12	None	replace
111	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _icUTF8);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	12	None	replace
112	[BUG]  [BUGGY]  return  _startStringToken(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(ch,  _origBufferLen);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
113	[BUG]  [BUGGY]  return  _startStringToken(ch,  JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(ch,  JsonToken.VALUE_STRING);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(ch,  JsonToken.VALUE_STRING);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
114	[BUG]  [BUGGY]  return  _startStringToken(_inputBuffer,  ch);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(_inputBuffer,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(_inputBuffer,  ch);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
115	[BUG]  [BUGGY]  return  _startStringToken(JsonToken.VALUE_STRING);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(JsonToken.VALUE_STRING);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(JsonToken.VALUE_STRING);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
116	[BUG]  [BUGGY]  return  _startBigIntegerScope(ch);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigIntegerScope(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerScope(ch);	  return    _startBigIntegerScope();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
117	[BUG]  [BUGGY]  return  _startBigIntegerScope(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigIntegerScope(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerScope(ch,  _origBufferLen);	  return    _startBigIntegerScope();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
118	[BUG]  [BUGGY]  case  ']':  return  _startPositiveNumber(ch);  [CE]  duplicate  case  label  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startPositiveNumber(ch);	  case    ']':    return    _startTrueToken();    	non-compiled	[CE]  duplicate  case  label	18	None	replace
119	[BUG]  [BUGGY]  case  ']':  return  _startNullToken();  [CE]  duplicate  case  label  [FE]          JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startNullToken();	  case    ']':    return    _startTrueToken();    	non-compiled	[CE]  duplicate  case  label	18	None	replace
120	[BUG]  [BUGGY]  case  ']':  return  _startUnexpectedToken();  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startUnexpectedToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startUnexpectedToken();	  case    ']':    return    _startTrueToken();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
121	[BUG]  [BUGGY]  case  ']':  return  _startPositiveNumber();  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startPositiveNumber();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startPositiveNumber();	  case    ']':    return    _startTrueToken();    	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	18	None	replace
122	[BUG]  [BUGGY]  return  _startArrayToken(ch);  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayToken(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayToken(ch);	  return    _startArrayToken();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
124	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
125	[BUG]  [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
127	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
128	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >>  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >>  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >>  0x7F))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
129	[BUG]  [BUGGY]  return  _startFalseToken();  return  _startFalseToken();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  return  _startFalseToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    return  _startFalseToken();	  	non-compiled	[CE]  unreachable  statement	21	None	add
130	[BUG]  [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(ch  ==  ']')  {  return  _startFalseToken();  }	  	non-compiled	[CE]  unreachable  statement	21	None	add
131	[BUG]  [BUGGY]  return  _startFalseToken();  _startFalseToken();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  _startFalseToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    _startFalseToken();	  	non-compiled	[CE]  unreachable  statement	21	None	add
132	[BUG]  [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }	  	non-compiled	[CE]  unreachable  statement	21	None	add
133	[BUG]  [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startFalseToken();  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startFalseToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(ch  ==  ']')  {  return  _startFalseToken();  }  else  {  return  _startFalseToken();  }	  	non-compiled	[CE]  unreachable  statement	21	None	add
134	[BUG]  [BUGGY]  return  _startBigDecimalScope(ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(ch);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
135	[BUG]  [BUGGY]  return  _startBigDecimalScope(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(ch,  _origBufferLen);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
136	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _icUTF8,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _icUTF8,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _icUTF8,  _origBufferLen);	  return    _startArrayScope(ch,    _icUTF8);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
137	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _icUTF8,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _icUTF8,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _icUTF8,  _inputBuffer);	  return    _startArrayScope(ch,    _icUTF8);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
138	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
139	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  AssertionFailedError  	47	1	replace
141	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  AssertionFailedError  	47	1	replace
142	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(true,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(true,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
143	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(true,  ch);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(true,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(true,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
144	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startUnexpectedValue();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [CE]  method  _startUnexpectedValue  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startUnexpectedValue();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startUnexpectedValue();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	non-compiled	[CE]  method  _startUnexpectedValue  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	47	None	replace
145	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(true,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayScope(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(true,  ch);	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	20	None	replace
146	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(false,  ch,  _origBufferLen);	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	20	None	replace
147	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(ch,  false);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayScope(ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(ch,  false);	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	20	None	replace
148	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _origBufferLength);  [CE]  cannot  find  symbol  _origBufferLength  [FE]                  JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _origBufferLength);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(false,  ch,  _origBufferLength);	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  cannot  find  symbol  _origBufferLength	20	None	replace
149	[BUG]  [BUGGY]  return  _startStringScope(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringScope(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(ch,  _origBufferLen);	  return    _startStringScope(ch);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
150	[BUG]  [BUGGY]  return  _startStringScope(false,  ch);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringScope(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(false,  ch);	  return    _startStringScope(ch);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
151	[BUG]  [BUGGY]  return  _startStringScope(true,  ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringScope(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(true,  ch);	  return    _startStringScope(ch);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
152	[BUG]  [BUGGY]  return  _startStringScope(ch,  _inputBuffer);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringScope(ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(ch,  _inputBuffer);	  return    _startStringScope(ch);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
153	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _origBufferLen);  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _origBufferLen);	  return    _startPositiveNumber();    	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	41	None	replace
154	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _nextToken());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _nextToken());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _nextToken());	  return    _startPositiveNumber();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
155	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  0);  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  0);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  0);	  return    _startPositiveNumber();    	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	41	None	replace
156	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(true,  ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch,  _origBufferLen);	  return    _startArrayScope(true,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	35	None	replace
157	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(true,  ch,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch,  _icUTF8);	  return    _startArrayScope(true,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	35	None	replace
158	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(true,  ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch,  _inputBuffer);	  return    _startArrayScope(true,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	35	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	28	1	replace
160	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	28	1	replace
161	[BUG]  [BUGGY]  return  _startDoubleScope(ch,  _origBufferLen);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleScope(ch,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(ch,  _origBufferLen);	  return    _startDoubleScope(ch);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
162	[BUG]  [BUGGY]  return  _startDoubleScope(false,  ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleScope(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(false,  ch);	  return    _startDoubleScope(ch);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
163	[BUG]  [BUGGY]  return  _startDoubleScope(ch,  _inputBuffer);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleScope(ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(ch,  _inputBuffer);	  return    _startDoubleScope(ch);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
164	[BUG]  [BUGGY]  return  _startDoubleScope(true,  ch);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleScope(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(true,  ch);	  return    _startDoubleScope(ch);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
165	[BUG]  [BUGGY]  case  ']':  return  _startDoubleToken();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startDoubleToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startDoubleToken();	          case    ']':    return    _startArrayScope();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
166	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch,  false);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(null,  ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch,  false);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
168	[BUG]  [BUGGY]  Case  ']':  return  _startArrayScope(true,  ch);  [CE]  not  a  statement  [FE]            JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  Case  ']':  return  _startArrayScope(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	Case  ']':  return  _startArrayScope(true,  ch);	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  not  a  statement	20	None	replace
169	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch,  false);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(true,  ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch,  false);	  return    _startArrayScope(true,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	35	None	replace
170	[BUG]  [BUGGY]  return  _startArrayScope(_class,  ch,  _inputBuffer,  _origBufferLen);  [CE]  cannot  find  symbol  _class  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_class,  ch,  _inputBuffer,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_class,  ch,  _inputBuffer,  _origBufferLen);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  cannot  find  symbol  _class	54	None	replace
171	[BUG]  [BUGGY]  return  _startArrayScope(_origBuffer,  ch);  [CE]  cannot  find  symbol  _origBuffer  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_origBuffer,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_origBuffer,  ch);	  return    _startArrayScope(ch,    _origBufferLen);    	non-compiled	[CE]  cannot  find  symbol  _origBuffer	9	None	replace
172	[BUG]  [BUGGY]  return  _startArrayScope(_origBufferLen,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_origBufferLen,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_origBufferLen,  ch);	  return    _startArrayScope(ch,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	9	None	replace
173	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _typeFactory);  [CE]  cannot  find  symbol  _typeFactory  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _typeFactory);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _typeFactory);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  cannot  find  symbol  _typeFactory	12	None	replace
174	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _typeFactory);  [CE]  cannot  find  symbol  _typeFactory  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _typeFactory);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _typeFactory);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  cannot  find  symbol  _typeFactory	12	None	replace
175	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _inputLen);  [CE]  cannot  find  symbol  _inputLen  [FE]                      AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _inputLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _inputLen);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  cannot  find  symbol  _inputLen	12	None	replace
176	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch,  _inputBuffer);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(false,  ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch,  _inputBuffer);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
177	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
178	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
179	[BUG]  [BUGGY]  return  _startDoubleScope(ch,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleScope(ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(ch,  false);	  return    _startDoubleScope(ch);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
180	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNull  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNull  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNull	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
181	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNu  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNu  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNu	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
182	[BUG]  [BUGGY]  case  ']':  return  _startDoubleScope();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startDoubleScope();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startDoubleScope();	          case    ']':    return    _startArrayScope();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
183	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
184	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
185	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
186	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startUnexpectedValue(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startUnexpectedValue(false,  ch);	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
187	[BUG]  [BUGGY]  return  _startUnexpectedValue(false,  ch);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startUnexpectedValue(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startUnexpectedValue(false,  ch);	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
188	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startUnexpectedValue(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startUnexpectedValue(true,  ch);	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
189	[BUG]  [BUGGY]  return  _startUnexpectedValue(true,  ch);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startUnexpectedValue(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startUnexpectedValue(true,  ch);	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startUnexpectedValue(false,    ch);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unexpected  character  ('['  (code  91)):  expected  a  valid  value  (number  	47	1	replace
190	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _inputEnd);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _inputEnd);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _inputEnd);	  return    _startArrayScope(ch,    _inputBuffer);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	10	None	replace
191	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _inputPositiveNumber);  [CE]  cannot  find  symbol  _inputPositiveNumber  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _inputPositiveNumber);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _inputPositiveNumber);	  return    _startArrayScope(ch,    _inputBuffer);    	non-compiled	[CE]  cannot  find  symbol  _inputPositiveNumber	10	None	replace
192	[BUG]  [BUGGY]  return  _startArrayScope(false,  ch,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(false,  ch,  _inputBuffer);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(false,  ch,  _inputBuffer);	  return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	34	None	replace
193	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _inputEnd);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _inputEnd);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _inputEnd);	  return    _startArrayScope(_inputBuffer,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	53	None	replace
194	[BUG]  [BUGGY]  return  _startStringToken(false,  ch);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(false,  ch);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
195	[BUG]  [BUGGY]  return  _startStringToken(_origBufferLen);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(_origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(_origBufferLen);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
196	[BUG]  [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_nextPositiveNumber(ch);	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  ')'  expected	55	None	replace
197	[BUG]  [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch));  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_nextPositiveNumber(ch));	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
198	[BUG]  [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch,  _nextToken());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_nextPositiveNumber(ch,  _nextToken());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_nextPositiveNumber(ch,  _nextToken());	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  ')'  expected	55	None	replace
199	[BUG]  [BUGGY]  return  _startArrayScope(_icUTF8,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_icUTF8,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_icUTF8,  ch);	  return    _startArrayScope(ch,    _icUTF8);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
200	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _icLatin1,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _icLatin1,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _icLatin1,  _icUTF8);	  return    _startArrayScope(ch,    _icUTF8);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
201	[BUG]  [BUGGY]  return  _startDoubleToken(ch,  false);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(ch,  false);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
202	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  _startPositiveNumber(ch);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    _startPositiveNumber(ch);	  	non-compiled	[CE]  unreachable  statement	7	None	add
203	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  ||  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  ||  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    ||  _startPositiveNumber(ch);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
204	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  return  _startPositiveNumber(ch  +  1);  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  return  _startPositiveNumber(ch  +  1);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    return  _startPositiveNumber(ch  +  1);	  	non-compiled	[CE]  unreachable  statement	7	None	add
205	[BUG]  [BUGGY]  return  _startStringScope(ch,  false);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringScope(ch,  false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(ch,  false);	  return    _startStringScope(ch);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
206	[BUG]  [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startFalseToken();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startFalseToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startFalseToken();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
207	[BUG]  [BUGGY]  return  _startFalseToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  0))  {  return  _startFalseToken();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  0))  {  return  _startFalseToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  0))  {  return  _startFalseToken();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
208	[BUG]  [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
209	[BUG]  [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  '-')||(ch  >=  '>'  &&  ch  <  =  '+')||(ch  >='<  ')||(ch  >=  '>')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  ||(ch  =='<'&&  ch  <  =  '-')||(ch  >=  '>'  &&  ch  <  =  '+')||(ch  >='<  ')||(ch  >=  '>')  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    ||(ch  =='<'&&  ch  <  =  '-')||(ch  >=  '>'  &&  ch  <  =  '+')||(ch  >='<  ')||(ch  >=  '>')	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
210	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
211	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
212	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7f)||(ch    >=    0x7f))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
213	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _typeFactory);  [CE]  cannot  find  symbol  _typeFactory  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _typeFactory);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _typeFactory);	  return    _startPositiveNumber();    	non-compiled	[CE]  cannot  find  symbol  _typeFactory	41	None	replace
214	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _null);  [CE]  cannot  find  symbol  _null  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _null);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _null);	  return    _startPositiveNumber();    	non-compiled	[CE]  cannot  find  symbol  _null	41	None	replace
215	[BUG]  [BUGGY]  Case  ']':  return  _startStringToken(true,  ch);  [CE]  not  a  statement  [FE]          JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  Case  ']':  return  _startStringToken(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	Case  ']':  return  _startStringToken(true,  ch);	  case    ']':    return    _startStringToken(false,    ch);    	non-compiled	[CE]  not  a  statement	19	None	replace
216	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
217	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
218	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
219	[BUG]  [BUGGY]  return  _startBigDecimal(ch);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimal(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimal(ch);	  return    _startBigIntegerToken();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
220	[BUG]  [BUGGY]  return  _endBigIntegerScope();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _endBigIntegerScope();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _endBigIntegerScope();	  return    _startBigIntegerScope();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
221	[BUG]  [BUGGY]  if(ch  =='{  ')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  =='{  ')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  =='{  ')  {  return  _startTrueToken();  }  else  {  return  _startTrueToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
222	[BUG]  [BUGGY]  if(ch  =='{  ')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  =='{  ')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  =='{  ')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
223	[BUG]  [BUGGY]  return  _startBigDecimalScope(true);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(true);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(true);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
224	[BUG]  [BUGGY]  return  _startBigDecimalScope(false);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(false);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(false);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
225	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNu  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNu  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNu	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
226	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNull  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNull  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNull	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
227	[BUG]  [BUGGY]  if(ch  ==  '[')return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [CE]  'else'  without  'if'  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  return    _startNullToken();    if(ch    ==    '[')    {    return    _startNullToken();    }    else    {    return    _startNullToken();    }    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
228	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _nodeToken());  [CE]  cannot  find  symbol  [FE]            JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayScope(false,  ch,  _nodeToken());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(false,  ch,  _nodeToken());	  case    ']':    return    _startArrayScope(false,    ch);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
229	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
230	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken()  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken()  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.END_ARRAY))  {  return  _startNullToken()	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.END_ARRAY))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
231	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _icLatin1);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _icLatin1);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _icLatin1);	  return    _startArrayScope(ch,    _inputBuffer);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	10	None	replace
232	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch,  _typeFactory);  [CE]  cannot  find  symbol  _typeFactory  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(true,  ch,  _typeFactory);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch,  _typeFactory);	  return    _startArrayScope(true,    ch);    	non-compiled	[CE]  cannot  find  symbol  _typeFactory	35	None	replace
233	[BUG]  [BUGGY]  ||  ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||  ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||  ch  ==  '[')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startPositiveNumber(ch);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
234	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch,  1);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(null,  ch,  1);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch,  1);	  return    _startArrayScope(null,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	36	None	replace
235	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
237	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  else  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  else  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  else  {  return  _startNullToken();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startNullToken();    }    	compilable	  [FE]  AssertionFailedError  	49	1	replace
238	[BUG]  [BUGGY]  return  _startBigIntegerToken2();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigIntegerToken2();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerToken2();	  return    _startBigIntegerToken();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
239	[BUG]  [BUGGY]  case  ']':  return  _startArrayToken();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startArrayToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayToken();	          case    ']':    return    _startArrayScope();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
240	[BUG]  [BUGGY]  |  _startNullToken()  ==  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  |  _startNullToken()  ==  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	|  _startNullToken()  ==  JsonToken.VALUE_NULL;	  return    _startNullToken();    ||    _startNullToken()    ==    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
241	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch,  _nonBlockScope);  [CE]  cannot  find  symbol  _nonBlockScope  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startJsonToken(false,  ch,  _nonBlockScope);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch,  _nonBlockScope);	  return    _startJsonToken(false,    ch);    	non-compiled	[CE]  cannot  find  symbol  _nonBlockScope	52	None	replace
242	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
243	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7FF)||(ch  >=  0x7F))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
244	[BUG]  [BUGGY]  return  _startDoubleToken(ch,  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startDoubleToken(ch,  _inputBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(ch,  _inputBufferLen);	  return    _startDoubleToken(ch);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	15	None	replace
245	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')	  return    _startNullToken();    ||(ch    =='<'&&    ch    <    =    '+')||(ch    >=    '>'    &&    ch    <    =    '-')||(ch    >='<    ')||(ch    >=    '>')    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
246	[BUG]  [BUGGY]  return  _startStringToken(_origBufferLen,  ch);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startStringToken(_origBufferLen,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(_origBufferLen,  ch);	  return    _startStringToken(ch);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  '[')  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	28	1	replace
248	[BUG]  [BUGGY]  if(ch  ==  '[')  {  return  _startPositiveNumber(ch);  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  '[')  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  '[')  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  AssertionFailedError  	28	1	replace
249	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  JsonParseException  	28	1	replace
250	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  [FE]  JsonParseException  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startPositiveNumber(ch);  }	  return    _startTrueToken();    if(ch    ==    '[')    {    return    _startTrueToken();    }    	compilable	  [FE]  JsonParseException  	28	1	replace
251	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _startPositiveNumber());  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _startPositiveNumber());  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _startPositiveNumber());	  return    _startPositiveNumber();    	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	41	None	replace
252	[BUG]  [BUGGY]  return  _startPositiveNumber(ch,  _nonBlockingJsonParser);  [CE]  cannot  find  symbol  _nonBlockingJsonParser  [FE]                    AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch,  _nonBlockingJsonParser);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch,  _nonBlockingJsonParser);	  return    _startPositiveNumber();    	non-compiled	[CE]  cannot  find  symbol  _nonBlockingJsonParser	41	None	replace
253	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  if(ch  <  =  0x7F)  {  return  _startPositiveNumber(ch);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startPositiveNumber(ch);  if(ch  <  =  0x7F)  {  return  _startPositiveNumber(ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startPositiveNumber(ch);    if(ch  <  =  0x7F)  {  return  _startPositiveNumber(ch);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
254	[BUG]  [BUGGY]  return  _startArrayScope(_nextToken(),  ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_nextToken(),  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_nextToken(),  ch);	  return    _startArrayScope(ch,    _nextToken());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
255	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _icLatin1);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _icLatin1);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _icLatin1);	  return    _startArrayScope(_inputBuffer,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	53	None	replace
256	[BUG]  [BUGGY]  return  _startFloatToken();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFloatToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startFloatToken();	  return    _startPositiveNumber(ch);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
257	[BUG]  [BUGGY]  return  _startArrayScope(_ioContext,  ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_ioContext,  ch,  _icUTF8);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_ioContext,  ch,  _icUTF8);	  return    _startArrayScope(ch,    _icUTF8);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
258	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
259	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
260	[BUG]  [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken()  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken()  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<'||  ch  ==  '>')&&(_startPositiveNumber(ch)!=  JsonToken.VALUE_NULL))  {  return  _startNullToken()	  return    _startNullToken();    ||(ch    =='<'||    ch    ==    '>')&&(_startNullToken()!=    JsonToken.VALUE_NULL))    {    return    _startNullToken();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
261	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
262	[BUG]  [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  >='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
263	[BUG]  [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  ||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	||(ch  =='<  '&&  ch  <  =  0x7F)||(ch  >=  0x7F)))  {  return  _startPositiveNumber(ch);	  return    _startTrueToken();    ||(ch    =='<'&&    ch    <    =    0x7F)||(ch    >=    0x7F)||(ch    >=    0x7F)))    {    return    _startTrueToken();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
264	[BUG]  [BUGGY]  |  _startNullToken()!=  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  |  _startNullToken()!=  JsonToken.VALUE_NULL;  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	|  _startNullToken()!=  JsonToken.VALUE_NULL;	  return    _startNullToken();    ||    _startNullToken()!=    JsonToken.VALUE_NULL;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(_startNullToken()!=  JsonToken.VALUE_NULL)  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(_startNullToken()!=  JsonToken.VALUE_NULL)  {  return  _startNullToken();  }	  return    _startNullToken();    ||    _startNullToken()!=    JsonToken.VALUE_NULL;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
266	[BUG]  [BUGGY]  if(_startNullToken()!=  JsonToken.VALUE_NULL)  {  return  _startNullToken();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(_startNullToken()!=  JsonToken.VALUE_NULL)  {  return  _startNullToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(_startNullToken()!=  JsonToken.VALUE_NULL)  {  return  _startNullToken();  }	  return    _startNullToken();    ||    _startNullToken()!=    JsonToken.VALUE_NULL;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
267	[BUG]  [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [CE]  incomparable  types:  JsonToken  and  int  [FE]    AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  	non-compiled	[CE]  incomparable  types:  JsonToken  and  int	21	None	add
268	[BUG]  [BUGGY]  return  _startFalseToken();  if(_startFalseToken()  ==  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [CE]  incomparable  types:  JsonToken  and  int  [FE]      AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(_startFalseToken()  ==  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(_startFalseToken()  ==  0)  {  return  _startFalseToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  	non-compiled	[CE]  incomparable  types:  JsonToken  and  int	21	None	add
269	[BUG]  [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  [CE]  incomparable  types:  JsonToken  and  int  [FE]        AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }	  	non-compiled	[CE]  incomparable  types:  JsonToken  and  int	21	None	add
270	[BUG]  [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }  [CE]  incomparable  types:  JsonToken  and  int  [FE]          AssertionFailedError    [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startFalseToken();  if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startFalseToken();    if(_startFalseToken()!=  0)  {  return  _startFalseToken();  }  else  {  return  _startTrueToken();  }	  	non-compiled	[CE]  incomparable  types:  JsonToken  and  int	21	None	add
271	[BUG]  [BUGGY]  return  _startBigDecimalScope(false,  ch);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(false,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(false,  ch);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
272	[BUG]  [BUGGY]  return  _startBigDecimalScope(true,  ch);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startBigDecimalScope(true,  ch);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope(true,  ch);	  return    _startBigDecimalScope();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
273	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _origBufferLen);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _origBufferLen,  _origBufferLen);	  return    _startArrayScope(ch,    _inputBuffer,    _origBufferLen);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	54	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startArrayScope();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	if(ch  ==  ']')  {  return  _startArrayScope();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
275	[BUG]  [BUGGY]  if(ch  ==  ']')  {  return  _startArrayScope();  }  else  {  return  _startArrayScope();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  if(ch  ==  ']')  {  return  _startArrayScope();  }  else  {  return  _startArrayScope();  }  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	if(ch  ==  ']')  {  return  _startArrayScope();  }  else  {  return  _startArrayScope();  }	  return    _startTrueToken();    if(ch    ==    ']')    {    return    _startTrueToken();    }    else    {    return    _startArrayScope();    }    	compilable	  [FE]  AssertionFailedError  	50	1	replace
276	[BUG]  [BUGGY]  case  ']':  return  _startToken();  [CE]  cannot  find  symbol  [FE]        JsonParseException      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  case  ']':  return  _startToken();  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startToken();	  case    ']':    return    _startTrueToken();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
277	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _input);  [CE]  cannot  find  symbol  _input  [FE]                  AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(_inputBuffer,  ch,  _input);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch,  _input);	  return    _startArrayScope(ch,    _inputBuffer,    ch);    	non-compiled	[CE]  cannot  find  symbol  _input	12	None	replace
278	[BUG]  [BUGGY]  return  _startArrayScope(false,  ch,  1);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':      [BUGGY]  return  _startArrayScope(false,  ch,  1);  [BUGGY]      case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(false,  ch,  1);	  return    _startArrayScope(false,    ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	34	None	replace
