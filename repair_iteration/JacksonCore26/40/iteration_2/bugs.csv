bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _startNullToken();  return  _startNullToken();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  return  _startNullToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    return  _startNullToken();	  	non-compiled	[CE]  unreachable  statement	4	None	add
2	[BUG]  [BUGGY]  return  _startNullToken();  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    if(ch  ==  ']')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
3	[BUG]  [BUGGY]  return  _startNullToken();  if(ch  ==  ']')  {  return  _startNullToken();  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  if(ch  ==  ']')  {  return  _startNullToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    if(ch  ==  ']')  {  return  _startNullToken();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
4	[BUG]  [BUGGY]  return  _startNullToken();  _startNullToken();  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  _startNullToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    _startNullToken();	  	non-compiled	[CE]  unreachable  statement	4	None	add
5	[BUG]  [BUGGY]  return  _startNullToken();  if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [CE]  unreachable  statement  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    if(ch  ==  '[')  {  return  _startNullToken();  }  else  {  return  _startNullToken();  }	  	non-compiled	[CE]  unreachable  statement	4	None	add
6	[BUG]  [BUGGY]  return  _startStringToken(ch);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startStringToken(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken(ch);	  return    _startStringToken();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startPositiveNumber(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startPositiveNumber(ch);	  return    _startStringToken();    	compilable	  [FE]  AssertionFailedError  	6	1	replace
8	[BUG]  [BUGGY]  return  _startPositiveNumber(ch);  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startPositiveNumber(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber(ch);	  return    _startStringToken();    	compilable	  [FE]  AssertionFailedError  	6	1	replace
9	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _origBufferLen);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _origBufferLen);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
10	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _inputBuffer);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
11	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _icUTF8);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _icUTF8);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _icUTF8);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
12	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  ch);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
13	[BUG]  [BUGGY]  return  _startDoubleScope(ch);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startDoubleScope(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope(ch);	  return    _startDoubleScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
14	[BUG]  [BUGGY]  return  _startBigDecimalScope();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startBigDecimalScope();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigDecimalScope();	  return    _startDoubleScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
15	[BUG]  [BUGGY]  return  _startDoubleToken(ch);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startDoubleToken(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken(ch);	  return    _startDoubleToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  return  _startJsonToken();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startJsonToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken();	  return    _startTrueToken();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
17	[BUG]  [BUGGY]  return  _startUnexpectedToken();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startUnexpectedToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startUnexpectedToken();	  return    _startTrueToken();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
18	[BUG]  [BUGGY]  case  ']':  return  _startTrueToken();  [CE]  duplicate  case  label  [FE]    JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  case  ']':  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startTrueToken();	      	non-compiled	[CE]  duplicate  case  label	8	None	replace
19	[BUG]  [BUGGY]  case  ']':  return  _startStringToken(false,  ch);  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  case  ']':  return  _startStringToken(false,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startStringToken(false,  ch);	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  case  ']':  return  _startArrayScope(false,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]        JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  case  ']':  return  _startArrayScope(false,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	case  ']':  return  _startArrayScope(false,  ch);	      	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	8	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startFalseToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startFalseToken();	  return    _startNullToken();    	compilable	  [FE]  AssertionFailedError  	5	1	replace
22	[BUG]  [BUGGY]  return  _startFalseToken();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startFalseToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startFalseToken();	  return    _startNullToken();    	compilable	  [FE]  AssertionFailedError  	5	1	replace
23	[BUG]  [BUGGY]      case  ']':  return  _startArrayScope();  [CE]  duplicate  case  label  [FE]    JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]      case  ']':  return  _startArrayScope();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	        case  ']':  return  _startArrayScope();	  	non-compiled	[CE]  duplicate  case  label	7	None	add
24	[BUG]  [BUGGY]  return  _startStringScope(ch);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startStringScope(ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope(ch);	  return    _startStringScope();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  return  _startTrueToken();  return  _startTrueToken();  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    return  _startTrueToken();	  	non-compiled	[CE]  unreachable  statement	1	None	add
26	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']')  {  return  _startTrueToken();  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
27	[BUG]  [BUGGY]  return  _startTrueToken();  _startTrueToken();  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    _startTrueToken();	  	non-compiled	[CE]  unreachable  statement	1	None	add
28	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  '[')  {  return  _startTrueToken();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  '[')  {  return  _startTrueToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  '[')  {  return  _startTrueToken();  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
29	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }  [CE]  unclosed  character  literal  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']'  ||  ch  =='<  ')  {  return  _startTrueToken();  }	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
30	[BUG]  [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
31	[BUG]  [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F))  {  return  _startTrueToken();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
32	[BUG]  [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F)||(ch  >=  0x7F)))  {  return  _startTrueToken();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
33	[BUG]  [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  ||(ch  =='<'&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    ||(ch  =='<'&&  ch  <  =  0x7f)||(ch  >=  0x7f))  {  return  _startTrueToken();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
34	[BUG]  [BUGGY]  return  _startArrayScope(false,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(false,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(false,  ch);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
35	[BUG]  [BUGGY]  return  _startArrayScope(true,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(true,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(true,  ch);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
36	[BUG]  [BUGGY]  return  _startArrayScope(null,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(null,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(null,  ch);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
37	[BUG]  [BUGGY]  return  _startNullToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||(ch  =='<'&&  ch  <  =  0x7F)||(ch  >=  0x7F))  {  return  _startNullToken();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
38	[BUG]  [BUGGY]  return  _startNullToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.END_ARRAY))  {  return  _startNullToken();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
39	[BUG]  [BUGGY]  return  _startNullToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||(ch  =='<'||  ch  ==  '>')&&(_startNullToken()!=  JsonToken.VALUE_NULL))  {  return  _startNullToken();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
40	[BUG]  [BUGGY]  return  _startNullToken();  ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||(ch  =='<'&&  ch  <  =  '+')||(ch  >=  '>'  &&  ch  <  =  '-')||(ch  >='<  ')||(ch  >=  '>')	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
41	[BUG]  [BUGGY]  return  _startPositiveNumber();  [CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startPositiveNumber();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startPositiveNumber();	  return    _startStringToken();    	non-compiled	[CE]  method  _startPositiveNumber  in  class  NonBlockingJsonParser  cannot  be  applied  to  given  types;	6	None	replace
42	[BUG]  [BUGGY]      return  _startToken();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]      return  _startToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	        return  _startToken();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
43	[BUG]  [BUGGY]  return  _startBigIntegerToken();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startBigIntegerToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerToken();	  return    _startDoubleToken();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
44	[BUG]  [BUGGY]  return  _startArrayToken();  [CE]  cannot  find  symbol  [FE]    JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayToken();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayToken();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
45	[BUG]  [BUGGY]  return  _startNullToken();  ||  _startNullToken()!=  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||  _startNullToken()!=  JsonToken.VALUE_NULL;  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||  _startNullToken()!=  JsonToken.VALUE_NULL;	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
46	[BUG]  [BUGGY]  return  _startNullToken();  ||  _startNullToken()  ==  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startNullToken();  ||  _startNullToken()  ==  JsonToken.VALUE_NULL;  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startNullToken();    ||  _startNullToken()  ==  JsonToken.VALUE_NULL;	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
47	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startUnexpectedValue(false,  ch);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
48	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startPositiveNumber(ch);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
49	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [CE]  unreachable  statement  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startNullToken();  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
50	[BUG]  [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [CE]  unreachable  statement  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startTrueToken();  if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return    _startTrueToken();    if(ch  ==  ']')  {  return  _startTrueToken();  }  else  {  return  _startArrayScope();  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
51	[BUG]  [BUGGY]  return  _startBigIntegerScope();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startBigIntegerScope();  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startBigIntegerScope();	  return    _startDoubleScope();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
52	[BUG]  [BUGGY]  return  _startJsonToken(false,  ch);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startJsonToken(false,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startJsonToken(false,  ch);	  return    _startTrueToken();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
53	[BUG]  [BUGGY]  return  _startArrayScope(_inputBuffer,  ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(_inputBuffer,  ch);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(_inputBuffer,  ch);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
54	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen);  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _inputBuffer,  _origBufferLen);	  return    _startArrayScope(ch);    	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	11	None	replace
55	[BUG]  [BUGGY]  return  _startArrayScope(ch,  _nextToken());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]  return  _startArrayScope(ch,  _nextToken());  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch,  _nextToken());	  return    _startArrayScope(ch);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
56	[BUG]  [BUGGY]      case  '[':  [CE]  duplicate  case  label  [FE]    JsonParseException    [CONTEXT]    case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':    [BUGGY]      case  '[':  [BUGGY]    case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	        case  '[':	  	non-compiled	[CE]  duplicate  case  label	7	None	add
