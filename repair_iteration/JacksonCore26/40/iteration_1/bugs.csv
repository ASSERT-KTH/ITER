bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startTrueToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startTrueToken();	return  _startArrayScope();  	compilable	  [FE]  AssertionFailedError  	79	1	replace
2	[BUG]  [BUGGY]  return  _startTrueToken();  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startTrueToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startTrueToken();	return  _startArrayScope();  	compilable	  [FE]  AssertionFailedError  	79	1	replace
3	[BUG]  [BUGGY]  return  _startDoubleToken();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startDoubleToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleToken();	return  _startArrayScope();  	non-compiled	[CE]  cannot  find  symbol	79	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startNullToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	return  _startNullToken();	return  _startArrayScope();  	compilable	  [FE]  AssertionFailedError  	79	1	replace
5	[BUG]  [BUGGY]  return  _startNullToken();  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startNullToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startNullToken();	return  _startArrayScope();  	compilable	  [FE]  AssertionFailedError  	79	1	replace
6	[BUG]  [BUGGY]  return  _startStringToken();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startStringToken();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringToken();	return  _startArrayScope();  	non-compiled	[CE]  cannot  find  symbol	79	None	replace
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]            AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]    [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	add	  	return  _startArrayScope();  	compilable	  [FE]  JsonParseException  	79	1	replace
8	[BUG]  [BUGGY]    [FE]  JsonParseException  [FE]            AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]    [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	  	return  _startArrayScope();  	compilable	  [FE]  JsonParseException  	79	1	replace
9	[BUG]  [BUGGY]  return  _startStringScope();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startStringScope();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startStringScope();	return  _startArrayScope();  	non-compiled	[CE]  cannot  find  symbol	79	None	replace
10	[BUG]  [BUGGY]  return  _startDoubleScope();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startDoubleScope();  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startDoubleScope();	return  _startArrayScope();  	non-compiled	[CE]  cannot  find  symbol	79	None	replace
11	[BUG]  [BUGGY]  return  _startArrayScope(ch);  [CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  case  '8':  case  '9':  return  _startPositiveNumber(ch);  case  'f':  return  _startFalseToken();  case  'n':  return  _startNullToken();  case  't':  return  _startTrueToken();  case  '[':  [BUGGY]  return  _startArrayScope(ch);  [BUGGY]  case  ']':  return  _closeArrayScope();  case  '{':  return  _startObjectScope();  case  '}':  return  _closeObjectScope();  default:  }  return  _startUnexpectedValue(false,  ch);  }  [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	637	637	1	replace	return  _startArrayScope(ch);	return  _startArrayScope();  	non-compiled	[CE]  method  _startArrayScope  in  class  NonBlockingJsonParserBase  cannot  be  applied  to  given  types;	79	None	replace
