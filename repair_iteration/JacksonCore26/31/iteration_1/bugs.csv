bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  _binaryValue(ch);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  return  _binaryValue(ch);  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	return  _binaryValue(ch);	return  _startDocument(ch);  	non-compiled	[CE]  cannot  find  symbol	61	None	replace
2	[BUG]  [BUGGY]  _binaryValue  =  _binaryValue(ch);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _binaryValue(ch);  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _binaryValue(ch);	return  _startDocument(ch);  	non-compiled	[CE]  cannot  find  symbol	61	None	replace
3	[BUG]  [BUGGY]  _binaryValue  =  _binaryValue.cloneTree();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _binaryValue.cloneTree();  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _binaryValue.cloneTree();	return  _startDocument(ch);  	non-compiled	[CE]  cannot  find  symbol	61	None	replace
4	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _binaryValue.clone();  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	add	_binaryValue  =  _binaryValue.clone();	return  _startDocument(ch);  	compilable	  [FE]  NullPointerException  	61	1	replace
5	[BUG]  [BUGGY]  _binaryValue  =  _binaryValue.clone();  [FE]  NullPointerException  [FE]          AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _binaryValue.clone();  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _binaryValue.clone();	return  _startDocument(ch);  	compilable	  [FE]  NullPointerException  	61	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]    [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	add	  	return  _startDocument(ch);  	compilable	  [FE]  AssertionFailedError  	61	1	replace
7	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]    [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	  	return  _startDocument(ch);  	compilable	  [FE]  AssertionFailedError  	61	1	replace
8	[BUG]  [BUGGY]  return  _startInitValue(ch);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  return  _startInitValue(ch);  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	return  _startInitValue(ch);	return  _startDocument(ch);  	non-compiled	[CE]  cannot  find  symbol	61	None	replace
9	[BUG]  [BUGGY]  _binaryValue  =  _startInitialValue(ch);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _startInitialValue(ch);  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _startInitialValue(ch);	return  _startDocument(ch);  	non-compiled	[CE]  cannot  find  symbol	61	None	replace
10	[BUG]  [BUGGY]  _binaryValue  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _inputBuffer[_inputPtr++]  &  0xFF;	return  _startDocument(ch);  	non-compiled	[CE]  incompatible  types	61	None	replace
11	[BUG]  [BUGGY]  _binaryValue  =  _binaryValue[_inputPtr++];  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]    _numTypesValid  =  NR_UNKNOWN;  _tokenInputTotal  =  _currInputProcessed  +  _inputPtr;  _binaryValue  =  null;  int  ch  =  _inputBuffer[_inputPtr++]  &  0xFF;  switch  (_majorState)  {  case  MAJOR_INITIAL:  [BUGGY]  _binaryValue  =  _binaryValue[_inputPtr++];  [BUGGY]    case  MAJOR_ROOT:  return  _startValue(ch);  case  MAJOR_OBJECT_FIELD_FIRST:  //  expect  field-name  or  end-object  return  _startFieldName(ch);  case  MAJOR_OBJECT_FIELD_NEXT:  //  expect  comma  +  field-name  or  end-object  return  _startFieldNameAfterComma(ch);  case  MAJOR_OBJECT_VALUE:  //  expect  colon,  followed  by  value  [CLASS]  NonBlockingJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  ch  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	193	193	1	replace	_binaryValue  =  _binaryValue[_inputPtr++];	return  _startDocument(ch);  	non-compiled	[CE]  incompatible  types	61	None	replace
