bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  ==  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	2	1	replace
2	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  ==  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	2	1	replace
3	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  if((  _inputPtr  +  1)  <  _inputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  if((  _inputPtr  +  1)  <  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    <    _inputEnd)    {    if((  _inputPtr  +  1)  <  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
4	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    <    _inputEnd)    {    If((  _inputPtr  +  1)  <  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
5	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  <  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    <    _inputEnd)    {    if((  _inputPtr  +  1)  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
6	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((  _inputPtr  +  1)  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
7	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)!=  _inputEnd)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)!=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((  _inputPtr  +  1)!=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
8	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >>  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >>  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((  _inputPtr  +  1)  >>  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
9	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  >=  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((  _inputPtr  +  1)  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
10	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if((  _inputPtr  +  1)>  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
11	[BUG]  [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((  _inputPtr  +  1)>  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if((  _inputPtr  +  1)  ==  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
13	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((  _inputPtr  +  1)  ==  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
14	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
15	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr!=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
16	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >>  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >>  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  >>  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
17	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
18	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(start  >  _inputPtr)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  >  _inputPtr)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	5	1	replace
19	[BUG]  [BUGGY]  if(start  >  _inputPtr)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(start  >  _inputPtr)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  >  _inputPtr)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	5	1	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  start)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >=  start)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
21	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  start)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  end)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  end)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
23	[BUG]  [BUGGY]  if(_inputPtr  >  end)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  end)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  end)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
24	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  if(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  start)  {  if(_inputPtr  >  start)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    start)    {    if(_inputPtr  >  start)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
25	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >  start)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    start)    {    If(_inputPtr  >  start)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
26	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  if(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0)  {  if(_inputPtr  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0)    {    if(_inputPtr  >  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
27	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0)    {    If(_inputPtr  >  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
28	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  int  _inputPtr  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0)  {  int  _inputPtr  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0)    {    int  _inputPtr  >  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
29	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >=  0)  {	  if(_inputPtr    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	7	1	replace
30	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  0)  {	  if(_inputPtr    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	7	1	replace
31	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end);  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
37	[BUG]  [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  end)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >=  end)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
39	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  [FE]  AssertionFailedError  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  end)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  end)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
40	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0)  {  when(_inputPtr  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0)    {    when(_inputPtr  >  0)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
41	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If(_inputPtr  >=  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    _inputEnd)    {    If(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
43	[BUG]  [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {	  if(_inputPtr    >    start)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
45	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {      [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [BUGGY]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
