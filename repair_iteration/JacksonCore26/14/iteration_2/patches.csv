bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
2	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  <  _inputPtr)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
4	[BUG]  [BUGGY]  if(start  <  _inputPtr)  {  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputPtr)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  <  _inputEnd)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
6	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  [FE]  AssertionFailedError  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
7	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(end  >  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(end  >  _inputPtr)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	19	1	replace
8	[BUG]  [BUGGY]  if(end  >  _inputPtr)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(end  >  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(end  >  _inputPtr)  {	  if(start    >    _inputPtr)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	19	1	replace
9	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  _inputPtr  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  _inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  int  _inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    int    _inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
10	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  int  _inputPtr  >  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  int  _inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  0)  {  int  _inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    int    _inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	28	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputEnd  >  0)  {	  if(_inputPtr    >    0)    {    if(_inputPtr    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
12	[BUG]  [BUGGY]  if(_inputEnd  >  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputEnd  >  0)  {	  if(_inputPtr    >    0)    {    if(_inputPtr    >    0)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
13	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
14	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >=  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	45	1	replace
15	[BUG]  [BUGGY]  if(_inputPtr  >=  0  ||  _inputEnd  >  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	45	1	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  _inputEnd  ||  _inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  <  _inputEnd  ||  _inputPtr  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
17	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd  ||  _inputPtr  >  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  _inputEnd  ||  _inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  _inputEnd  ||  _inputPtr  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  <  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
19	[BUG]  [BUGGY]  if(_inputPtr  <  0  ||  _inputEnd  >  0)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  0  ||  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
20	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  <  =  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0  ||  _inputEnd  <  =  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
21	[BUG]  [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
22	[BUG]  [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  If(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  If(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    If(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
23	[BUG]  [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  if(_inputPtr  >  start  ||  _inputEnd  <  _inputStart)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  _inputEnd)  {  if(_inputPtr  >  start  ||  _inputEnd  <  _inputStart)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    if(_inputPtr  >  start  ||  _inputEnd  <  _inputStart)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
24	[BUG]  [BUGGY]  if(start  >  _inputPtr)  {  if(start  >  _inputPtr)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputPtr)  {  if(start  >  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start    >    _inputPtr)    {    if(start  >  _inputPtr)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
25	[BUG]  [BUGGY]  if(start  >  _inputPtr)  {  If(start  >  _inputPtr)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputPtr)  {  If(start  >  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start    >    _inputPtr)    {    If(start  >  _inputPtr)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
26	[BUG]  [BUGGY]  if(start  >  _inputPtr)  {  if(start  >  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputPtr)  {  if(start  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start    >    _inputPtr)    {    if(start  >  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)>  buf.length)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if((  _inputPtr  +  1)>  buf.length)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
28	[BUG]  [BUGGY]  if((  _inputPtr  +  1)>  buf.length)  {  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)>  buf.length)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((  _inputPtr  +  1)>  buf.length)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
29	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputEnd  +  1)>  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if((  _inputEnd  +  1)>  _inputPtr)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
30	[BUG]  [BUGGY]  if((  _inputEnd  +  1)>  _inputPtr)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputEnd  +  1)>  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((  _inputEnd  +  1)>  _inputPtr)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
31	[BUG]  [BUGGY]  if(_inputPtr  >  _inputEnd)  {  if(_inputPtr  >  _inputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  _inputEnd)  {  if(_inputPtr  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    _inputEnd)    {    if(_inputPtr  >  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
32	[BUG]  [BUGGY]  if(_inputPtr  >  _inputEnd)  {  If(_inputPtr  >  _inputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  _inputEnd)  {  If(_inputPtr  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    _inputEnd)    {    If(_inputPtr  >  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	36	None	add
33	[BUG]  [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  if((  _inputPtr  +  1)>  _inputEnd)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  if((  _inputPtr  +  1)>  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)>    _inputEnd)    {    if((  _inputPtr  +  1)>  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
34	[BUG]  [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  If((  _inputPtr  +  1)>  _inputEnd)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  If((  _inputPtr  +  1)>  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)>    _inputEnd)    {    If((  _inputPtr  +  1)>  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
35	[BUG]  [BUGGY]  if(_inputPtr  >  end)  {  if(_inputPtr  >  end)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  end)  {  if(_inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    end)    {    if(_inputPtr  >  end)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
36	[BUG]  [BUGGY]  if(_inputPtr  >  end)  {  If(_inputPtr  >  end)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  end)  {  If(_inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    end)    {    If(_inputPtr  >  end)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
37	[BUG]  [BUGGY]  if(_inputPtr  >  end)  {  if(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  end)  {  if(_inputPtr  >  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    end)    {    if(_inputPtr  >  start)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
38	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    ==    _inputEnd)    {    if((  _inputPtr  +  1)  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
39	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    ==    _inputEnd)    {    if((  _inputPtr  +  1)  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
40	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)!=  _inputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)!=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    ==    _inputEnd)    {    if((  _inputPtr  +  1)!=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
41	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  >>  _inputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  if((  _inputPtr  +  1)  >>  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    ==    _inputEnd)    {    if((  _inputPtr  +  1)  >>  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
42	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  >  _inputEnd)  {	  if(_inputPtr    >    end)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	23	1	replace
43	[BUG]  [BUGGY]  if(start  >  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  >  _inputEnd)  {	  if(_inputPtr    >    end)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	23	1	replace
44	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0)  {  If(_inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    If(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
45	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >=  end)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start)  {  If(_inputPtr  >=  end)  {	  if(_inputPtr    >=    _inputEnd)    {    If(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
46	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  >=  0)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  >=  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    0)    {    if(_inputPtr  >=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
47	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr!=  0)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr!=  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    0)    {    if(_inputPtr!=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
48	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  >>  0)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  >>  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    0)    {    if(_inputPtr  >>  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
49	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  ==  0)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  if(_inputPtr  ==  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    0)    {    if(_inputPtr  ==  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
50	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  when(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  when(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    when(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
51	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  when(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  _inputEnd)  {  when(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    when(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
52	[BUG]  [BUGGY]  if(_inputEnd  >  0)  {  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputEnd  >  0)  {  when(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputEnd  >  0)  {  when(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    when(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
53	[BUG]  [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  =  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  =  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start  ||  _inputEnd  <  =  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
54	[BUG]  [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  =  end)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  =  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start  ||  _inputEnd  <  =  end)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
55	[BUG]  [BUGGY]  if(_inputPtr  <  =  start  ||  _inputEnd  <  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  =  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  =  start  ||  _inputEnd  <  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >=  start  ||  _inputEnd  <  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
57	[BUG]  [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  _inputEnd)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start  ||  _inputEnd  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start  ||  _inputEnd  <  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
58	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  ==  _inputEnd)  {	  if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((    _inputPtr    +    1)    ==    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
59	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  if((  _inputPtr  +  1)  >=  _inputEnd)  {	  if((    _inputPtr    +    1)    >=    _inputEnd)    {    if((    _inputPtr    +    1)    ==    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
61	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
62	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr!=  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
63	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  ==  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    ==    _inputEnd)    {    If(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
64	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  <  start)  {	  if(_inputPtr    >    start)    {    if(_inputPtr    >    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	24	1	replace
65	[BUG]  [BUGGY]  if(_inputPtr  <  start)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  start)  {	  if(_inputPtr    >    start)    {    if(_inputPtr    >    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	24	1	replace
66	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  If(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    If(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
67	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    If(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
68	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    If(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
69	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  start,  end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  start,  end);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  start,  end);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    buf,    end);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  _inputEnd)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    If((    _inputPtr    +    1)    <    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
71	[BUG]  [BUGGY]  If((  _inputPtr  +  1)  <  _inputEnd)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  If((  _inputPtr  +  1)  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	If((  _inputPtr  +  1)  <  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    If((    _inputPtr    +    1)    <    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
72	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  >=  start)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  >=  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    start)    {    if(_inputPtr  >=  start)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
73	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr!=  start)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr!=  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    start)    {    if(_inputPtr!=  start)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
74	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  >>  start)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  >>  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    start)    {    if(_inputPtr  >>  start)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
75	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  ==  start)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  if(_inputPtr  ==  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    start)    {    if(_inputPtr  ==  start)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
76	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  >=  end)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  >=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    end)    {    if(_inputPtr  >=  end)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
77	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr!=  end)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr!=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    end)    {    if(_inputPtr!=  end)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
78	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  >>  end)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  >>  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    end)    {    if(_inputPtr  >>  end)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
79	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  ==  end)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputPtr  ==  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    end)    {    if(_inputPtr  ==  end)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
80	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    if(_inputPtr  >  0  ||  _inputEnd  >  0)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
81	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  If(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  If(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    If(_inputPtr  >  0  ||  _inputEnd  >  0)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
82	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  when(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >  0)  {  when(_inputPtr  >  0  ||  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    when(_inputPtr  >  0  ||  _inputEnd  >  0)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
83	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  >  start)  {	  if(_inputPtr    >    start)    {    If(_inputPtr    >    start)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
84	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start)  {  If(_inputPtr  >  start)  {	  if(_inputPtr    >    start)    {    If(_inputPtr    >    start)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
85	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >  end)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  start)  {  If(_inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >=  start)  {  If(_inputPtr  >  end)  {	  if(_inputPtr    >    start)    {    If(_inputPtr    >    start)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
86	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  If(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  If(_inputPtr  >  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  If(_inputPtr  >  start)  {	  if(_inputPtr    >    start)    {    If(_inputPtr    >    start)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
87	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
88	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >=  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  >=  _inputPtr)  {	  if(_inputPtr    >=    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	21	1	replace
89	[BUG]  [BUGGY]  if(start  >=  _inputPtr)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >=  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  >=  _inputPtr)  {	  if(_inputPtr    >=    start)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	21	1	replace
90	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  >=  _inputEnd)  {	  if(_inputPtr    >=    end)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	39	1	replace
91	[BUG]  [BUGGY]  if(start  >=  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  >=  _inputEnd)  {	  if(_inputPtr    >=    end)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	39	1	replace
92	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
93	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >=  end)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  if(_inputPtr  >=  end)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr!=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
94	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr!=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
95	[BUG]  [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  If((  _inputPtr  +  1)  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)  ==  _inputEnd)  {  If((  _inputPtr  +  1)  ==  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)    ==    _inputEnd)    {    If((  _inputPtr  +  1)  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
96	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start)  {  If(_inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    If(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
97	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >=  end)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start)  {  If(_inputPtr  >=  end)  {	  if(_inputPtr    >=    _inputEnd)    {    If(_inputPtr    >=    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
98	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  If(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  If(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    If(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
99	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >  end)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start)  {  If(_inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start)  {  If(_inputPtr  >  end)  {	  if(_inputPtr    >    0)    {    If(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  &&  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  0  &&  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
101	[BUG]  [BUGGY]  if(_inputPtr  >  0  &&  _inputEnd  >  0)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  &&  _inputEnd  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0  &&  _inputEnd  >  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  <  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  0  ||  _inputEnd  <  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
103	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  <  0)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  <  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0  ||  _inputEnd  <  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
104	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >=  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  0  ||  _inputEnd  >=  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	45	1	replace
105	[BUG]  [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  0  ||  _inputEnd  >=  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  0  ||  _inputEnd  >=  0)  {	  if(_inputPtr    >    0    ||    _inputEnd    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	45	1	replace
106	[BUG]  [BUGGY]  if(start  >  _inputEnd)  {  If(_inputPtr  >  start)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputEnd)  {  If(_inputPtr  >  start)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  >  _inputEnd)  {  If(_inputPtr  >  start)  {	  if(_inputPtr    >    start)    {    If(_inputPtr    >    start)    {    	non-compiled	[CE]  ';'  expected	25	None	replace
107	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start)  {  If((  _inputPtr  +  1)  <  _inputEnd)  {	  if((    _inputPtr    +    1)    <    _inputEnd)    {    If((    _inputPtr    +    1)    <    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
108	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  if(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  if(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    if(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	26	None	replace
109	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start)  {  if(_inputPtr  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr    ==    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
110	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  start  +  1)>  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if((  start  +  1)>  _inputEnd)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
111	[BUG]  [BUGGY]  if((  start  +  1)>  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  start  +  1)>  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((  start  +  1)>  _inputEnd)  {	  if((    _inputPtr    +    1)>    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	11	1	replace
112	[BUG]  [BUGGY]  if(start  >  _inputPtr)  {  when(start  >  _inputPtr)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  >  _inputPtr)  {  when(start  >  _inputPtr)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start    >    _inputPtr)    {    when(start  >  _inputPtr)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
113	[BUG]  [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  if((  _inputPtr  +  1)>  _inputStart)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if((  _inputPtr  +  1)>  _inputEnd)  {  if((  _inputPtr  +  1)>  _inputStart)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if((    _inputPtr    +    1)>    _inputEnd)    {    if((  _inputPtr  +  1)>  _inputStart)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
114	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  start  ||  _inputEnd  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  <  start  ||  _inputEnd  >  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	43	1	replace
115	[BUG]  [BUGGY]  if(_inputPtr  <  start  ||  _inputEnd  >  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  <  start  ||  _inputEnd  >  _inputEnd)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  <  start  ||  _inputEnd  >  _inputEnd)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	43	1	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd  ||  _inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(start  <  _inputEnd  ||  _inputPtr  >  end)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
117	[BUG]  [BUGGY]  if(start  <  _inputEnd  ||  _inputPtr  >  end)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd  ||  _inputPtr  >  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd  ||  _inputPtr  >  end)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  AssertionFailedError  	43	1	replace
118	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(start  <  _inputEnd)  {  when(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(start  <  _inputEnd)  {  when(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    when(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
119	[BUG]  [BUGGY]  when(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  when(_inputPtr  >  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	when(_inputPtr  >  0)  {	  if(_inputPtr    >    0)    {    when(_inputPtr    >    0)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
120	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  If(_inputPtr  >=  0)  {  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  0)  {  If(_inputPtr  >=  0)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    0)    {    If(_inputPtr  >=  0)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
121	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr,  end);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr,  end);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr,  end);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
122	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  If(_inputPtr  >=  end)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >=  end)  {  If(_inputPtr  >=  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr    >=    end)    {    If(_inputPtr  >=  end)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
123	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
124	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  +  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  +  _inputPtr);  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  +  _inputPtr);	  _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    _inputPtr);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
125	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	add	if(_inputPtr  >  start  ||  _inputEnd  <  end)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	43	1	replace
126	[BUG]  [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  end)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      public  void  feedInput(byte[]  buf,  int  start,  int  end)  throws  IOException  {        [BUGGY]  if(_inputPtr  >  start  ||  _inputEnd  <  end)  {  [BUGGY]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	91	91	1	replace	if(_inputPtr  >  start  ||  _inputEnd  <  end)  {	  if(_inputPtr    >    start    ||    _inputEnd    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	43	1	replace
