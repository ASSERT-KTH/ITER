bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _inputBuffer  =  buf.length;  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  buf.length;  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length;	_inputBuffer  =  buf;  	non-compiled	[CE]  incompatible  types	37	None	replace
2	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr];	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
3	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
4	[BUG]  [BUGGY]  _inputBuffer  =  buf.toByteArray();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  buf.toByteArray();  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.toByteArray();	_inputBuffer  =  buf;  	non-compiled	[CE]  cannot  find  symbol	37	None	replace
5	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]    [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	  	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
6	[BUG]  [BUGGY]    [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]    [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	  	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
7	[BUG]  [BUGGY]  _inputBuffer  =  start;  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  start;  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start;	_inputBuffer  =  buf;  	non-compiled	[CE]  incompatible  types	37	None	replace
8	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  _inputBuffer;  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  _inputBuffer;	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
9	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError  [CONTEXT]  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);    [BUGGY]  _inputBuffer  =  _inputBuffer;  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBuffer;	_inputBuffer  =  buf;  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	1	replace
