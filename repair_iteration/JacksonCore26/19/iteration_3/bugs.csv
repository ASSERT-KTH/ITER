bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
2	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
3	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	non-compiled	[CE]  ')'  expected	27	None	replace
4	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
5	[BUG]  [BUGGY]  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputEnd];    _inputBuffer  =  new  byte[_inputEnd];	  	compilable	  [FE]  AssertionFailedError  	8	1	add
7	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputEnd];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputEnd];    _inputBuffer  =  new  byte[_inputEnd];	  	compilable	  [FE]  AssertionFailedError  	8	1	add
8	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  int  _inputBuffer  =  new  byte[_inputEnd];  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  int  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputEnd];    int  _inputBuffer  =  new  byte[_inputEnd];	  	non-compiled	[CE]  incompatible  types	8	None	add
9	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputStart];  [CE]  cannot  find  symbol  _inputStart  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputStart];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputEnd];    _inputBuffer  =  new  byte[_inputStart];	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	8	None	add
10	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes();    	non-compiled	[CE]  ')'  expected	33	None	replace
11	[BUG]  [BUGGY]  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes();    	non-compiled	[CE]  not  a  statement	33	None	replace
12	[BUG]  [BUGGY]  int  _inputBuffer  =  _inputBuffer;  [CE]  variable  _inputBuffer  might  not  have  been  initialized  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  int  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	int  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    int    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  variable  _inputBuffer  might  not  have  been  initialized	43	None	replace
13	[BUG]  [BUGGY]  int  _inputBuffer  =  _inputBuffer.length;  [CE]  int  cannot  be  dereferenced  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  int  _inputBuffer  =  _inputBuffer.length;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	int  _inputBuffer  =  _inputBuffer.length;	  _inputBuffer    =    _inputBuffer;    int    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  int  cannot  be  dereferenced	43	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr++];    _inputBuffer  =  new  byte[_inputPtr++];	  	compilable	  [FE]  AssertionFailedError  	12	1	add
15	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  _inputBuffer  =  new  byte[_inputPtr++];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    _inputBuffer  =  new  byte[_inputPtr++];	  	compilable	  [FE]  AssertionFailedError  	12	1	add
16	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  _inputBuffer))  {  _inputBuffer  =  new  byte[_inputPtr++];  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  _inputBuffer))  {  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  _inputBuffer))  {  _inputBuffer  =  new  byte[_inputPtr++];	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
17	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  null))  {  _inputBuffer  =  new  byte[_inputPtr++];  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  null))  {  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||(_inputPtr  >=  _inputEnd  &&  buf[_inputPtr++]!=  null))  {  _inputBuffer  =  new  byte[_inputPtr++];	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
18	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||  _inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||  _inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||  _inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
19	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
20	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
21	[BUG]  [BUGGY]  _inputBuffer  =  buf,  end.length();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  end.length();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  end.length();	  _inputBuffer    =    buf,    end.toByteArray();    	non-compiled	[CE]  ';'  expected	67	None	replace
22	[BUG]  [BUGGY]  _inputBuffer  =  start,  end.toByteArray();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start,  end.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start,  end.toByteArray();	  _inputBuffer    =    buf,    end.toByteArray();    	non-compiled	[CE]  ';'  expected	67	None	replace
23	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
24	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
25	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
26	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  _reportError( "Already  closed,  can  not  feed  more  input.. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    _reportError( "Already  closed,  can  not  feed  more  input.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	22	1	add
28	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	22	1	add
29	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  [CE]  cannot  find  symbol  _inputLen  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];	  	non-compiled	[CE]  cannot  find  symbol  _inputLen	22	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];	  	compilable	  [FE]  AssertionFailedError  	22	1	add
31	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];	  	compilable	  [FE]  AssertionFailedError  	22	1	add
32	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  _inputBuffer  =  new  byte[_inputPtr];  [CE]  cannot  find  symbol  _inputLen  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputLen];  _inputBuffer  =  new  byte[_inputPtr];	  	non-compiled	[CE]  cannot  find  symbol  _inputLen	22	None	add
33	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start.length();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  start.length();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start.length();	  _inputBuffer    =    buf,    start.toByteArray();    	non-compiled	[CE]  ';'  expected	34	None	replace
34	[BUG]  [BUGGY]  _inputBuffer  =  start,  buf.toByteArray();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start,  buf.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start,  buf.toByteArray();	  _inputBuffer    =    buf,    start.toByteArray();    	non-compiled	[CE]  ';'  expected	34	None	replace
35	[BUG]  [BUGGY]  _inputBuffer  =  new  Byte[_inputPtr];  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  Byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  Byte[_inputPtr];	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
36	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
37	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _inputBuffer  =  new  Byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
38	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  end];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
39	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  end];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  end];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr    +    start];    _inputBuffer  =  new  byte[_inputPtr  +  start];	  	compilable	  [FE]  AssertionFailedError  	48	1	add
41	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  byte[_inputPtr  +  start];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    _inputBuffer  =  new  byte[_inputPtr  +  start];	  	compilable	  [FE]  AssertionFailedError  	48	1	add
42	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  byte[_inputPtr  +  begin];  [CE]  cannot  find  symbol  begin  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  byte[_inputPtr  +  begin];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    _inputBuffer  =  new  byte[_inputPtr  +  begin];	  	non-compiled	[CE]  cannot  find  symbol  begin	48	None	add
43	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currInputProcessed);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_currInputProcessed);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  JsonParseException  	60	1	replace
44	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currInputProcessed);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_currInputProcessed);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_currInputProcessed);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  JsonParseException  	60	1	replace
45	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_origBufferLen);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_origBufferLen);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  JsonParseException  	60	1	replace
46	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_origBufferLen);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_origBufferLen);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_origBufferLen);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  JsonParseException  	60	1	replace
47	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY,  but "+getMessage());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY,  but "+getMessage());	  _reportError(   "Current    context    not    an    ARRAY    but   "+getMessage());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
48	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  null)  {  throw  new  JsonParseException( " ");  }  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  null)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  null)  {  throw  new  JsonParseException( " ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
49	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  null)  {  throw  new  JsonParseException( " ");  }  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  null)  {  throw  new  JsonParseException( " ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  null)  {  throw  new  JsonParseException( " ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
51	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	26	1	add
53	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	26	1	add
54	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	non-compiled	[CE]  incompatible  types	26	None	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
56	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputEnd++];	  _inputBuffer    =    new    byte[_inputPtr++];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
58	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd++];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputEnd++];	  _inputBuffer    =    new    byte[_inputPtr++];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
59	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputLen++];  [CE]  cannot  find  symbol  _inputLen  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputLen++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputLen++];	  _inputBuffer    =    new    byte[_inputPtr++];    	non-compiled	[CE]  cannot  find  symbol  _inputLen	13	None	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
61	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
63	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
65	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
66	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  start  =  _inputBuffer;  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  start  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  start  =  _inputBuffer;	  	non-compiled	[CE]  incompatible  types	1	None	add
67	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  int  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  int  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    int  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  incompatible  types	1	None	add
68	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _InputBuffer  =  _inputBuffer;  [CE]  cannot  find  symbol  _InputBuffer  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _InputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  _InputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  cannot  find  symbol  _InputBuffer	1	None	add
69	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Can  not  feed  more  input  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input, ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input, ");	          _reportError(   "Can    not    feed    more    input       ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Can  not  feed  more  input  	36	1	replace
70	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input, ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Can  not  feed  more  input  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input, ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input, ");	          _reportError(   "Can    not    feed    more    input       ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Can  not  feed  more  input  	36	1	replace
71	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Current  context  not  an  ARRAY  but   "+_endOfInput);  _reportError( "Current  context  not  an  ARRAY  but   "+_endOfInput);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    _reportError( "Current  context  not  an  ARRAY  but   "+_endOfInput);	  	compilable	  [FE]  JsonParseException  	59	1	add
72	[BUG]  [BUGGY]  _reportError(   "Current  context  not  an  ARRAY  but   "+_endOfInput);  _reportError( "Current  context  not  an  ARRAY  but   "+_endOfInput);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Current  context  not  an  ARRAY  but   "+_endOfInput);  _reportError( "Current  context  not  an  ARRAY  but   "+_endOfInput);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    _reportError( "Current  context  not  an  ARRAY  but   "+_endOfInput);	  	compilable	  [FE]  JsonParseException  	59	1	add
73	[BUG]  [BUGGY]  _reportError(   "Current  context  not  an  ARRAY  but   "+_endOfInput);  _reportError( "Current  context  not  an  ARRAY  but   "+_startOfInput);  [CE]  cannot  find  symbol  _startOfInput  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Current  context  not  an  ARRAY  but   "+_endOfInput);  _reportError( "Current  context  not  an  ARRAY  but   "+_startOfInput);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    _reportError( "Current  context  not  an  ARRAY  but   "+_startOfInput);	  	non-compiled	[CE]  cannot  find  symbol  _startOfInput	59	None	add
74	[BUG]  [BUGGY]  _inputBuffer  =  _inputBufferLength;  [CE]  cannot  find  symbol  _inputBufferLength  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  _inputBufferLength;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBufferLength;	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLength	2	None	replace
75	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start  +  1];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
76	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start  +  1];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start  +  1];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
77	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Can    not    feed    more    input       ");    _reportError( "Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	35	1	add
78	[BUG]  [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Can    not    feed    more    input       ");    _reportError( "Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	35	1	add
79	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Can    not    feed    more    input       ");    _reportError( "Can  not  feed  more  input. ");	  	compilable	  [FE]  JsonParseException  	35	1	add
80	[BUG]  [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( "Can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Can    not    feed    more    input       ");    _reportError( "Can  not  feed  more  input. ");	  	compilable	  [FE]  JsonParseException  	35	1	add
81	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes());  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes());	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes());    	non-compiled	[CE]  not  a  statement	32	None	replace
82	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputPtr  =  start;  _inputEnd  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
83	[BUG]  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputPtr  =  start;  _inputEnd  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
84	[BUG]  [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
85	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputPtr  =  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
86	[BUG]  [BUGGY]  _inputPtr  =  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputPtr  =  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
87	[BUG]  [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
88	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
89	[BUG]  [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
90	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ",  buf);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
91	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ",  buf);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
92	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf.length);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ",  buf.length);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
93	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf.length);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ",  buf.length);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ",  buf.length);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
94	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  _origBufferLen);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input   ",  _origBufferLen);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
95	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  _origBufferLen);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  _origBufferLen);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input   ",  _origBufferLen);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
96	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer.length  +  1;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  _inputBuffer.length  +  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBuffer.length  +  1;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  incompatible  types	53	None	replace
97	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  +  1;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf.length  +  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  +  1;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  incompatible  types	53	None	replace
98	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
99	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
100	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
101	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
102	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  1];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
103	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  1];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
104	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
105	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
106	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
107	[BUG]  [BUGGY]  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
108	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	non-compiled	[CE]  ')'  expected	29	None	replace
109	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputEnd  +  1];	  _inputBuffer    =    new    byte[_inputEnd];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
110	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputEnd  +  1];	  _inputBuffer    =    new    byte[_inputEnd];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
111	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputStart];  [CE]  cannot  find  symbol  _inputStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputStart];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputStart];	  _inputBuffer    =    new    byte[_inputEnd];    	non-compiled	[CE]  cannot  find  symbol  _inputStart	9	None	replace
112	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputEnd    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputEnd    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
114	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  <  =  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&  _inputEnd  <  =  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&  _inputEnd  <  =  0))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputEnd    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
115	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[size()  -  1];  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[size()  -  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[size()  -  1];	  _inputBuffer    =    new    byte[size()    ];    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  byte[_inputPtr  +  1];	  	compilable	  [FE]  AssertionFailedError  	6	1	add
117	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  1];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  byte[_inputPtr  +  1];	  	compilable	  [FE]  AssertionFailedError  	6	1	add
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  byte[_inputPtr  +  2];	  	compilable	  [FE]  AssertionFailedError  	6	1	add
119	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  2];  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  byte[_inputPtr  +  2];	  	compilable	  [FE]  AssertionFailedError  	6	1	add
120	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  1)];  [CE]  ']'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  byte[_inputPtr  +  1)];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  byte[_inputPtr  +  1)];	  	non-compiled	[CE]  ']'  expected	6	None	add
121	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start,  end  -  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  start,  end  -  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start,  end  -  1;	  _inputBuffer    =    buf,    start,    end;    	non-compiled	[CE]  ';'  expected	55	None	replace
122	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start,  end  +  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  start,  end  +  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start,  end  +  1;	  _inputBuffer    =    buf,    start,    end;    	non-compiled	[CE]  ';'  expected	55	None	replace
123	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start,  end  -  start;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  start,  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start,  end  -  start;	  _inputBuffer    =    buf,    start,    end;    	non-compiled	[CE]  ';'  expected	55	None	replace
124	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( "Current  context  not  an  instance  of   "+getClass());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Current    context    not    an    instance    of       "+getClass());    _reportError( "Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	41	1	add
125	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( "Current  context  not  an  instance  of   "+getClass());  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( "Current  context  not  an  instance  of   "+getClass());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Current    context    not    an    instance    of       "+getClass());    _reportError( "Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	41	1	add
126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[0];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[0];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
127	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[0];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[0];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[0];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
128	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[2];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
129	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[2];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[2];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
130	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[128];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[128];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	57	1	replace
131	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[128];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[128];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[128];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	57	1	replace
132	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputPtr  =  start;  _origBufferLen  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
133	[BUG]  [BUGGY]  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputPtr  =  start;  _origBufferLen  =  end  -  start;	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
134	[BUG]  [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
135	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(_inputPtr  >=  end)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(start  <  =  0)  {  if(_inputPtr  >=  end)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(start  <  =  0)  {  if(_inputPtr  >=  end)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
136	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
137	[BUG]  [BUGGY]  ||  end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||  end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||  end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
138	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputPtr    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
139	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputPtr    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
140	[BUG]  [BUGGY]  ||(_inputBuffer  ==  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer  ==  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer  ==  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&    _inputPtr    >    0))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
141	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    (_inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  ')'  expected	44	None	replace
142	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer.length;  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer.length;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer.length;  }	  _inputBuffer    =    _inputBuffer;    (_inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  ')'  expected	44	None	replace
143	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    _reportError( "Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	39	1	add
144	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    _reportError( "Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	39	1	add
145	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( "Current  context  not  an  instance  of   "+getClass().getReturnType());  [CE]  cannot  find  symbol  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( "Current  context  not  an  instance  of   "+getClass().getReturnType());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    _reportError( "Current  context  not  an  instance  of   "+getClass().getReturnType());	  	non-compiled	[CE]  cannot  find  symbol	39	None	add
146	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( "Too  few  inputs  available:  can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	37	1	add
147	[BUG]  [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( "Too  few  inputs  available:  can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	37	1	add
148	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( "Too  few  inputs  available:  can  not  feed  more  input.. ");	  	compilable	  [FE]  JsonParseException  	37	1	add
149	[BUG]  [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( "Too  few  inputs  available:  can  not  feed  more  input.. ");	  	compilable	  [FE]  JsonParseException  	37	1	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[start];    _inputBuffer  =  new  byte[start];	  	compilable	  [FE]  AssertionFailedError  	50	1	add
151	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[start];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    _inputBuffer  =  new  byte[start];	  	compilable	  [FE]  AssertionFailedError  	50	1	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[start];    _inputBuffer  =  new  byte[end];	  	compilable	  [FE]  AssertionFailedError  	50	1	add
153	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[end];  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    _inputBuffer  =  new  byte[end];	  	compilable	  [FE]  AssertionFailedError  	50	1	add
154	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Can    not    feed    more    input.   ");    _reportError( "Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	16	1	add
155	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( "Can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Can    not    feed    more    input.   ");    _reportError( "Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	16	1	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
157	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	24	1	add
159	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	24	1	add
160	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _input  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _input	  	non-compiled	[CE]  ')'  expected	24	None	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
162	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputEnd];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
163	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.length;  }  [CE]  incompatible  types  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.length;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.length;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer.;    	non-compiled	[CE]  incompatible  types	45	None	replace
164	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer.length;  _inputBuffer  =  _inputBuffer.length;  }  [CE]  incompatible  types  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer.length;  _inputBuffer  =  _inputBuffer.length;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer.length;  _inputBuffer  =  _inputBuffer.length;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer.;    	non-compiled	[CE]  incompatible  types	45	None	replace
165	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer.;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[buf.length];    _inputBuffer  =  new  byte[buf.length];	  	compilable	  [FE]  AssertionFailedError  	46	1	add
167	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    _inputBuffer  =  new  byte[buf.length];	  	compilable	  [FE]  AssertionFailedError  	46	1	add
168	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ||  buf.length  ==  _inputBuffer.length)  {  _inputBuffer  =  new  byte[buf.length];  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ||  buf.length  ==  _inputBuffer.length)  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ||  buf.length  ==  _inputBuffer.length)  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  System.arraycopy(buf,  0,  buf,  0,  buf.length);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[buf.length];    _inputBuffer  =  new  byte[buf.length];  System.arraycopy(buf,  0,  buf,  0,  buf.length);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
170	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  System.arraycopy(buf,  0,  buf,  0,  buf.length);  [FE]  AssertionFailedError  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  System.arraycopy(buf,  0,  buf,  0,  buf.length);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    _inputBuffer  =  new  byte[buf.length];  System.arraycopy(buf,  0,  buf,  0,  buf.length);	  	compilable	  [FE]  AssertionFailedError  	46	1	add
171	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  }  else  {  _inputBuffer  =  new  byte[buf.length];  [CE]  illegal  start  of  type  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  _inputBuffer  =  new  byte[buf.length];  }  else  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    _inputBuffer  =  new  byte[buf.length];  }  else  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  illegal  start  of  type	46	None	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	28	1	add
173	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	28	1	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	28	1	add
175	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	28	1	add
176	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _in  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _in  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _in	  	non-compiled	[CE]  ')'  expected	28	None	add
177	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn	  	non-compiled	[CE]  ')'  expected	28	None	add
178	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input	  	non-compiled	[CE]  ')'  expected	28	None	add
179	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length  +  1];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
180	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  1];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length  +  1];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
181	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  -  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length  -  1];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
182	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length  -  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  -  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length  -  1];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	47	1	replace
183	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length  *  2];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
184	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  2];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length  *  2];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[1];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
186	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[1];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[1];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[2];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
188	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[2];  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[2];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[0];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[0];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
190	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[0];  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[0];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[0];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[3];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[3];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
192	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[3];  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[1];  _inputBuffer  =  new  byte[3];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[1];    _inputBuffer  =  new  byte[3];	  	compilable	  [FE]  AssertionFailedError  	56	1	add
193	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&!_inputBuffer.isEmpty()))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
194	[BUG]  [BUGGY]  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&!_inputBuffer.isEmpty()))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
195	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  -  1L;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf.length  -  1L;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  -  1L;	  _inputBuffer    =    buf.length    -    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
196	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  -  2;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf.length  -  2;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  -  2;	  _inputBuffer    =    buf.length    -    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
197	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer.length  -  1;  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  _inputBuffer.length  -  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBuffer.length  -  1;	  _inputBuffer    =    _inputBuffer.length;    	non-compiled	[CE]  incompatible  types	11	None	replace
198	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Please  try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
199	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  try  again. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Please  try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
200	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  one. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  one. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
201	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  one. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  one. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  is  less  than  one. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
202	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
203	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
204	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  2];	  _inputBuffer    =    new    byte[_inputPtr    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
205	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  2];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  2];	  _inputBuffer    =    new    byte[_inputPtr    +    1];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
206	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  3];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  3];	  _inputBuffer    =    new    byte[_inputPtr    +    1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	7	1	replace
207	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  3];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  3];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  3];	  _inputBuffer    =    new    byte[_inputPtr    +    1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	7	1	replace
208	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input   ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
209	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input   ",  start);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input   ",  start);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	31	1	replace
210	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length++];  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length++];	  _inputBuffer    =    new    byte[_inputPtr++];    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	13	None	replace
211	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  of  the  input  does  not  exist. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  of  the  input  does  not  exist. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
212	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  of  the  input  does  not  exist. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Please  check  that  the  start  of  the  input  does  not  exist. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Please  check  that  the  start  of  the  input  does  not  exist. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
213	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
214	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
215	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _in  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _in  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _in	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	non-compiled	[CE]  ')'  expected	25	None	replace
216	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  -  1  +  1;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf.length  -  1  +  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  -  1  +  1;	  _inputBuffer    =    buf.length    -    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
217	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)&&  buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];  [CE]  ']'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)&&  buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]  <  _inputBuffer.length)&&  buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  ']'  expected	46	None	add
218	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)||(buf.length  >  _inputEnd))  {  _inputBuffer  =  new  byte[buf.length];  [CE]  ']'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)||(buf.length  >  _inputEnd))  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]  <  _inputBuffer.length)||(buf.length  >  _inputEnd))  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  ']'  expected	46	None	add
219	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)&&  buf[buf.length]!=  0))  {  _inputBuffer  =  new  byte[buf.length];  [CE]  ']'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]  <  _inputBuffer.length)&&  buf[buf.length]!=  0))  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]  <  _inputBuffer.length)&&  buf[buf.length]!=  0))  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  ']'  expected	46	None	add
220	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer));  _inputBuffer  =  new  byte[buf.length];  [CE]  ']'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer));  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]!=  _inputBuffer));  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  ']'  expected	46	None	add
221	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[size()  +  1];  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[size()  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[size()  +  1];	  _inputBuffer    =    new    byte[size()    ];    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
222	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
223	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
224	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
225	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
226	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
227	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
228	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
229	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	29	1	replace
230	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _input	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	non-compiled	[CE]  ')'  expected	29	None	replace
231	[BUG]  [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
232	[BUG]  [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_endOfInput)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	64	None	replace
233	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  	non-compiled	[CE]  incompatible  types	28	None	add
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	28	1	add
235	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	28	1	add
236	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _in  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _in  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _in	  	non-compiled	[CE]  ')'  expected	28	None	add
237	[BUG]  [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer.;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
238	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_input);  [CE]  cannot  find  symbol  _input  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_input);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_input);	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	non-compiled	[CE]  cannot  find  symbol  _input	60	None	replace
239	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
240	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  [CE]  incompatible  types  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
241	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _input  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  }  else  {  _input	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  ';'  expected	54	None	replace
242	[BUG]  [BUGGY]  Integer  _inputBuffer  =  _inputBuffer;  [CE]  variable  _inputBuffer  might  not  have  been  initialized  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  Integer  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	Integer  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    int    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  variable  _inputBuffer  might  not  have  been  initialized	43	None	replace
243	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  _inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start  +  _inputPtr];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
244	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start  +  _inputPtr];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  _inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start  +  _inputPtr];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
245	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  start  +  1];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
246	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start  +  1];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  start  +  1];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
247	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length  +  start];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
248	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  start];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length  +  start];	  _inputBuffer    =    new    byte[_inputPtr    +    start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	49	1	replace
249	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
250	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
251	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputPtr)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
252	[BUG]  [BUGGY]  if(_origBufferLen  >  start)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  start)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  start)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
253	[BUG]  [BUGGY]  _inputBuffer  =  end,  buf.toByteArray();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  end,  buf.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  end,  buf.toByteArray();	  _inputBuffer    =    buf,    end.toByteArray();    	non-compiled	[CE]  ';'  expected	67	None	replace
254	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
255	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
256	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
257	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
258	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[16];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[16];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	57	1	replace
259	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[16];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[16];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[16];	  _inputBuffer    =    new    byte[1];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	57	1	replace
260	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input ",  _endOfInput);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input ",  _endOfInput);	          _reportError(   "Can    not    feed    more    input       ");    	compilable	  [FE]  JsonParseException  	36	1	replace
261	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input ",  _endOfInput);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input ",  _endOfInput);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input ",  _endOfInput);	          _reportError(   "Can    not    feed    more    input       ");    	compilable	  [FE]  JsonParseException  	36	1	replace
262	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
263	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
264	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
265	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
266	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
267	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
268	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	non-compiled	[CE]  incompatible  types	24	None	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
270	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	24	1	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
272	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
274	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
276	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >  0)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
277	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputEnd].;  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  byte[_inputEnd].;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputEnd];    _inputBuffer  =  new  byte[_inputEnd].;	  	non-compiled	[CE]  <identifier>  expected	8	None	add
278	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputRowStart];  [CE]  cannot  find  symbol  _inputRowStart  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputRowStart];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputRowStart];	  _inputBuffer    =    new    byte[_inputBufferLen];    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	52	None	replace
279	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputLen];  [CE]  cannot  find  symbol  _inputLen  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputLen];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputLen];	  _inputBuffer    =    new    byte[_inputBufferLen];    	non-compiled	[CE]  cannot  find  symbol  _inputLen	52	None	replace
280	[BUG]  [BUGGY]  ||(_inputBuffer  ==  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  ||(_inputBuffer  ==  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	||(_inputBuffer  ==  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;	  _inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=    null    &&!_inputBuffer.isEmpty()))    {    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
281	[BUG]  [BUGGY]  if(end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  0)  {  if(_inputPtr  >=  start)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
282	[BUG]  [BUGGY]  if(end  <  0)  {  if(_inputPtr  >=  end)  {  return;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  0)  {  if(_inputPtr  >=  end)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  0)  {  if(_inputPtr  >=  end)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
283	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[end];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
284	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[end];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[end];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[end];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
285	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start  +  start];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
286	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start  +  start];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start  +  start];	  _inputBuffer    =    new    byte[start];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	51	1	replace
287	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Only  closed,  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  	19	1	replace
288	[BUG]  [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Only  closed,  can  not  feed  more  input ");	  _reportError(   "Already    closed,    can    not    feed    more    input   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  	19	1	replace
289	[BUG]  [BUGGY]  _inputBuffer  =  start  +  1L;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start  +  1L;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start  +  1L;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  incompatible  types	53	None	replace
290	[BUG]  [BUGGY]  _inputBuffer  =  start  +  2;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start  +  2;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start  +  2;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  incompatible  types	53	None	replace
291	[BUG]  [BUGGY]  _inputBuffer  =  start  +  4;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start  +  4;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start  +  4;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  incompatible  types	53	None	replace
292	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  if(_inputPtr  <  start)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
293	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd))  {  _inputBuffer  =  new  byte[_inputPtr++];  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd))  {  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||(_inputPtr  >=  _inputEnd))  {  _inputBuffer  =  new  byte[_inputPtr++];	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
294	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  null);  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  null);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  null);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
295	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  0))  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  0))  {  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    ||(_inputPtr  >=  _inputEnd)&&(_inputBuffer[_inputPtr++]!=  0))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
297	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
298	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [CE]  cannot  find  symbol  _inputLen  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputLen];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	non-compiled	[CE]  cannot  find  symbol  _inputLen	26	None	add
299	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes());    	non-compiled	[CE]  not  a  statement	32	None	replace
300	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  }	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes());    	non-compiled	[CE]  not  a  statement	32	None	replace
301	[BUG]  [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    (_inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  ')'  expected	44	None	replace
302	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBufferLen;  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBufferLen;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBufferLen;  }	  _inputBuffer    =    _inputBuffer;    (_inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  ')'  expected	44	None	replace
303	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  4];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length  *  4];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
304	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  4];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length  *  4];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length  *  4];	  _inputBuffer    =    new    byte[buf.length];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	47	1	replace
305	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  int  start  =  _inputBuffer.length;  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  int  start  =  _inputBuffer.length;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    int  start  =  _inputBuffer.length;	  	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	50	None	add
306	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
307	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
308	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
309	[BUG]  [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
310	[BUG]  [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBufferLen;  }  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBufferLen;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBufferLen;  }	  _inputBuffer    =    _inputBuffer;    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	2	None	replace
311	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];	  	non-compiled	[CE]  ')'  expected	48	None	add
312	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];  }  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    ((  _inputPtr  +  start])  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr  +  start];  }	  	non-compiled	[CE]  ')'  expected	48	None	add
313	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd));  _inputBuffer  =  new  byte[_inputPtr  +  start];  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  ((  _inputPtr  +  start])  >=  _inputEnd));  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    ((  _inputPtr  +  start])  >=  _inputEnd));  _inputBuffer  =  new  byte[_inputPtr  +  start];	  	non-compiled	[CE]  ')'  expected	48	None	add
314	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Can  not  feed  more  input. ");  }  [CE]  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Can  not  feed  more  input. ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  	15	None	replace
315	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  false)  {  _reportError( "Can  not  feed  more  input. ");  }  [CE]  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  false)  {  _reportError( "Can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input.  If(_endOfInput!=  false)  {  _reportError( "Can  not  feed  more  input. ");  }	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	non-compiled	[CE]  	15	None	replace
316	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  of  com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  instance  of   "+getClass().getName()  + ",  can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  instance  of   "+getClass().getName()  + ",  can  not  feed  more  input. ");	          _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  of  com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	40	1	replace
317	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of   "+getClass().getName()  + ",  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  of  com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  instance  of   "+getClass().getName()  + ",  can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  instance  of   "+getClass().getName()  + ",  can  not  feed  more  input. ");	          _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  of  com.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	40	1	replace
318	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes();    	non-compiled	[CE]  ')'  expected	33	None	replace
319	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  }	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes();    	non-compiled	[CE]  ')'  expected	33	None	replace
320	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes();  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr  +  1]).getBytes();	  _inputBuffer    =    new    byte[_inputPtr];    ((    _inputBuffer    =    new    byte[_inputPtr]).getBytes();    	non-compiled	[CE]  ')'  expected	33	None	replace
321	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Already  closed,  can  not  feed  more  input. ");  }  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Already  closed,  can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Already  closed,  can  not  feed  more  input. ");  }	          _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    	non-compiled	[CE]  	38	None	replace
322	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [CE]  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_endOfInput  ==  false)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }	          _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    	non-compiled	[CE]  	38	None	replace
323	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  ((  _inputPtr  +  1)  >=  _inputEnd));  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  ((  _inputPtr  +  1)  >=  _inputEnd));  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    1];    ((  _inputPtr  +  1)  >=  _inputEnd));	  	non-compiled	[CE]  not  a  statement	6	None	add
324	[BUG]  [BUGGY]  _inputBuffer  =  start,  end;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  start,  end;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start,  end;	  _inputBuffer    =    buf,    start,    end;    	non-compiled	[CE]  ';'  expected	55	None	replace
325	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  ')'  expected	1	None	add
326	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  [CE]  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =	  	non-compiled	[CE]  	1	None	add
327	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [CE]  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  	non-compiled	[CE]  	1	None	add
328	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
329	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
330	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  else  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  else  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
331	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  else  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  else  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  else  {  _origBufferLen  =  start  -(_inputEnd  -  _currInputRowStart);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	18	1	add
332	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  Byte[_inputPtr  +  1];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  _inputBuffer  =  new  Byte[_inputPtr  +  1];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    1];    _inputBuffer  =  new  Byte[_inputPtr  +  1];	  	non-compiled	[CE]  incompatible  types	6	None	add
333	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [CE]  incompatible  types  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  Byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    Byte[_inputPtr];    	non-compiled	[CE]  incompatible  types	54	None	replace
334	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
335	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  again. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Try  again. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
336	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
337	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Try  closing  the  JsonParser. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
338	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  following  line. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input.  Try  closing  the  following  line. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
339	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  following  line. ");  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Can  not  feed  more  input.  Try  closing  the  following  line. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input.  Try  closing  the  following  line. ");	  _reportError(   "Can    not    feed    more    input.   ");    	compilable	  [FE]  JsonParseException  	17	1	replace
340	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	non-compiled	[CE]  ')'  expected	29	None	replace
341	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	non-compiled	[CE]  ')'  expected	29	None	replace
342	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  bu  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  bu  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  bu	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    	non-compiled	[CE]  ')'  expected	29	None	replace
343	[BUG]  [BUGGY]  _inputBuffer  =  buffer.toByteArray();  [CE]  cannot  find  symbol  buffer  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buffer.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buffer.toByteArray();	  _inputBuffer    =    _inputBuffer.toByteArray();    	non-compiled	[CE]  cannot  find  symbol  buffer	10	None	replace
344	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( ",Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    _reportError( ",Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	39	1	add
345	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( ",Current  context  not  an  instance  of   "+getClass().getName());  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass().getName());  _reportError( ",Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    _reportError( ",Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	39	1	add
346	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( ",Can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Can    not    feed    more    input       ");    _reportError( ",Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	35	1	add
347	[BUG]  [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( ",Can  not  feed  more  input   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Can  not  feed  more  input     ");  _reportError( ",Can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Can    not    feed    more    input       ");    _reportError( ",Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	35	1	add
348	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
349	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
351	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
352	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
353	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer  ==  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
355	[BUG]  [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;  if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        _inputBuffer;        _inputBuffer    =    _inputBuffer;    if(_inputBuffer!=  null)  {  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
356	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  Byte[_inputPtr  +  start];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  _inputBuffer  =  new  Byte[_inputPtr  +  start];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr    +    start];    _inputBuffer  =  new  Byte[_inputPtr  +  start];	  	non-compiled	[CE]  incompatible  types	48	None	add
357	[BUG]  [BUGGY]  _inputBuffer  =  buf  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf  +  1;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf  +  1;	  _inputBuffer    =    start    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
358	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  ofcom.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  instance  of "+getClass().getName()  + ",  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  instance  of "+getClass().getName()  + ",  can  not  feed  more  input   ");	          _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  ofcom.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	40	1	replace
359	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  instance  of "+getClass().getName()  + ",  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  ofcom.fasterxml.jackson.core.json.async.NonBlockingJsonParser  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  instance  of "+getClass().getName()  + ",  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  instance  of "+getClass().getName()  + ",  can  not  feed  more  input   ");	          _reportError(   "Current    context    not    an    instance    of       "+getClass().getName());    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  instance  ofcom.fasterxml.jackson.core.json.async.NonBlockingJsonParser  	40	1	replace
360	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
361	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
362	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
363	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
364	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start,  end.toByteArray();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  start,  end.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start,  end.toByteArray();	  _inputBuffer    =    buf,    start.toByteArray();    	non-compiled	[CE]  ';'  expected	34	None	replace
365	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  null;  }  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  null;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  null;  }	  	non-compiled	[CE]  incompatible  types	12	None	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  buf[_inputPtr++];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  buf[_inputPtr++];  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
367	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  buf[_inputPtr++];  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  buf[_inputPtr++];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  buf[_inputPtr++];  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
369	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
370	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr++];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr++];  }  else  {  _inputBuffer[_inputPtr++]  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES	  	non-compiled	[CE]  ';'  expected	12	None	add
371	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  inputBuffer,  0,  _inputPtr);  [CE]  cannot  find  symbol  inputBuffer  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  inputBuffer,  0,  _inputPtr);	  	non-compiled	[CE]  cannot  find  symbol  inputBuffer	24	None	add
372	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  ARRAY  butfalse  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput  + ",  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_endOfInput  + ",  can  not  feed  more  input   ");	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  ARRAY  butfalse  	60	1	replace
373	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput  + ",  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  ARRAY  butfalse  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput  + ",  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_endOfInput  + ",  can  not  feed  more  input   ");	  _reportError(   "Current    context    not    an    ARRAY    but   "+_endOfInput);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Current  context  not  an  ARRAY  butfalse  	60	1	replace
374	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( ",Current  context  not  an  instance  of   "+getClass());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Current    context    not    an    instance    of       "+getClass());    _reportError( ",Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	41	1	add
375	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( ",Current  context  not  an  instance  of   "+getClass());  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Current  context  not  an  instance  of     "+getClass());  _reportError( ",Current  context  not  an  instance  of   "+getClass());  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Current    context    not    an    instance    of       "+getClass());    _reportError( ",Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	41	1	add
376	[BUG]  [BUGGY]  int  _inputBuffer  =  _inputBufferLen;  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  int  _inputBuffer  =  _inputBufferLen;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	int  _inputBuffer  =  _inputBufferLen;	  _inputBuffer    =    _inputBuffer;    int    _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	43	None	replace
377	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputInputBuffer,  0,  _inputPtr);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputInputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputInputBuffer,  0,  _inputPtr);	  	non-compiled	[CE]  incompatible  types	26	None	add
378	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  _inputBuffer[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  _inputBuffer[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	1	add
379	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  _inputBuffer[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  _inputBuffer[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  _inputBuffer[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	1	add
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  0;  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
381	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    _inputPtr  =  0;  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	26	1	add
382	[BUG]  [BUGGY]  _inputBuffer  =  buf,  end,  _icUTF8.toByteArray();  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf,  end,  _icUTF8.toByteArray();  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  end,  _icUTF8.toByteArray();	  _inputBuffer    =    buf,    end.toByteArray();    	non-compiled	[CE]  ';'  expected	67	None	replace
383	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
384	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
385	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
386	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  }  else  {  _inputBuffer  =  new  byte[_inputPtr];  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	23	1	replace
387	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
388	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
389	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
390	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
391	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
392	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
393	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( ",Too  few  inputs  available:  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( ",Too  few  inputs  available:  can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	37	1	add
394	[BUG]  [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( ",Too  few  inputs  available:  can  not  feed  more  input.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Too  few  inputs  available:  can  not  feed  more  input.   ");  _reportError( ",Too  few  inputs  available:  can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    _reportError( ",Too  few  inputs  available:  can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	37	1	add
395	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
396	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
397	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
398	[BUG]  [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Already  closed,  can  not  feed  more  input.   ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Already    closed,    can    not    feed    more    input.   ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input.   ");  }  else  {  _origBufferLen  =  start  -  (_inputEnd  -  _currInputRowStart);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	14	1	add
399	[BUG]  [BUGGY]  if(start  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(start  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(start  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
400	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
401	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
402	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
403	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
404	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
405	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[size()  /  2];  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[size()  /  2];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[size()  /  2];	  _inputBuffer    =    new    byte[size()    ];    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
406	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  end)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  end)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	replace
407	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  return;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  end)  {  return;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  end)  {  return;  }	          if(end    <    =    0)    {    if(_inputPtr    >=    start)    {    return;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	66	1	replace
408	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[startPtr++];  [CE]  cannot  find  symbol  startPtr  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[startPtr++];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[startPtr++];	  _inputBuffer    =    new    byte[_inputPtr++];    	non-compiled	[CE]  cannot  find  symbol  startPtr	13	None	replace
409	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  Byte[_inputEnd];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  _inputBuffer  =  new  Byte[_inputEnd];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputEnd];    _inputBuffer  =  new  Byte[_inputEnd];	  	non-compiled	[CE]  incompatible  types	8	None	add
410	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  start)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [CE]  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  start)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  start)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }	          _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    	non-compiled	[CE]  	38	None	replace
411	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  end)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [CE]  [FE]      JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  end)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input.  If(_inputPtr  >=  end)  {  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  }	          _reportError(   "Too    few    inputs    available:    can    not    feed    more    input.   ");    	non-compiled	[CE]  	38	None	replace
412	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];	  	non-compiled	[CE]  incompatible  types	22	None	add
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
414	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
415	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  buf);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  JsonParseException  	31	1	replace
416	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  buf);  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input. ",  buf);	          _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    	compilable	  [FE]  JsonParseException  	31	1	replace
417	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
418	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer.setLength(0);  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer.setLength(0);  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer.setLength(0);  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
419	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer  =  new  byte[start];  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer  =  new  byte[start];  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputBuffer  =  new  byte[start];  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
420	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[start];  if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[start];    if(start  <  =  0)  {  _inputBuffer  =  new  byte[start];  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
421	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( ",Can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError(   "Can    not    feed    more    input.   ");    _reportError( ",Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	16	1	add
422	[BUG]  [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( ",Can  not  feed  more  input.   ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError(   "Can  not  feed  more  input.   ");  _reportError( ",Can  not  feed  more  input.   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError(   "Can    not    feed    more    input.   ");    _reportError( ",Can  not  feed  more  input.   ");	  	compilable	  [FE]  JsonParseException  	16	1	add
423	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];  [CE]  ']'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  _inputBuffer  =  new  byte[buf.length];	  	non-compiled	[CE]  ']'  expected	46	None	add
424	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input  [CE]  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input	  	non-compiled	[CE]  	46	None	add
425	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input   ");  [CE]  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input   ");	  	non-compiled	[CE]  	46	None	add
426	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input. ");  [CE]  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  new  byte[buf.length];  ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[buf.length];    ((  byte[buf.length]!=  _inputBuffer)&&  buf.length  >  0)||(buf.length  >  0)||(buf.length  >  0))  {  reportError( "Already  closed,  can  not  feed  more  input. ");	  	non-compiled	[CE]  	46	None	add
427	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  -  start;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer  =  buf.length  -  start;  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  -  start;	  _inputBuffer    =    buf.length    -    1;    	non-compiled	[CE]  incompatible  types	20	None	replace
428	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
429	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(end  <  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
430	[BUG]  [BUGGY]  if(end  <  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
431	[BUG]  [BUGGY]  if(end  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  =  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
432	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
433	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _origBufferLen    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	64	1	replace
434	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  buf,  _inputPtr,  _inputEnd);	  	non-compiled	[CE]  incompatible  types	28	None	add
435	[BUG]  [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer        =        new        byte[_inputPtr];        _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(_inputBuffer,    0,    buf,    _inputPtr,    _inputEnd);    _inputPtr  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEn	  	non-compiled	[CE]  ')'  expected	28	None	add
436	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
437	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
438	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(buf!=  null)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    if(buf!=  null)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
439	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(buf!=  null)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  if(buf!=  null)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    if(buf!=  null)  {  _reportError( "Already  closed,  can  not  feed  more  input   ",  buf);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
440	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    _reportError( ",Already  closed,  can  not  feed  more  input   ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
441	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  buf);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input   ",  buf);  _reportError( ",Already  closed,  can  not  feed  more  input   ",  buf);  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input   ",    buf);    _reportError( ",Already  closed,  can  not  feed  more  input   ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	30	1	add
442	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
443	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  <  _inputEnd)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
444	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
445	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  0)  {  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  }	  _inputBuffer    =    new    byte[_inputPtr];    _inputBuffer    =    new    byte[_inputPtr];    System.arraycopy(buf,    0,    _inputBuffer,    0,    _inputPtr);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	1	replace
446	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Only  closed,  can  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  	15	1	replace
447	[BUG]  [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  _reportError( "Only  closed,  can  not  feed  more  input. ");  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Only  closed,  can  not  feed  more  input. ");	  _reportError(   "Already    closed,    can    not    feed    more    input.   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Only  closed  	15	1	replace
448	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
449	[BUG]  [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_origBufferLen  >  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
450	[BUG]  [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(end  <  =  0)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
451	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
452	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]      _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	if(_inputPtr  >=  _inputEnd)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  _inputBuffer    =    _inputBuffer;    if(_inputBuffer    <    _inputBuffer)    {    _inputBuffer    =    _inputBuffer;    }    else    {    _inputPtr    =    start;    _inputEnd    =    end    -    start;    _origBufferLen    =    end    -    start;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	62	1	replace
