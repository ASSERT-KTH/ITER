bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
2	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
3	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=  null  &&  _inputPtr  >  0))  {  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
4	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=  null  &&!_inputBuffer.isEmpty()))  {  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
5	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    ||(_inputBuffer!=  null  &&  _inputEnd  >  0))  {  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
6	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  1];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
7	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  1];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  1];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
8	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputEnd];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
9	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputEnd];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputEnd];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
10	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer.toByteArray();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer.toByteArray();  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBuffer.toByteArray();	  _inputBuffer    =    buf.toByteArray();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer.length;  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer.length;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBuffer.length;	  _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  incompatible  types	9	None	replace
12	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr++];	  _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
13	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr++];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr++];	  _inputBuffer    =    _inputBuffer;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	1	replace
14	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	replace
15	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	replace
16	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Can  not  feed  more  input. ");	      	compilable	  [FE]  JsonParseException  	6	1	replace
17	[BUG]  [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Can  not  feed  more  input. ");	      	compilable	  [FE]  JsonParseException  	6	1	replace
18	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Already  closed,  can  not  feed  more  input ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	replace
19	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Already  closed,  can  not  feed  more  input ");	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	6	1	replace
20	[BUG]  [BUGGY]  _inputBuffer  =  buf.length  -  1;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  buf.length  -  1;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf.length  -  1;	  _inputBuffer    =    buf.length;    	non-compiled	[CE]  incompatible  types	1	None	replace
21	[BUG]  [BUGGY]  _inputBuffer  =  _inputBufferLen;  [CE]  cannot  find  symbol  _inputBufferLen  [FE]        AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBufferLen;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  _inputBufferLen;	  _inputBuffer    =    start;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	7	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	2	1	add
23	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [FE]  AssertionFailedError  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];	  	compilable	  [FE]  AssertionFailedError  	2	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
25	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(buf,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
27	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
29	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [FE]  AssertionFailedError  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  byte[_inputPtr];  System.arraycopy(_inputBuffer,  0,  buf,  _inputPtr,  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	2	1	add
30	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  buf);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	        _reportError( "Already  closed,  can  not  feed  more  input ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	5	1	add
31	[BUG]  [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  buf);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input ",  buf);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        _reportError( "Already  closed,  can  not  feed  more  input ",  buf);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	5	1	add
32	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes());	  	non-compiled	[CE]  not  a  statement	2	None	add
33	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    ((  _inputBuffer  =  new  byte[_inputPtr]).getBytes();	  	non-compiled	[CE]  ')'  expected	2	None	add
34	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start.toByteArray();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  buf,  start.toByteArray();  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start.toByteArray();	  _inputBuffer    =    buf.toByteArray();    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Can  not  feed  more  input   ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	        _reportError( "Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	5	1	add
36	[BUG]  [BUGGY]      _reportError( "Can  not  feed  more  input   ");  [FE]  JsonParseException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Can  not  feed  more  input   ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        _reportError( "Can  not  feed  more  input   ");	  	compilable	  [FE]  JsonParseException  	5	1	add
37	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	        _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");	  	compilable	  [FE]  JsonParseException  	5	1	add
38	[BUG]  [BUGGY]      _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        _reportError( "Too  few  inputs  available:  can  not  feed  more  input. ");	  	compilable	  [FE]  JsonParseException  	5	1	add
39	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	        _reportError( "Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	5	1	add
40	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [FE]  JsonParseException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass().getName());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        _reportError( "Current  context  not  an  instance  of   "+getClass().getName());	  	compilable	  [FE]  JsonParseException  	5	1	add
41	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	        _reportError( "Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	5	1	add
42	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass());  [FE]  JsonParseException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      _reportError( "Current  context  not  an  instance  of   "+getClass());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        _reportError( "Current  context  not  an  instance  of   "+getClass());	  	compilable	  [FE]  JsonParseException  	5	1	add
43	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  int  _inputBuffer  =  _inputBuffer;  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  int  _inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    int  _inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  incompatible  types	8	None	add
44	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  [CE]  ')'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  (_inputBuffer  =  _inputBuffer;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    (_inputBuffer  =  _inputBuffer;	  	non-compiled	[CE]  ')'  expected	8	None	add
45	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  _inputBuffer  =  _inputBuffer.;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    _inputBuffer  =  _inputBuffer.;	  	non-compiled	[CE]  <identifier>  expected	8	None	add
46	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[buf.length];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[buf.length];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	3	1	replace
47	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[buf.length];  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[buf.length];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[buf.length];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ((CTRL-CHAR  	3	1	replace
48	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[_inputPtr  +  start];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
49	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr  +  start];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputPtr  +  start];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
50	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[start];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[start];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
51	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[start];  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[start];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[start];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
52	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputBufferLen];  [CE]  cannot  find  symbol  _inputBufferLen  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputBufferLen];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[_inputBufferLen];	  _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	9	None	replace
53	[BUG]  [BUGGY]  _inputBuffer  =  start  +  1;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  start  +  1;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  start  +  1;	  _inputBuffer    =    start;    	non-compiled	[CE]  incompatible  types	7	None	replace
54	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[_inputPtr];  _inputBuffer  =  new  Byte[_inputPtr];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    new    byte[_inputPtr];    _inputBuffer  =  new  Byte[_inputPtr];	  	non-compiled	[CE]  incompatible  types	2	None	add
55	[BUG]  [BUGGY]  _inputBuffer  =  buf,  start,  end;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  buf,  start,  end;  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  start,  end;	  _inputBuffer    =    buf.length;    	non-compiled	[CE]  ';'  expected	1	None	replace
56	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[1];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_inputBuffer  =  new  byte[1];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
57	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[1];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[1];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[1];	  _inputBuffer    =    new    byte[_inputPtr];    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
58	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+getMessage());  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+getMessage());	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
59	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_endOfInput);	      	compilable	  [FE]  JsonParseException  	6	1	replace
60	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput);  [FE]  JsonParseException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_endOfInput);  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_endOfInput);	      	compilable	  [FE]  JsonParseException  	6	1	replace
61	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	8	None	add
62	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _inputEnd  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	8	None	add
63	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	8	None	add
64	[BUG]  [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  _inputBuffer;  if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer    =    _inputBuffer;    if(_inputBuffer  <  _inputBuffer)  {  _inputBuffer  =  _inputBuffer;  }  else  {  _inputPtr  =  start;  _origBufferLen  =  end  -  start;  _origBufferLen  =  end  -  start;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	8	None	add
65	[BUG]  [BUGGY]  _inputBuffer  =  new  byte[size()  ];  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  new  byte[size()  ];  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  new  byte[size()  ];	  _inputBuffer    =    _inputBuffer;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
66	[BUG]  [BUGGY]      if(end  <  =  0)  {  if(_inputPtr  >=  start)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]      if(end  <  =  0)  {  if(_inputPtr  >=  start)  {  return;  }  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	        if(end  <  =  0)  {  if(_inputPtr  >=  start)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
67	[BUG]  [BUGGY]  _inputBuffer  =  buf,  end.toByteArray();  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);      [BUGGY]  _inputBuffer  =  buf,  end.toByteArray();  [BUGGY]    _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	108	108	1	replace	_inputBuffer  =  buf,  end.toByteArray();	  _inputBuffer    =    buf.toByteArray();    	non-compiled	[CE]  ';'  expected	4	None	replace
