bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
2	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _inputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
3	[BUG]  [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	90	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
5	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
6	[BUG]  [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
7	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
8	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
9	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
10	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
11	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
12	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
13	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
14	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
15	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
16	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
17	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
18	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
19	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]            com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
20	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]            com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
21	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
22	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
23	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
24	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
25	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	16	1	replace
27	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	16	1	replace
28	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
29	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
30	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    	non-compiled	[CE]  not  a  statement	68	None	replace
31	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    	non-compiled	[CE]  not  a  statement	68	None	replace
32	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	81	1	add
33	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	81	1	add
34	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	81	1	add
35	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	81	1	add
36	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  	81	1	add
37	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  	81	1	add
38	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	81	1	add
39	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	81	1	add
40	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  ==  _inputEnd);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  ==  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  ==  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
41	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  ==  _inputEnd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  ==  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  ==  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
42	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
43	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  >=  _inputEnd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  >=  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  >=  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
44	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	33	1	add
45	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	33	1	add
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
47	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
49	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
50	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
51	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
52	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
53	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
54	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
55	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
56	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
57	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
58	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
59	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
60	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
61	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
62	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
63	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
64	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
65	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
66	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
67	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  _currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  int  cannot  be  dereferenced  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	106	None	replace
69	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	106	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  _currInputProcessed  +=  start  +  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    2;    _currInputProcessed  +=  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	79	1	add
71	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  _currInputProcessed  +=  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  _currInputProcessed  +=  start  +  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    _currInputProcessed  +=  start  +  2;	  	compilable	  [FE]  AssertionFailedError  	79	1	add
72	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd));  _currInputProcessed  +=  start  +  2;  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd));  _currInputProcessed  +=  start  +  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd));  _currInputProcessed  +=  start  +  2;	  	non-compiled	[CE]  >  expected	79	None	add
73	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;	  	non-compiled	[CE]  >  expected	79	None	add
74	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer[start  +  2];  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer[start  +  2];  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer[start  +  2];	  	non-compiled	[CE]  >  expected	79	None	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  /  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  /  2;	  _currInputProcessed    +=    buf.length    -    2;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
76	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  /  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  /  2;	  _currInputProcessed    +=    buf.length    -    2;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  -  4;	  _currInputProcessed    +=    buf.length    -    2;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
78	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  -  4;	  _currInputProcessed    +=    buf.length    -    2;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputEnd;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  _inputEnd;	  _currInputProcessed    +=    _inputPtr;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
80	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputEnd;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputEnd;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputEnd;	  _currInputProcessed    +=    _inputPtr;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
81	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
82	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
83	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
84	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  _inputPtr)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	14	1	replace
86	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	14	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
88	[BUG]  [BUGGY]  _currInputProcessed  +=  end  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
90	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
91	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	94	1	replace
92	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	94	1	replace
93	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	94	None	replace
94	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	113	1	add
95	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	113	1	add
96	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  4  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  4);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  4);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  4  undecoded  bytes  	113	1	add
97	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  4);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  4  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  4);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  4);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  4  undecoded  bytes  	113	1	add
98	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  6  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  4);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  4);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  6  undecoded  bytes  	113	1	add
99	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  4);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  6  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  4);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  4);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  6  undecoded  bytes  	113	1	add
100	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  	113	1	add
101	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  1  undecoded  bytes  	113	1	add
102	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
103	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
104	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	60	None	replace
105	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	60	None	replace
106	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	60	None	replace
107	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	60	None	replace
108	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
109	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
110	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _inputProcessed  +  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
111	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
112	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
113	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
114	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
115	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
116	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
117	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
118	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
119	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	98	1	replace
120	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	98	1	replace
121	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	98	1	replace
122	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	98	1	replace
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  _currInputProcessed  +=  3;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    3;    _currInputProcessed  +=  3;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
124	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  _currInputProcessed  +=  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  _currInputProcessed  +=  3;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    _currInputProcessed  +=  3;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
125	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
126	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
127	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
128	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
129	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	11	1	add
130	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	11	1	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
132	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
134	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
135	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
136	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
137	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
138	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
139	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
140	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  +  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  +  2;	  _currInputProcessed    +=    start    +    2;    	compilable	  [FE]  AssertionFailedError  	80	1	replace
142	[BUG]  [BUGGY]  _currInputProcessed  +=  end  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  +  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  +  2;	  _currInputProcessed    +=    start    +    2;    	compilable	  [FE]  AssertionFailedError  	80	1	replace
143	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
144	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
146	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
147	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
148	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
149	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]      IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
150	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf,  end  -  _inputPtr);  [FE]  IllegalFormatConversionException  [FE]      IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
151	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
152	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
153	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
154	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
155	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
156	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
157	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  _currInputProcessed  +=  buf.length  -  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    2;    _currInputProcessed  +=  buf.length  -  2;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
158	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  _currInputProcessed  +=  buf.length  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  _currInputProcessed  +=  buf.length  -  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    _currInputProcessed  +=  buf.length  -  2;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
159	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
160	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
161	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    	non-compiled	[CE]  not  a  statement	71	None	replace
162	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    	non-compiled	[CE]  not  a  statement	71	None	replace
163	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    	non-compiled	[CE]  not  a  statement	71	None	replace
164	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _inputPtr);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	56	1	replace
165	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _inputPtr);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	56	1	replace
166	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _in  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _in  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _in	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _inputPtr);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
167	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	88	1	replace
168	[BUG]  [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	88	1	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  AssertionFailedError  	88	1	replace
170	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  AssertionFailedError  	88	1	replace
171	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  incomparable  types:  boolean  and  <null>  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  if(_endOfInput!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  incomparable  types:  boolean  and  <null>	104	None	replace
172	[BUG]  [BUGGY]  _currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  int  cannot  be  dereferenced  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  int  cannot  be  dereferenced	104	None	replace
173	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  unclosed  string  literal	6	None	replace
174	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	24	1	replace
175	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	24	1	replace
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
177	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;	  	compilable	  [FE]  AssertionFailedError  	54	1	add
178	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf,  length;  _currInputProcessed  +=  buf.length;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf,  length;  _currInputProcessed  +=  buf.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf,  length;  _currInputProcessed  +=  buf.length;	  	non-compiled	[CE]  ';'  expected	54	None	add
179	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	28	1	replace
180	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	28	1	replace
181	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	28	1	replace
182	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	28	1	replace
183	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _currInputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  4;  ((  _currInputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  4;  ((  _currInputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    4;    ((    _currInputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
184	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'	  _currInputProcessed    +=    4;    ((    _currInputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
185	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    ((    _currInputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	76	None	replace
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  _currInputProcessed  +=  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    2;    _currInputProcessed  +=  2;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
187	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  _currInputProcessed  +=  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  _currInputProcessed  +=  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    _currInputProcessed  +=  2;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
188	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
189	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
190	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
191	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
192	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  =  start  -(_inputEnd  -  _inputPtr);	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  AssertionFailedError  	116	1	replace
193	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  _inputPtr);	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  AssertionFailedError  	116	1	replace
194	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	22	1	replace
195	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  _inputEnd  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	22	1	replace
196	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
197	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
198	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputBufferLen);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputBufferLen);	  	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	23	None	add
199	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
200	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  end,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
201	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
202	[BUG]  [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  ((  _inputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
203	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  1;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    1;    ((    _inputProcessed    +    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
204	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
205	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
206	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
207	[BUG]  [BUGGY]  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
208	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	non-compiled	[CE]  	58	None	replace
209	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  >  expected	62	None	replace
210	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  >  expected	62	None	replace
211	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  start)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  start)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  start)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  >  expected	62	None	replace
212	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	96	1	replace
213	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  start);	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	96	1	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	114	1	replace
215	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	114	1	replace
216	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
217	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
218	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [CE]  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  	114	None	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  _currInputProcessed  +=  buf.length  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    1;    _currInputProcessed  +=  buf.length  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
220	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  _currInputProcessed  +=  buf.length  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  _currInputProcessed  +=  buf.length  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    _currInputProcessed  +=  buf.length  -  1;	  	compilable	  [FE]  AssertionFailedError  	39	1	add
221	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
222	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
223	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_endOfInput)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
225	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_endOfInput)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
227	[BUG]  [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
228	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
229	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
230	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
231	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
233	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  start;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
235	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  start;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
236	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(_inputProcessed  >  end)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(_inputProcessed  >  end)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(_inputProcessed  >  end)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	7	None	add
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
238	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
239	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	102	1	replace
240	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	102	1	replace
241	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	100	1	replace
242	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputPtr,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	100	1	replace
243	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
244	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
245	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
246	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
247	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
248	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(_currInputProcessed  ==  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  _currInputProcessed  +=  end;	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
250	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  _currInputProcessed  +=  end;	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
251	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
252	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	10	1	replace
254	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	10	1	replace
255	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	35	1	add
256	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	35	1	add
257	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	35	1	add
258	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	35	1	add
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
260	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
262	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
263	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
264	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
265	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
266	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
268	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
270	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
272	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  _currInputProcessed  +=  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  5;  _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
274	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  _currInputProcessed  +=  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  _currInputProcessed  +=  4;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  5;  _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  5;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
276	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  _currInputProcessed  +=  5;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  _currInputProcessed  +=  5;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	84	1	replace
278	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  AssertionFailedError  	84	1	replace
279	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	38	1	replace
280	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	38	1	replace
281	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
282	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
283	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	82	1	replace
284	[BUG]  [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	82	1	replace
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
286	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
287	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_inputEnd  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  1;  if(_inputEnd  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	82	1	replace
288	[BUG]  [BUGGY]  _currInputRowStart  +=  1;  if(_inputEnd  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_inputEnd  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  1;  if(_inputEnd  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	82	1	replace
289	[BUG]  [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  ')'  expected	82	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	101	1	add
291	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	101	1	add
292	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf.length);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf.length);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	101	1	add
293	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf.length);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf.length);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf.length);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	101	1	add
294	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf.length);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf.length);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	101	1	add
295	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf.length);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf.length);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  buf.length);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	101	1	add
296	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	101	1	add
297	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	101	1	add
298	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	30	1	replace
299	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  0  undecoded  bytes  	30	1	replace
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  end  -  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
301	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  end  -  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
302	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
303	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    ||  end  <  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
304	[BUG]  [BUGGY]  _inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	86	None	replace
305	[BUG]  [BUGGY]  _inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  1;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
306	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
307	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
309	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
310	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
311	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
313	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
314	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
315	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
316	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
317	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  start  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    1;    _currInputProcessed  +=  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	44	1	add
319	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  start  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    _currInputProcessed  +=  start  +  1;	  	compilable	  [FE]  AssertionFailedError  	44	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  end  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    1;    _currInputProcessed  +=  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	44	1	add
321	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  end  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  _currInputProcessed  +=  end  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    _currInputProcessed  +=  end  +  1;	  	compilable	  [FE]  AssertionFailedError  	44	1	add
322	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  int  start  =  _inputEnd  -  _inputPtr;  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  int  start  =  _inputEnd  -  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    int  start  =  _inputEnd  -  _inputPtr;	  	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	44	None	add
323	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  int  start  =  _inputEnd  -  _inputBuffer.length;  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  int  start  =  _inputEnd  -  _inputBuffer.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    int  start  =  _inputEnd  -  _inputBuffer.length;	  	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	44	None	add
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  AssertionFailedError  	120	1	replace
325	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  AssertionFailedError  	120	1	replace
326	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	non-compiled	[CE]  unclosed  string  literal	120	None	replace
327	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_endOfInput)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
328	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_endOfInput)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
329	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [CE]  unclosed  string  literal  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	non-compiled	[CE]  unclosed  string  literal	120	None	replace
330	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
331	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
332	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
333	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
334	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
335	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
336	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
337	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
338	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
339	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  AssertionFailedError  	12	1	replace
341	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(_currInputProcessed  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  AssertionFailedError  	12	1	replace
342	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
343	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
345	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
346	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
347	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
348	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _  [CE]  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _	  	non-compiled	[CE]  	9	None	add
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
350	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  _currInputProcessed  +=  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  2;  _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
352	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  _currInputProcessed  +=  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  _currInputProcessed  +=  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  2;  _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
353	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1);  _currInputProcessed  +=  1;  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1);  _currInputProcessed  +=  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  1);  _currInputProcessed  +=  1;	  	non-compiled	[CE]  ';'  expected	48	None	add
354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  2;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
355	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  _currInputProcessed  +=  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  _currInputProcessed  +=  2;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	118	1	replace
357	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	118	1	replace
358	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_endOfInput)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
359	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length;  _currInputProcessed  +=  start;	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
360	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  _currInputProcessed  +=  start;	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
361	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	65	None	replace
362	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)  >>  _inputEnd);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)  >>  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)  >>  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	65	None	replace
363	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
364	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
365	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
366	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
368	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
369	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
370	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
372	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
374	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
376	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
378	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  -  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start  -  end;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
380	[BUG]  [BUGGY]  _currInputProcessed  +=  start  -  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  -  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start  -  end;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  -  _inputPtr;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
382	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  _inputPtr;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  -  _inputPtr;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
383	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  -  1;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
384	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  -  1;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
385	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  -  start  +  1;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
386	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start  +  1;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  -  start  +  1;	  _currInputProcessed    +=    end    -    start;    	compilable	  [FE]  AssertionFailedError  	64	1	replace
387	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
388	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
389	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
390	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
391	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
392	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
393	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
394	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
395	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	26	1	replace
396	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	26	1	replace
397	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]      IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  IllegalFormatConversionException  	26	1	replace
398	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr  +  1);  [FE]  IllegalFormatConversionException  [FE]      IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  IllegalFormatConversionException  	26	1	replace
399	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]        IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  IllegalFormatConversionException  	26	1	replace
400	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  start);  [FE]  IllegalFormatConversionException  [FE]        IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  IllegalFormatConversionException  	26	1	replace
401	[BUG]  [BUGGY]  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
402	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    _inputEnd    -    _    	non-compiled	[CE]  	57	None	replace
403	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
404	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
405	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
406	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
407	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
408	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	109	1	add
409	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    ||    buf.length    ==    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
410	[BUG]  [BUGGY]  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    ==    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
411	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    buf.length;    ||    buf.length    ==    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    _inputEnd    -    _    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
412	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	99	1	add
413	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	99	1	add
414	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  =  end);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  =  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)  <  =  end);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
415	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  <  _inputEnd);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  <  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  1)  <  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  not  a  statement	67	None	replace
416	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
417	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	36	1	replace
418	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	36	1	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  _currInputProcessed  +=  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    _inputPtr;    _currInputProcessed  +=  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
420	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  _currInputProcessed  +=  _inputPtr;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  _currInputProcessed  +=  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    _currInputProcessed  +=  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
421	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
422	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
423	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _in  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _in  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _in	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
424	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    ||(_inputPtr  <  _inputEnd  &&  _origBufferLen  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
425	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
426	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
427	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
428	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
429	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
430	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	89	1	add
431	[BUG]  [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  start;  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	92	None	replace
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	107	1	add
433	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	107	1	add
434	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	107	1	add
435	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	107	1	add
436	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [CE]  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' "	  	non-compiled	[CE]  	107	None	add
437	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  unclosed  string  literal	107	None	add
438	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
439	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
440	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
441	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
442	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
443	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
444	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	87	1	add
445	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	87	1	add
446	[BUG]  [BUGGY]  _currInputProcessed  +=  start.length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start.length  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start.length  -  1;	  _currInputProcessed    +=    start.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
447	[BUG]  [BUGGY]  _currInputProcessed  +=  start.length  -  2;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start.length  -  2;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start.length  -  2;	  _currInputProcessed    +=    start.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
448	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	85	1	add
449	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	85	1	add
450	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	85	1	add
451	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	85	1	add
452	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	85	1	add
453	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start  +  1);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	85	1	add
454	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
455	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
456	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
457	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
458	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
459	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
460	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
461	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf  ==  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
462	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]            com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
463	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]            com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputPtr);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
464	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
465	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
466	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
467	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
468	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  4;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
469	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
470	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  1;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
471	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  -2  undecoded  bytes  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  start);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  -2  undecoded  bytes  	58	1	replace
472	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  -2  undecoded  bytes  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputEnd  -  start);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  -2  undecoded  bytes  	58	1	replace
473	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	113	None	add
474	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	113	1	add
475	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	113	1	add
476	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	113	1	add
477	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	113	1	add
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
479	[BUG]  [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
481	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(end  <  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(end  <  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
483	[BUG]  [BUGGY]  if(end  <  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(end  <  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(end  <  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
484	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	85	None	add
485	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	85	1	add
486	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	85	1	add
487	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	85	1	add
488	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	85	1	add
489	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	28	1	replace
490	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	28	1	replace
491	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	28	1	replace
492	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	28	1	replace
493	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  >>  illegal  start  of  expression  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  >>  illegal  start  of  expression  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  >>  illegal  start  of  expression	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  unclosed  string  literal	53	None	replace
494	[BUG]  [BUGGY]  _currInputProcessed  +=  end.length;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end.length;	  _currInputProcessed    +=    start.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
495	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
496	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
497	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
498	[BUG]  [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
499	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
500	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
501	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
502	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	37	1	add
503	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	37	1	add
504	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	81	1	add
505	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	81	1	add
506	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	81	1	add
507	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	81	1	add
508	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	81	1	add
509	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	81	1	add
510	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
511	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
512	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
513	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
514	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_origBufferLen  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_origBufferLen  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
515	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_origBufferLen  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_origBufferLen  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_origBufferLen  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
516	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
517	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	36	None	replace
518	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _inputProcessed  +  _inputPtr)  ==  _inputEnd);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _inputProcessed  +  _inputPtr)  ==  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _inputProcessed  +  _inputPtr)  ==  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
519	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  ==  _inputEnd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  ==  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  ==  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    ==    _inputEnd);    	non-compiled	[CE]  not  a  statement	66	None	replace
520	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    4;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput    	non-compiled	[CE]  unclosed  string  literal	5	None	replace
521	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	107	1	add
522	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	107	1	add
523	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  buf.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  _currInputProcessed  +=  buf.length;	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
524	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  buf.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  buf.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  _currInputProcessed  +=  buf.length;	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
525	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
526	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
527	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	98	1	replace
528	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	98	1	replace
529	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	91	None	add
530	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
531	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
532	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
533	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
534	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
535	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
536	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
537	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	non-compiled	[CE]  not  a  statement	39	None	add
538	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ((  _currInputProcessed  +=  buf.length  -  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	non-compiled	[CE]  not  a  statement	39	None	add
539	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    ((  _currInputProcessed  +=  buf.length  -  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	non-compiled	[CE]  not  a  statement	39	None	add
540	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  ((  _inputProcessed  +=  _inputPtr);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  ((  _inputProcessed  +=  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    ((  _inputProcessed  +=  _inputPtr);	  	non-compiled	[CE]  ')'  expected	46	None	add
541	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _currInputProcessed  =  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    _inputPtr;    int  _currInputProcessed  =  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
542	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _currInputProcessed  =  _inputPtr;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _currInputProcessed  =  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    int  _currInputProcessed  =  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _inputProcessed  =  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    _inputPtr;    int  _inputProcessed  =  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
544	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _inputProcessed  =  _inputPtr;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  int  _inputProcessed  =  _inputPtr;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    int  _inputProcessed  =  _inputPtr;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
545	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	77	None	replace
546	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	108	1	replace
547	[BUG]  [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	108	1	replace
548	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	108	1	replace
549	[BUG]  [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	108	1	replace
550	[BUG]  [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  buf.length;  if(buf.length!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
551	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	non-compiled	[CE]  not  a  statement	44	None	add
552	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	non-compiled	[CE]  not  a  statement	44	None	add
553	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    ((  _inputProcessed  +  start  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	44	None	add
554	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
555	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  unde	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
556	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %  [CE]  unclosed  string  literal  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	118	None	replace
557	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	118	1	replace
558	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	118	1	replace
559	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  >  expected	19	None	add
560	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  >  expected	19	None	add
561	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	19	None	add
562	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  =  end;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  =  end;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
563	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  =  end;  _currInputProcessed  +=  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  _currInputProcessed  =  end;  _currInputProcessed  +=  end;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    _currInputProcessed  =  end;  _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
564	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	109	None	add
565	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	60	None	replace
566	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  incomparable  types:  long  and  <null>  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	non-compiled	[CE]  incomparable  types:  long  and  <null>	105	None	add
567	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
568	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
569	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
570	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
571	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  incomparable  types:  long  and  <null>  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  incomparable  types:  long  and  <null>	103	None	add
572	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
573	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
574	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	101	1	add
575	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	101	1	add
576	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	101	1	add
577	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	101	1	add
578	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	101	1	add
579	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	101	1	add
580	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
581	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
582	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  ((  _currInputProcessed  +=  end  -  start);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  ((  _currInputProcessed  +=  end  -  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    ((  _currInputProcessed  +=  end  -  start);	  	non-compiled	[CE]  ')'  expected	63	None	add
583	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  ((  _currInputProcessed  +=  end)-  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  ((  _currInputProcessed  +=  end)-  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    ((  _currInputProcessed  +=  end)-  start;	  	non-compiled	[CE]  ')'  expected	63	None	add
584	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
585	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
586	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
587	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
588	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  	non-compiled	[CE]  unclosed  string  literal	1	None	add
589	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  	non-compiled	[CE]  unclosed  string  literal	1	None	add
590	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
591	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
592	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	9	None	add
593	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
594	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_origBufferLen  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
595	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
596	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
597	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  >  expected	62	None	replace
598	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  (_currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  (_currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  (_currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  >  expected	62	None	replace
599	[BUG]  [BUGGY]  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
600	[BUG]  [BUGGY]  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
601	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
602	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
603	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	75	None	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start  -  1;	  _currInputProcessed    +=    buf.length    -    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
605	[BUG]  [BUGGY]  _currInputProcessed  +=  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  -  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start  -  1;	  _currInputProcessed    +=    buf.length    -    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1L;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  -  1L;	  _currInputProcessed    +=    buf.length    -    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
607	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1L;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1L;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  -  1L;	  _currInputProcessed    +=    buf.length    -    1;    	compilable	  [FE]  AssertionFailedError  	40	1	replace
608	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
609	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
610	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
611	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'.   ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
612	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
613	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
614	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
615	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  }	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
616	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
617	[BUG]  [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
618	[BUG]  [BUGGY]  _currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  cannot  find  symbol  _currInputRowLen  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _currInputRowLen	16	None	replace
619	[BUG]  [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
620	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	non-compiled	[CE]  unclosed  string  literal	116	None	replace
621	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  {  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
622	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  1;  ((  _inputPtr  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	72	None	replace
623	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    ((  _currInputProcessed  +=  start  +  2)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  >  expected	79	None	add
624	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  ((  _currInputProcessed  +=  start  +  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    ((  _currInputProcessed  +=  start  +  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	79	None	add
625	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	24	1	replace
626	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	24	1	replace
627	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  >=  _inputEnd);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  >=  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  >=  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	65	None	replace
628	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	15	None	add
629	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
630	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
631	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
632	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    start;    if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	96	None	replace
633	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	106	1	replace
634	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	106	1	replace
635	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    1;    ((    _inputProcessed    +    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
637	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
638	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
639	[BUG]  [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
640	[BUG]  [BUGGY]  _currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  cannot  find  symbol  _currInputRowLen  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowLen  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _currInputRowLen	12	None	replace
641	[BUG]  [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  +=  start;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	12	None	replace
642	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
643	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
644	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  	non-compiled	[CE]  unclosed  string  literal	48	None	add
645	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_currInputProcessed!=  0)  {  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  	non-compiled	[CE]  unclosed  string  literal	48	None	add
646	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	92	None	replace
647	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
648	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
649	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +    end)>    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
650	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
651	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(start  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
652	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  start  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  start  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
653	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  start  -  _inputPtr);  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  start  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  start  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
654	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  <  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(start  <  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
655	[BUG]  [BUGGY]  if(start  <  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  <  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(start  <  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  >  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(start  >  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
657	[BUG]  [BUGGY]  if(start  >  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  >  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(start  >  _inputEnd)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
658	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  <  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(start  <  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
659	[BUG]  [BUGGY]  if(start  <  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(start  <  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(start  <  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
660	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	non-compiled	[CE]  not  a  statement	42	None	add
661	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	42	None	add
662	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    ((  _currInputProcessed  +=  buf.length  -  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	non-compiled	[CE]  not  a  statement	42	None	add
663	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_currInputProcessed!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [CE]  incomparable  types:  long  and  <null>  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_currInputProcessed!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(_currInputProcessed!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	non-compiled	[CE]  incomparable  types:  long  and  <null>	54	None	add
664	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
665	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
666	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	54	1	add
667	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	54	1	add
668	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
669	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	111	None	add
670	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	17	None	add
671	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ((  _currInputProcessed  +=  2)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	17	None	add
672	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    ((  _currInputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	17	None	add
673	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	89	None	add
674	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
675	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
676	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;  ((  _inputProcessed  +=  2)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  not  a  statement	78	None	replace
677	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	30	1	replace
678	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	30	1	replace
679	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	30	1	replace
680	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	30	1	replace
681	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
682	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
683	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
684	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
685	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
686	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
687	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  '	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	114	None	replace
688	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	114	1	replace
689	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	114	1	replace
690	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
691	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
692	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    4;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed!=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
693	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
694	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
695	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
696	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
697	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
698	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
699	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
700	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]          com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	117	1	add
701	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
702	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	27	1	add
703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  _inputPtr  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
704	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr  +  1;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr  +  1;	  _currInputProcessed    +=    start    +    1;    	compilable	  [FE]  AssertionFailedError  	45	1	replace
705	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
706	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
707	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  	non-compiled	[CE]  unclosed  string  literal	89	None	add
708	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
709	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	105	1	add
710	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	110	1	replace
711	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	110	1	replace
712	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
713	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
714	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
715	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
716	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
717	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	103	1	add
718	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >=    _inputEnd))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
719	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
720	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
721	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  AssertionFailedError  	82	1	replace
722	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
723	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  0)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
725	[BUG]  [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  }	  _currInputProcessed    +=    start;    _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
726	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	112	1	replace
727	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    4;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	112	1	replace
728	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)>  _inputEnd);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)>  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)>  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    >=    _inputEnd);    	non-compiled	[CE]  not  a  statement	65	None	replace
729	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_inputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(_inputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(_inputProcessed  >  0)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	54	None	add
730	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
731	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        _currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
732	[BUG]  [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call	  _currInputProcessed    +=    4;    ||(_inputPtr    <    _inputEnd    &&    _currInputProcessed    >    0))    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedIn    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
733	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
734	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
736	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
737	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
738	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	87	1	add
739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
740	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ");  }	  	compilable	  [FE]  AssertionFailedError  	87	1	add
741	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
742	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	13	1	add
743	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	99	1	add
744	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  must  not  call  'feedInput'   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	99	1	add
745	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	78	None	replace
746	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  0)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  0)  {  _currInputProcessed  +=  4;  _inputProcessed  +=  4;  }	  _currInputProcessed    +=    4;    ((    _inputProcessed    +=    4)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	78	None	replace
747	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	26	1	replace
748	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  -  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	26	1	replace
749	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	116	1	replace
750	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	116	1	replace
751	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	116	1	replace
752	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	116	1	replace
753	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  ';'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  ';'  expected	104	None	replace
754	[BUG]  [BUGGY]  if(_currInputProcessed!=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed!=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed!=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	104	None	replace
755	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputPtr  -  _  [CE]  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputPtr  -  _  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  _inputPtr  -  _	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _    	non-compiled	[CE]  	58	None	replace
756	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    2;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
757	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
758	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    2;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
759	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  2;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    2;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
760	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
761	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	21	1	add
762	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
763	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
764	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
765	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	120	1	replace
766	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
767	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	15	1	add
768	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
769	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
770	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	98	1	replace
771	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  +  1);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  +  1);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end  +  1);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	98	1	replace
772	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  start,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  bytes  	98	1	replace
773	[BUG]  [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  start,  end);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  bytes  	98	1	replace
774	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
775	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
776	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
777	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
778	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
779	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ");    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    %d    undecoded    bytes  	119	1	add
780	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
781	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	29	1	add
782	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
783	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	84	None	replace
784	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   "  [CE]  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   "  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   "	  	non-compiled	[CE]  	35	None	add
785	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    1;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	44	1	add
786	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	44	1	add
787	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    1;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	44	1	add
788	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  1;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    1;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	44	1	add
789	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
790	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	9	1	add
791	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
792	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
793	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
794	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    1;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	86	None	replace
795	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ((    _inputProcessed    +    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	74	None	replace
796	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
797	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
798	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
799	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
800	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
801	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  end);  }	  	compilable	  [FE]  AssertionFailedError  	81	1	add
802	[BUG]  [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  _inputEnd);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  ((  _currInputProcessed  +=  buf.length)  <  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	((  _currInputProcessed  +=  buf.length)  <  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  not  a  statement	67	None	replace
803	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  <  =  _inputEnd);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  <  =  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputPtr)  <  =  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
804	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  <  =  _inputEnd);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  <  =  _inputEnd);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +  _inputEnd)  <  =  _inputEnd);	  _currInputProcessed    +=    buf.length;    ((    _currInputProcessed    +=    buf.length)    <    =    _inputEnd);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
805	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
806	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
808	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
809	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
810	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	83	1	add
811	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
812	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    0)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	83	1	add
813	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	11	1	add
814	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	11	1	add
815	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_inputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_inputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_inputProcessed  >  0)  {  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	1	None	add
816	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
817	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
818	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	1	1	add
819	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    _currInputProcessed  +=  4;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        _currInputProcessed    +=    4;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	1	1	add
820	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  >=  _inputEnd);  _currInputProcessed  +=  3;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  >=  _inputEnd);  _currInputProcessed  +=  3;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  >=  _inputEnd);  _currInputProcessed  +=  3;	  	non-compiled	[CE]  not  a  statement	19	None	add
821	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd));  _currInputProcessed  +=  3;  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd));  _currInputProcessed  +=  3;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  <  <  _inputEnd));  _currInputProcessed  +=  3;	  	non-compiled	[CE]  >  expected	19	None	add
822	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length;	  	non-compiled	[CE]  >  expected	19	None	add
823	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length);  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  3;  ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    3;    ((  _currInputProcessed  +=  3)  <  <  _inputEnd)?  _inputPtr  :  _inputBuffer.length);	  	non-compiled	[CE]  >  expected	19	None	add
824	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	109	1	add
825	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	109	1	add
826	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	109	1	add
827	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	109	1	add
828	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  	non-compiled	[CE]  unclosed  string  literal	109	None	add
829	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
830	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
831	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
832	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	95	1	add
833	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
834	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
835	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
836	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
837	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
838	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	113	1	add
839	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	91	1	add
840	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	91	1	add
841	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	91	1	add
842	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	91	1	add
843	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
844	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	91	1	add
845	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start;  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start;  ((  _inputPtr  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
846	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _currInputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	70	None	replace
847	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
848	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	23	1	add
849	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
850	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.. ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
851	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  decoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  decoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
852	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  decoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  _reportError( "Still  have  %d  decoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    end);    _reportError( "Still  have  %d  decoded  bytes,  should  not  call  'feedInput'.   ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	97	1	add
853	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  (_inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    	non-compiled	[CE]  not  a  statement	68	None	replace
854	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	79	1	add
855	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	79	1	add
856	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	79	1	add
857	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	79	1	add
858	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	79	1	add
859	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  start  +  2;  if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start    +    2;    if(_currInputProcessed  >  start  +  2)  {  _currInputProcessed  +=  start  +  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	79	1	add
860	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	118	1	replace
861	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	118	1	replace
862	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  bytes  	24	1	replace
863	[BUG]  [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  bytes,  should  not  call  'feedInput'. ",  end,  _inputPtr);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start,    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  bytes  	24	1	replace
864	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	non-compiled	[CE]  ';'  expected	101	None	add
865	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length	  	non-compiled	[CE]  ';'  expected	101	None	add
866	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length  >=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length  >=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length  >=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	non-compiled	[CE]  ';'  expected	101	None	add
867	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }	  	compilable	  [FE]  AssertionFailedError  	101	1	add
868	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }	  	compilable	  [FE]  AssertionFailedError  	101	1	add
869	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	39	1	add
870	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	39	1	add
871	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	39	1	add
872	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	39	1	add
873	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	39	1	add
874	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    1;    if(buf.length  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	39	1	add
875	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	33	1	add
876	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	33	1	add
877	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
878	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
879	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
880	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
881	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
882	[BUG]  [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  buf,  end  -  _inputPtr);  [FE]  IllegalFormatConversionException  [FE]    IllegalFormatConversionException    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]          _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  buf,  end  -  _inputPtr);  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  buf,  end  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	                _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    buf,    end    -    _inputPtr);    _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput', ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	25	1	add
883	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	92	None	replace
884	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
885	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
886	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	85	1	add
887	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	85	1	add
888	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
889	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	85	1	add
890	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
891	[BUG]  [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	10	1	replace
892	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
893	[BUG]  [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  start)  {  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    if(_currInputProcessed    >    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
894	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
895	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  1)  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    end;    ((    _currInputProcessed    +=    end)    <    <    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	62	None	replace
896	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
897	[BUG]  [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	16	1	replace
898	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr.length;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr.length;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr.length;	  _currInputProcessed    +=    start.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
899	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
900	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
901	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
902	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
903	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
904	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    _currInputProcessed  +=  end;  if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        _currInputProcessed    +=    end;    if(end  <  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
905	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
906	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
907	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
908	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	93	1	add
909	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]        com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.   ",  start);  }  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed!=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  	non-compiled	[CE]  unclosed  string  literal	93	None	add
910	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end,  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	100	1	replace
911	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end,  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end,  start);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  end,  start);	          _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  3  undecoded  bytes  	100	1	replace
912	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
913	[BUG]  [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_inputPtr  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  _currInputProcessed    +=    end;    if(_currInputProcessed!=    end)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'       ",    start);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	12	1	replace
914	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
915	[BUG]  [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        4;        if(_currInputProcessed    ==    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start);    }    if(_inputPtr  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	111	1	add
916	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    ((    _inputProcessed    +    start)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	69	None	replace
917	[BUG]  [BUGGY]  if(end  >  0)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(end  >  0)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(end  >  0)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	non-compiled	[CE]  ';'  expected	102	None	replace
918	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  AssertionFailedError  	102	1	replace
919	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  AssertionFailedError  	102	1	replace
920	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  AssertionFailedError  	102	1	replace
921	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    if(buf.length!=    _currInputProcessed)    {    _currInputProcessed    +=    buf.length;    }    	compilable	  [FE]  AssertionFailedError  	102	1	replace
922	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
923	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	37	1	add
924	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
925	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
926	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
927	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
928	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
929	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length    -    2;    if(buf.length  >  0)  {  _currInputProcessed  +=  buf.length  -  2;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	42	1	add
930	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  start;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    start;    if(_currInputProcessed    >    start)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  unclosed  string  literal	38	None	replace
931	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputEnd  -  _inputPtr);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	56	1	replace
932	[BUG]  [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputEnd  -  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputEnd  -  _inputPtr);  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputEnd  -  _inputPtr);	  _currInputProcessed    +=    buf.length;    ||    buf.length    <    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    _inputEnd    -    _inputPtr);    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	56	1	replace
933	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
934	[BUG]  [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start,  end);  }  if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        end;        if(_currInputProcessed!=    end)    {    _currInputProcessed    +=    end;    }    else    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ",    start,    end);    }    if(end  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still    have    2    undecoded    bytes  	115	1	add
935	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [CE]  unclosed  string  literal  [FE]    com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  end)  {  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'.	  _currInputProcessed    +=    buf.length;    if(buf!=    null)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'.   ",    start);    }    	non-compiled	[CE]  unclosed  string  literal	106	None	replace
936	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _inputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  _inputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    _inputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	107	None	add
937	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	107	1	add
938	[BUG]  [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ");  }  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        buf.length;        if(buf.length!=    _currInputProcessed)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	107	1	add
939	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end  -  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end    -    start;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
940	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end  -  start;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end  -  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
941	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start  -  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
942	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  _currInputProcessed  +=  start  -  start;  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    _currInputProcessed  +=  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	63	1	add
943	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0.0)  {  _currInputProcessed  +=  end  -  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end    -    start;    if(_currInputProcessed  >  0.0)  {  _currInputProcessed  +=  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
944	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0.0)  {  _currInputProcessed  +=  end  -  start;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  end  -  start;  if(_currInputProcessed  >  0.0)  {  _currInputProcessed  +=  end  -  start;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end    -    start;    if(_currInputProcessed  >  0.0)  {  _currInputProcessed  +=  end  -  start;  }	  	compilable	  [FE]  AssertionFailedError  	63	1	add
945	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	46	None	add
946	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _currInputProcessed  +=  _inputPtr;  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _currInputProcessed  +=  _inputPtr;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    if(_inputProcessed  >=  _inputPtr)  {  _currInputProcessed  +=  _inputPtr;  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	46	None	add
947	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  cannot  find  symbol  _inputProcessed  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed  +=  _inputPtr;  if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    _inputPtr;    if(_inputProcessed  >=  _inputPtr)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  cannot  find  symbol  _inputProcessed	46	None	add
948	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
949	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
950	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
951	[BUG]  [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    start;    _currInputProcessed  +=  start;  if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        start;        _currInputProcessed    +=    start;    if(_inputPtr  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
952	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
953	[BUG]  [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >  start)  {  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  }	  _currInputProcessed    +=    buf.length;    _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	55	1	replace
954	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_inputPtr  >=  _inputEnd)  {  _currInputProcessed  +=  1;  (_currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  _currInputProcessed    +=    1;    ((    _currInputProcessed    +=    1)    >=    _inputEnd)    {    _reportError(   "Still    have    %d    undecoded    bytes,    should    not    call    'feedInput'   ");    }    	non-compiled	[CE]  not  a  statement	73	None	replace
955	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
956	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
958	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
959	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
960	[BUG]  [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  _currInputProcessed    +=    1;    _currInputProcessed  +=  1;  if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed        +=        1;        _currInputProcessed    +=    1;    if(_inputPtr  >  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
961	[BUG]  [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'     ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }        [BUGGY]  if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed  [BUGGY]        _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	if(_currInputProcessed  >  0)  {  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feed	  _currInputProcessed    +=    end;    _currInputProcessed    +=    end;    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
