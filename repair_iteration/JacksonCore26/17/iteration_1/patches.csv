bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    4;    _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
2	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  _currInputProcessed  +=  4;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    _currInputProcessed  +=  4;	  	compilable	  [FE]  AssertionFailedError  	11	1	add
3	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
4	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
5	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
6	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
8	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  _currInputProcessed  +=  end;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    _currInputProcessed  +=  end;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
10	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
12	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
14	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed  >  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
16	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  2;	  _currInputProcessed    +=    4;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
18	[BUG]  [BUGGY]  _currInputProcessed  +=  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  2;	  _currInputProcessed    +=    4;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  3;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  3;	  _currInputProcessed    +=    4;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
20	[BUG]  [BUGGY]  _currInputProcessed  +=  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  3;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  3;	  _currInputProcessed    +=    4;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
21	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
22	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	9	1	add
23	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputPtr);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
24	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputPtr);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputPtr);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  _inputPtr);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
25	[BUG]  [BUGGY]  [FE]  IllegalFormatConversionException  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	9	1	add
26	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [FE]  IllegalFormatConversionException  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  buf,  end  -  _inputPtr);	  	compilable	  [FE]  IllegalFormatConversionException  	9	1	add
27	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
28	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
29	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
30	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
32	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  _currInputProcessed  +=  start;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    _currInputProcessed  +=  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
34	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
36	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
38	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed  >  start)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  -  1;	  _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
40	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length  -  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  -  1;	  _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
41	[BUG]  [BUGGY]  _currInputProcessed  +=  start.length;  [CE]  int  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start.length;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start.length;	  _currInputProcessed    +=    buf.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	4	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  buf.length  -  2;	  _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
43	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length  -  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  buf.length  -  2;	  _currInputProcessed    +=    buf.length;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start  +  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start  +  1;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
45	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start  +  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start  +  1;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  _inputPtr;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  _inputPtr;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
47	[BUG]  [BUGGY]  _currInputProcessed  +=  _inputPtr;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  _inputPtr;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  _inputPtr;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    1;    _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
49	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  _currInputProcessed  +=  1;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    _currInputProcessed  +=  1;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
50	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
51	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >  0))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
52	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed  >=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
53	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ||(_inputPtr  <  _inputEnd  &&  _currInputProcessed!=  _inputEnd))  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedIn	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
55	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  _currInputProcessed  +=  buf.length;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    _currInputProcessed  +=  buf.length;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
56	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _inputPtr);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
57	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
58	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ||  buf.length  <  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
59	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ||  buf.length  ==  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  _inputEnd  -  _	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
60	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	5	None	add
61	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    ((  _currInputProcessed  +  end)>  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	5	None	add
62	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    ((  _currInputProcessed  +=  end)  <  <  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  >  expected	5	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end  -  start;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  end  -  start;	  _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
64	[BUG]  [BUGGY]  _currInputProcessed  +=  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end  -  start;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  end  -  start;	  _currInputProcessed    +=    end;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
65	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ((  _currInputProcessed  +=  buf.length)  >=  _inputEnd);	  	non-compiled	[CE]  not  a  statement	3	None	add
66	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  ==  _inputEnd);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  ==  _inputEnd);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ((  _currInputProcessed  +=  buf.length)  ==  _inputEnd);	  	non-compiled	[CE]  not  a  statement	3	None	add
67	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    ((  _currInputProcessed  +=  buf.length)  <  =  _inputEnd);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
68	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");	  	non-compiled	[CE]  not  a  statement	1	None	add
69	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	1	None	add
70	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    ((  _currInputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	1	None	add
71	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    ((  _inputProcessed  +  start)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);	  	non-compiled	[CE]  not  a  statement	1	None	add
72	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	7	None	add
73	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ((  _currInputProcessed  +=  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	7	None	add
74	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ((  _inputProcessed  +  1)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	7	None	add
75	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    ((  _currInputProcessed  +=  1)  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	7	None	add
76	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _currInputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ((  _currInputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ((  _currInputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	11	None	add
77	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	non-compiled	[CE]  not  a  statement	11	None	add
78	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    ((  _inputProcessed  +=  4)  >=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  start);  }	  	non-compiled	[CE]  not  a  statement	11	None	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start  +  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed  +=  start  +  2;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
80	[BUG]  [BUGGY]  _currInputProcessed  +=  start  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start  +  2;  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed  +=  start  +  2;	  _currInputProcessed    +=    start;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
82	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
84	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
86	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
88	[BUG]  [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  1;  if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    1;    if(_currInputProcessed  ==  0)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
90	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
92	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
93	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
94	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
95	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
96	[BUG]  [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  start;  if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    start;    if(_currInputProcessed!=  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	1	1	add
97	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
98	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
99	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
100	[BUG]  [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]      _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	        _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	9	1	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
102	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _currInputProcessed  +=  buf.length;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
103	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	3	1	add
104	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	3	1	add
105	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	3	1	add
106	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    if(buf!=  null)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	3	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
108	[BUG]  [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  buf.length;  if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    buf.length;    if(buf.length!=  _currInputProcessed)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
110	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
112	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start);  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
114	[BUG]  [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  4;  if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    4;    if(_currInputProcessed  ==  _inputEnd)  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  AssertionFailedError  	11	1	add
115	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	5	1	add
116	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ",  start,  end);  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  2  undecoded  bytes  	5	1	add
117	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	5	1	add
118	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput' ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	5	1	add
119	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	add	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	5	1	add
120	[BUG]  [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'   ",  _inputEnd  -  _inputPtr);  }  if  (end  <  start)  {  _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }      [BUGGY]  _currInputProcessed  +=  end;  if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }  [BUGGY]      _currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	102	102	1	replace	_currInputProcessed    +=    end;    if(_currInputProcessed!=  end)  {  _currInputProcessed  +=  end;  }  else  {  _reportError( "Still  have  %d  undecoded  bytes,  should  not  call  'feedInput'. ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Still  have  %d  undecoded  bytes  	5	1	add
