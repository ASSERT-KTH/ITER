bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)||(_minorState!=  MINOR_ROOT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	add	if((  ch  ==  0xEF)||(_minorState!=  MINOR_ROOT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
2	[BUG]  [BUGGY]  if((  ch  ==  0xEF)||(_minorState!=  MINOR_ROOT_BOM))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)||(_minorState!=  MINOR_ROOT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xEF)||(_minorState!=  MINOR_ROOT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
3	[BUG]  [BUGGY]  if((  ch  ==  INT_BOM)&&(_minorState!=  MINOR_ROOT_BOM))  {  [CE]  cannot  find  symbol  INT_BOM  [FE]      AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  INT_BOM)&&(_minorState!=  MINOR_ROOT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  INT_BOM)&&(_minorState!=  MINOR_ROOT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	non-compiled	[CE]  cannot  find  symbol  INT_BOM	65	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  MINOR_ROOT_BOM)||(ch  ==  INT_CR))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	add	if((  ch  ==  0xEF)&&(_minorState!=  MINOR_ROOT_BOM)||(ch  ==  INT_CR))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
5	[BUG]  [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  MINOR_ROOT_BOM)||(ch  ==  INT_CR))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  MINOR_ROOT_BOM)||(ch  ==  INT_CR))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xEF)&&(_minorState!=  MINOR_ROOT_BOM)||(ch  ==  INT_CR))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]    [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	  	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	non-compiled	[CE]  illegal  start  of  type	65	None	replace
7	[BUG]  [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOM))  {  [CE]  cannot  find  symbol  INT_BOM  [FE]    AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xEF)&&(_minorState!=  INT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	non-compiled	[CE]  cannot  find  symbol  INT_BOM	65	None	replace
8	[BUG]  [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOM))  {  [CE]  cannot  find  symbol  INT_BOOM  [FE]      AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	non-compiled	[CE]  cannot  find  symbol  INT_BOOM	65	None	replace
9	[BUG]  [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOLEAN))  {  [CE]  cannot  find  symbol  INT_BOOLEAN  [FE]        AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOLEAN))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xEF)&&(_minorState!=  INT_BOOLEAN))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	non-compiled	[CE]  cannot  find  symbol  INT_BOOLEAN	65	None	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xFF)&&(_minorState!=  MINOR_ROOT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	add	if((  ch  ==  0xFF)&&(_minorState!=  MINOR_ROOT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
11	[BUG]  [BUGGY]  if((  ch  ==  0xFF)&&(_minorState!=  MINOR_ROOT_BOM))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  {  ch  &=  0xFF;    [BUGGY]  if((  ch  ==  0xFF)&&(_minorState!=  MINOR_ROOT_BOM))  {  [BUGGY]  return  _finishBOM(1);  }  while  (ch  <=  0x020)  {  if  (ch  !=  INT_SPACE)  {  if  (ch  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (ch  ==  INT_CR)  {  [CLASS]  NonBlockingJsonParser  [METHOD]  _startDocument  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  c  ch  end  len  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	425	425	1	replace	if((  ch  ==  0xFF)&&(_minorState!=  MINOR_ROOT_BOM))  {	if  ((ch  ==  0xEF)  &&  (_minorState  !=  MINOR_ROOT_BOM))  {  	compilable	  [FE]  AssertionFailedError  	65	1	replace
