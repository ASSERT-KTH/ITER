bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTES)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTES)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
2	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTES)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTES)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTES)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTES)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTES)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
4	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE  ||  ch  >  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    >    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
5	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    >    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
6	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch!=  INT_QUOTE)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch!=  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  ||  ch!=  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    >    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
7	[BUG]  [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_QUOTE)  {	  if(ch    ==    INT_NOT_FOUND)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
8	[BUG]  [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_WS)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_WS)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_WS)  {	  if(ch    ==    INT_NOT_FOUND)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
9	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_NULL)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
10	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	22	None	replace
11	[BUG]  [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	||  ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	22	None	replace
13	[BUG]  [BUGGY]  if(ch  ==  0)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  0)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  0)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	22	None	replace
14	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch!=  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch!=  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
15	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	10	None	replace
16	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_STRING)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  ch  ==  JsonToken.VALUE_STRING)  {	  if(ch    ==    JsonToken.VALUE_STRING    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	34	None	replace
17	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_STRING  &&  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_STRING  &&  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_STRING  &&  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_STRING    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	34	None	replace
18	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r')  {	  if(ch    ==    'n'    ||    ch    ==    'r')    {    	non-compiled	[CE]  orphaned  case	5	None	replace
20	[BUG]  [BUGGY]  if(ch  ==  '@'  ||  ch  ==  '@')  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '@'  ||  ch  ==  '@')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '@'  ||  ch  ==  '@')  {	  if(ch    ==    'n'    ||    ch    ==    'r')    {    	non-compiled	[CE]  orphaned  case	5	None	replace
21	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE)  {  return  _startNegativeNumber();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  INT_QUOTE)  {  return  _startNegativeNumber();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  INT_QUOTE)  {  return  _startNegativeNumber();  }	  if(ch    ==    INT_QUOTE)    {    return    _startNegativeNumber();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }	  if(ch    ==    INT_QUOTE)    {    return    _startNegativeNumber();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  '#')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  '#')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  '#')  {	  if(ch    ==    'n'    ||    ch    ==    '#')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
24	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n')  {	  if(ch    ==    'n'    ||    ch    ==    '#')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
25	[BUG]  [BUGGY]  if(ch  ==  '-'  ||  ch  ==  '+')  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '-'  ||  ch  ==  '+')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '-'  ||  ch  ==  '+')  {	  if(ch    ==    'n'    ||    ch    ==    '#')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
26	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  =='<  ')  {  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  =='<  ')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  =='<  ')  {	  if(ch    ==    '#')    {    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
27	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  '+')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  '+')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  '+')  {	  if(ch    ==    '#')    {    	non-compiled	[CE]  orphaned  case	3	None	replace
28	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.START_OBJECT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.START_OBJECT)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
29	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.END_OBJECT)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.END_OBJECT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.END_OBJECT)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
30	[BUG]  [BUGGY]  if(ch  ==  JsonToken.START_OBJECT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.START_OBJECT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.START_OBJECT  ||  ch  ==  JsonToken.VALUE_NULL)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
31	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	23	None	replace
32	[BUG]  [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  't'  ||  ch  ==  'n')  {	  if(ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	23	None	replace
33	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	14	None	replace
34	[BUG]  [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	||  ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _finishString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  ||  ch  ==  INT_QUOTE)  {  return  _finishString();  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	||  ch  ==  INT_QUOTE)  {  return  _finishString();	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  case  '[':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '[':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '[':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);	  case    '[':    return    _finishComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	21	None	replace
37	[BUG]  [BUGGY]  case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);	  case    '[':    return    _finishComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	21	None	replace
38	[BUG]  [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
40	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	12	None	replace
41	[BUG]  [BUGGY]  if(ch  <  =  0)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  0)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  0)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTES)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
43	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
44	[BUG]  [BUGGY]  if(ch  >=  INT_QUOTES)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  >=  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  >=  INT_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
45	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
46	[BUG]  [BUGGY]  if(ch  ==  INT_VALUE_LEADING_WS  ||  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_VALUE_LEADING_WS  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_VALUE_LEADING_WS  ||  ch  ==  INT_QUOTE)  {	  if(ch!=    INT_QUOTE    ||    ch    ==    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
47	[BUG]  [BUGGY]  if(ch  >=  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  >=  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  >=  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {	  if(ch!=    INT_QUOTE    ||    ch    ==    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
48	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
49	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
51	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  INT_QUOTE)  {	  if(ch    ==    INT_PLUS)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
52	[BUG]  [BUGGY]  if(ch  >=  INT_QUOTE)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  >=  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  >=  INT_QUOTE)  {	  if(ch    ==    INT_PLUS)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
53	[BUG]  [BUGGY]  if(ch  <  0  ||  ch  >  MINOR_VALUE_LEADING_ZEROS)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  0  ||  ch  >  MINOR_VALUE_LEADING_ZEROS)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  0  ||  ch  >  MINOR_VALUE_LEADING_ZEROS)  {	  if(ch    <    0)    {    	non-compiled	[CE]  orphaned  case	16	None	replace
54	[BUG]  [BUGGY]  case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '[':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '[':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	20	None	replace
55	[BUG]  [BUGGY]  if(ch  ==  '@'  ||  ch  ==  '#')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '@'  ||  ch  ==  '#')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '@'  ||  ch  ==  '#')  {	  if(ch    ==    '@')    {    	non-compiled	[CE]  orphaned  case	25	None	replace
56	[BUG]  [BUGGY]  if(ch  ==  '@'  ||  ch  ==  ':')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '@'  ||  ch  ==  ':')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '@'  ||  ch  ==  ':')  {	  if(ch    ==    '@')    {    	non-compiled	[CE]  orphaned  case	25	None	replace
57	[BUG]  [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	27	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	27	None	replace
59	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE)  {  return  _startValue();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  INT_QUOTE)  {  return  _startValue();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  INT_QUOTE)  {  return  _startValue();  }	  if(ch    ==    INT_QUOTE)    {    return    _startValue();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
60	[BUG]  [BUGGY]  case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_WS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
61	[BUG]  [BUGGY]  case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _finishSlashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
62	[BUG]  [BUGGY]  case  '#':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _finishComment(MINOR_VALUE_LEADING_ZEROS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
63	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
64	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  <  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
65	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch  >=  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
66	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_STRING  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_STRING  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_STRING  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
67	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FLOAT)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
68	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
69	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FUNCTION)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FUNCTION)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_FUNCTION)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
70	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishNegativeNumber();  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishNegativeNumber();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  return  _finishNegativeNumber();  }	  if(ch    ==    INT_QUOTE)    {    return    _startNegativeNumber();    }    	non-compiled	[CE]  orphaned  case	30	None	replace
71	[BUG]  [BUGGY]  if(ch  <  =  0)  {  return  _startNegativeNumber();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  =  0)  {  return  _startNegativeNumber();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  =  0)  {  return  _startNegativeNumber();  }	  if(ch    ==    INT_QUOTE)    {    return    _startNegativeNumber();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
72	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_ARRAY)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_ARRAY)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_ARRAY)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
73	[BUG]  [BUGGY]  case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
74	[BUG]  [BUGGY]  case  '#':  return  _finishNumberComment(MINOR_VALUE_LEADING_WS);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _finishNumberComment(MINOR_VALUE_LEADING_WS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _finishNumberComment(MINOR_VALUE_LEADING_WS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
75	[BUG]  [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_ZEROS)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_ZEROS)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_VALUE_LEADING_ZEROS)  {	  if(ch    ==    INT_NOT_FOUND)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
76	[BUG]  [BUGGY]  if(ch  ==  '#'  ||  ch  =='{  ')  {  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  '#'  ||  ch  =='{  ')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  '#'  ||  ch  =='{  ')  {	  if(ch    ==    'n'    ||    ch    ==    '#')    {    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
77	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
78	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
79	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE)  {  return  _startString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	12	None	replace
80	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.END_ARRAY)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.END_ARRAY)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.END_ARRAY)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
81	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	22	None	replace
82	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE)  {  return  _startNegativeNumber();  }	  if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	22	None	replace
83	[BUG]  [BUGGY]  case  '[':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '[':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '[':  return  _finishHashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '[':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	20	None	replace
84	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE)  {  return  _finishString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	14	None	replace
85	[BUG]  [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  'n')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  'n')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  't'  ||  ch  ==  'n'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  'n')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	27	None	replace
86	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
87	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  if(ch!=  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
88	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE  &&  ch  ==  INT_QUOTES)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE  &&  ch  ==  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE  &&  ch  ==  INT_QUOTES)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
89	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTES  ||  ch  ==  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    ==    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	29	None	replace
90	[BUG]  [BUGGY]  if(ch  ==  INT_SINGLE_QUOTES)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_SINGLE_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_SINGLE_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
91	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishValue();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _finishValue();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  return  _finishValue();  }	  if(ch    ==    INT_QUOTE)    {    return    _startValue();    }    	non-compiled	[CE]  orphaned  case	31	None	replace
92	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	15	None	replace
93	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  <  =  INT_QUOTE)  {  return  _finishString();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE)  {  if(ch  <  =  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE)  {  if(ch  <  =  INT_QUOTE)  {  return  _finishString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
94	[BUG]  [BUGGY]  case  '[':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '[':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '[':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '[':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	20	None	replace
95	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    ==    INT_QUOTE)    {    if(ch    <    =    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	13	None	replace
96	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NULL)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NULL)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  orphaned  case	32	None	replace
97	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE)  {  return  _finishString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	14	None	replace
98	[BUG]  [BUGGY]  if(ch  <  INT_QUOTES)  {  return  _finishString();  }  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTES)  {  return  _finishString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTES)  {  return  _finishString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _finishString();    }    	non-compiled	[CE]  orphaned  case	14	None	replace
99	[BUG]  [BUGGY]  if(ch!=  INT_QUOTE  &&  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTE  &&  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTE  &&  ch  ==  INT_QUOTE)  {	  if(ch!=    INT_QUOTE    ||    ch    ==    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
100	[BUG]  [BUGGY]  if(ch  <  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTES)  {  if(ch  ==  INT_QUOTE)  {  return  _startString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	12	None	replace
101	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  return  _startString();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE)  {  return  _startString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE)  {  return  _startString();  }	  if(ch    <    =    INT_QUOTE)    {    if(ch    ==    INT_QUOTE)    {    return    _startString();    }    	non-compiled	[CE]  orphaned  case	12	None	replace
102	[BUG]  [BUGGY]  if(ch!=  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTES  ||  ch  ==  INT_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  orphaned  case	26	None	replace
103	[BUG]  [BUGGY]  if(ch!=  INT_QUOTES  &&  ch  <  =  INT_QUOTES)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  INT_QUOTES  &&  ch  <  =  INT_QUOTES)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  INT_QUOTES  &&  ch  <  =  INT_QUOTES)  {	  if(ch!=    INT_QUOTES)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
104	[BUG]  [BUGGY]  case  '#':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  case  '#':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	case  '#':  return  _startSlashComment(MINOR_VALUE_LEADING_ZEROS);	  case    '#':    return    _finishHashComment(MINOR_VALUE_LEADING_WS);    	non-compiled	[CE]  orphaned  case	19	None	replace
105	[BUG]  [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _endString();  }  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_QUOTE)  {  return  _endString();  }  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_QUOTE)  {  return  _endString();  }	  if(ch    ==    INT_QUOTE)    {    return    _startValue();    }    	non-compiled	[CE]  orphaned  case	31	None	replace
106	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_OBJECT)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_OBJECT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.START_OBJECT)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.START_OBJECT)    {    	non-compiled	[CE]  orphaned  case	24	None	replace
107	[BUG]  [BUGGY]  if(ch  ==  'n'  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  'n'  ||  ch  ==  'n'  ||  ch  ==  'r')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  'n'  ||  ch  ==  'n'  ||  ch  ==  'r')  {	  if(ch    ==    'n'    ||    ch    ==    '#')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
108	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NULL)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_NULL)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_NULL)    {    	non-compiled	[CE]  orphaned  case	11	None	replace
109	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_STRING)  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_STRING)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NUMBER_INT  ||  ch  ==  JsonToken.VALUE_STRING)  {	  if(ch    ==    JsonToken.VALUE_NUMBER_INT    ||    ch    ==    JsonToken.VALUE_STRING)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
110	[BUG]  [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch!=  JsonToken.VALUE_NULL  ||  ch  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(ch    ==    JsonToken.VALUE_NULL    ||    ch    ==    JsonToken.VALUE_NUMBER_FLOAT)    {    	non-compiled	[CE]  orphaned  case	33	None	replace
111	[BUG]  [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_PLUS  ||  ch  ==  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_PLUS  ||  ch  ==  INT_QUOTE)  {	  if(ch    ==    INT_PLUS)    {    	non-compiled	[CE]  orphaned  case	18	None	replace
112	[BUG]  [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_START_TOKEN)  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_START_TOKEN)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  INT_NOT_FOUND  ||  ch  ==  INT_START_TOKEN)  {	  if(ch    ==    INT_NOT_FOUND)    {    	non-compiled	[CE]  orphaned  case	17	None	replace
113	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  <  INT_QUOTE)  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  <  INT_QUOTE)  {	  if(ch    ==    INT_QUOTE    ||    ch    >    INT_QUOTE)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
114	[BUG]  [BUGGY]  if(ch  ==  'n'  ||  ch  ==  't'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      ch  =  _skipWS(ch);  if  (ch  <=  0)  {  _minorState  =  MINOR_VALUE_LEADING_WS;  return  _currToken;  }  }  _updateTokenLocation();  if  (ch  ==  INT_QUOTE)  {  return  _startString();  }      [BUGGY]  if(ch  ==  'n'  ||  ch  ==  't'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {  [BUGGY]      case  '#':  return  _finishHashComment(MINOR_VALUE_LEADING_WS);  case  '-':  return  _startNegativeNumber();  case  '/':  //  c/c++  comments  return  _startSlashComment(MINOR_VALUE_LEADING_WS);      [CLASS]  NonBlockingJsonParser  [METHOD]  _startValue  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  avail  bytesHandled  c  ch  end  len  parserFeatures  ptr  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	607	607	1	replace	if(ch  ==  'n'  ||  ch  ==  't'  ||  ch  ==  'r'  ||  ch  ==  'n'  ||  ch  ==  't')  {	  if(ch    ==    'n'    ||    ch    ==    'r'    ||    ch    ==    'n'    ||    ch    ==    't')    {    	non-compiled	[CE]  orphaned  case	27	None	replace
