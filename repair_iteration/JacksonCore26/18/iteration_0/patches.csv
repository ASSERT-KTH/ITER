bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
2	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
4	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -  start;	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
6	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  start;	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]    [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	  	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
8	[BUG]  [BUGGY]    [FE]  AssertionFailedError  [FE]          AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]    [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	  	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputEnd  -  start);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
10	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputEnd  -  start);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
12	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  end,  start);  }  if  (_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input ");  }  _currInputProcessed  +=  _origBufferLen;    [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]    _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputRowStart);	_currInputRowStart  =  start  -  (_inputEnd  -  _currInputRowStart);  	compilable	  [FE]  AssertionFailedError  	35	1	replace
