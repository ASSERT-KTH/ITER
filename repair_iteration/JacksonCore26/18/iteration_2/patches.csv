bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	44	1	add
2	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	44	1	add
3	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStar  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStar  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStar	  	non-compiled	[CE]  ')'  expected	44	None	add
4	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart	  	non-compiled	[CE]  ')'  expected	44	None	add
5	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_currInputPtr  -  _currInputRowStart);  [CE]  cannot  find  symbol  _currInputPtr  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_currInputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_currInputPtr  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	79	None	replace
6	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_currInputProcessed  -  _currInputRowStart);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_currInputProcessed  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_currInputProcessed  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  possible  loss  of  precision	79	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  end;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  end;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
8	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  end;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  end;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  end;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  start  +  1;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
10	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start  +  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start  +  1;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  1;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
12	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  1;	  _currInputRowStart    =    end    -    start;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start  -  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
14	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  -  _inputEnd;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start  -  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  int  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    _inputEnd;    int  _currInputRowStart  =  start  -  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
16	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  int  _currInputRowStart  =  start  -  _inputEnd;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  int  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    _inputEnd;    int  _currInputRowStart  =  start  -  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
17	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  -  _inputEnd);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start  -  _inputEnd);	  	non-compiled	[CE]  ';'  expected	19	None	add
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  +  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start  +  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
19	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  +  _inputEnd;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start  +  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start  +  _inputEnd;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end  -(end  -  start  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
21	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end  -(end  -  start  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  start  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  start  -(end  -  start  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
23	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  start  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  start  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  start  -(end  -  start  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
24	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  -  start  +  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  -  start  +  1));  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end  -(end  -  start  +  1));	  	non-compiled	[CE]  ';'  expected	64	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  (start  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  (start  -  start);	  _currInputRowStart    =    _currInputEnd    -    (end    -    start);    	compilable	  [FE]  AssertionFailedError  	89	1	replace
26	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  (start  -  start);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  (start  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  (start  -  start);	  _currInputRowStart    =    _currInputEnd    -    (end    -    start);    	compilable	  [FE]  AssertionFailedError  	89	1	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -(end  -  start);	  _currInputRowStart    =    start    -(end    -    end);    	compilable	  [FE]  AssertionFailedError  	37	1	replace
28	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(end  -  start);	  _currInputRowStart    =    start    -(end    -    end);    	compilable	  [FE]  AssertionFailedError  	37	1	replace
29	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_reportError( "Already  closed,  can  not  feed  more  input. ");	          _reportError(   "Already    closed,    can    not    feed    more    input       ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	12	1	replace
30	[BUG]  [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _reportError( "Already  closed,  can  not  feed  more  input. ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_reportError( "Already  closed,  can  not  feed  more  input. ");	          _reportError(   "Already    closed,    can    not    feed    more    input       ");    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	12	1	replace
31	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError(   "Already  closed,  can  not  feed  more  input   ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    _reportError(   "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
32	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError(   "Already  closed,  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError(   "Already  closed,  can  not  feed  more  input   ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    _reportError(   "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
33	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError( "Aready  closed,  can  not  feed  more  input   ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    _reportError( "Aready  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
34	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError( "Aready  closed,  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]      com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  _reportError( "Aready  closed,  can  not  feed  more  input   ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    _reportError( "Aready  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _inputPtr);    _currInputRowStart  =  start  -  (end  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	60	1	add
36	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _inputPtr);    _currInputRowStart  =  start  -  (end  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	60	1	add
37	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  -  (end  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  -  (end  -  _inputBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _inputPtr);    _currInputRowStart  =  start  -  (end  -  _inputBufferLen);	  	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	60	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  +  (end  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _inputPtr);    _currInputRowStart  =  start  +  (end  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	60	1	add
39	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  +  (end  -  _inputPtr);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  _currInputRowStart  =  start  +  (end  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _inputPtr);    _currInputRowStart  =  start  +  (end  -  _inputPtr);	  	compilable	  [FE]  AssertionFailedError  	60	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
41	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
42	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
43	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
44	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    int  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	68	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
46	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	68	1	add
47	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputPtr  -  _currInputRowStart);  [CE]  long  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed.length  -  (_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	51	None	replace
48	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _origBufferLen);  [CE]  long  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _origBufferLen);	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	51	None	replace
49	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _endOfInput);  [CE]  long  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _endOfInput);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _endOfInput);	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	51	None	replace
50	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  _currInputProcessed;  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  _currInputProcessed;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  _currInputProcessed;	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  possible  loss  of  precision	51	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
52	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
54	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
55	[BUG]  [BUGGY]  _currInputRowStart  =  _endOfInput  -(_inputPtr  -  _currInputRowStart);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _endOfInput  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _endOfInput  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	16	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(buf.length  -  start);	  _currInputRowStart    =    end    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	84	1	replace
57	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(buf.length  -  start);	  _currInputRowStart    =    end    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	84	1	replace
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  -  end);	  _currInputRowStart    =    end    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	84	1	replace
59	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  end);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  -  end);	  _currInputRowStart    =    end    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	84	1	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (_inputPtr  -  _origBufferLen);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputReowStart);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
61	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _origBufferLen);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  _origBufferLen);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputReowStart);    	compilable	  [FE]  AssertionFailedError  	77	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  end  -(start  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
63	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(start  +  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  end  -(start  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  start  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  start  -(start  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
65	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  start  -(start  +  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  start  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  start  -(start  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(end  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  end  -(end  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
67	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(end  +  _inputEnd);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end  -(end  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  end  -(end  +  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	66	1	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start);	  _currInputRowStart    =    start    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	33	1	replace
69	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start);	  _currInputRowStart    =    start    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	33	1	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  1);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
71	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  1);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
72	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1);  }  _currInputRowStart  =  start  -  (end  -  1);  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1);  }  _currInputRowStart  =  start  -  (end  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  1);  }  _currInputRowStart  =  start  -  (end  -  1);	  	non-compiled	[CE]  <identifier>  expected	62	None	add
73	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  1));  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  1));	  	non-compiled	[CE]  ';'  expected	62	None	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
75	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  int  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    int  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
77	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  int  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  int  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    int  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
78	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  -  start;	  	non-compiled	[CE]  ')'  expected	34	None	add
79	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  -  start));  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  -  start));	  	non-compiled	[CE]  ';'  expected	34	None	add
80	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  _inputBufferLen);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    int    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	46	None	replace
81	[BUG]  [BUGGY]  int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    int    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	46	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	86	1	add
83	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	86	1	add
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	86	1	add
85	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	86	1	add
86	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowEnt);  [CE]  cannot  find  symbol  _currInputRowEnt  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowEnt);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowEnt);	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnt	86	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  buf.length);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputEnd  -  buf.length);	  _currInputRowStart    =    buf.length    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
88	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  buf.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  buf.length);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  buf.length);	  _currInputRowStart    =    buf.length    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +(_inputEnd  -  buf.length);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  +(_inputEnd  -  buf.length);	  _currInputRowStart    =    buf.length    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
90	[BUG]  [BUGGY]  _currInputRowStart  =  start  +(_inputEnd  -  buf.length);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +(_inputEnd  -  buf.length);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  +(_inputEnd  -  buf.length);	  _currInputRowStart    =    buf.length    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
91	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowEnd  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
92	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  start  -  _inputEnd;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  start  -  _inputEnd;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
93	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  end  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputEnd;  _currInputRowEnd  =  end  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
94	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  1;  _currInputRowEnd  =  start  -  1;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  1;  _currInputRowEnd  =  start  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  1;  _currInputRowEnd  =  start  -  1;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
96	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
98	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
100	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
101	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStar  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStar  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStar	  	non-compiled	[CE]  ')'  expected	47	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
103	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
104	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	13	1	add
105	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	13	1	add
106	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    _currInputRowStart  =  _inputPtr  -(start  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	13	None	add
107	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowEnt);  [CE]  cannot  find  symbol  _currInputRowEnt  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowEnt);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowEnt);	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnt	13	None	add
108	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputLen);  [CE]  cannot  find  symbol  _currInputLen  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  _currInputRowStart  =  _inputPtr  -(start  -  _currInputLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    _currInputRowStart  =  _inputPtr  -(start  -  _currInputLen);	  	non-compiled	[CE]  cannot  find  symbol  _currInputLen	13	None	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
110	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
112	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
114	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	26	1	replace
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
116	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
117	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
118	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  -  end  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
120	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  -  end  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
122	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
123	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRow  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRow  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRow	  	non-compiled	[CE]  ')'  expected	40	None	add
124	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStar  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStar  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStar	  	non-compiled	[CE]  ')'  expected	40	None	add
125	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInput  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInput  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInput	  	non-compiled	[CE]  ')'  expected	40	None	add
126	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _	  	non-compiled	[CE]  ')'  expected	40	None	add
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	17	1	add
128	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	17	1	add
129	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  int  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  int  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    int  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	17	None	add
130	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  *  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  *  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    _currInputRowStart  =  start  -(_inputPtr  *  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	17	None	add
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	49	1	add
132	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	49	1	add
133	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    int  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	49	None	add
134	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	49	None	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  _origBufferLen);	  _currInputRowStart    =    start    -    (end    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
136	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _origBufferLen);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _origBufferLen);	  _currInputRowStart    =    start    -    (end    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  _inputEnd);	  _currInputRowStart    =    start    -    (end    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
138	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputEnd);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _inputEnd);	  _currInputRowStart    =    start    -    (end    -    _currInputPtr);    	compilable	  [FE]  AssertionFailedError  	57	1	replace
139	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputBufferLen);  [CE]  cannot  find  symbol  _inputBufferLen  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _inputBufferLen);	  _currInputRowStart    =    start    -    (end    -    _currInputPtr);    	non-compiled	[CE]  cannot  find  symbol  _inputBufferLen	57	None	replace
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
141	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
143	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  end  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  end  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
145	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  end  -  (end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  end  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  end  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	73	1	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  end);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
147	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  end);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  end);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
148	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  bottom);  [CE]  cannot  find  symbol  bottom  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  bottom);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  bottom);	  	non-compiled	[CE]  cannot  find  symbol  bottom	36	None	add
149	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  finish);  [CE]  cannot  find  symbol  finish  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  finish);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  finish);	  	non-compiled	[CE]  cannot  find  symbol  finish	36	None	add
150	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  begin);  [CE]  cannot  find  symbol  begin  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  begin);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  begin);	  	non-compiled	[CE]  cannot  find  symbol  begin	36	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	70	1	add
152	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	70	1	add
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  +  (_inputPtr  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    _currInputRowStart  =  start  +  (_inputPtr  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	70	1	add
154	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  +  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  +  (_inputPtr  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    _currInputRowStart  =  start  +  (_inputPtr  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	70	1	add
155	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd;	  	non-compiled	[CE]  ')'  expected	70	None	add
156	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start;    	non-compiled	[CE]  ')'  expected	31	None	replace
157	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start;    	non-compiled	[CE]  ')'  expected	31	None	replace
158	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    end    -(_inputEnd    -    start;    	non-compiled	[CE]  ')'  expected	31	None	replace
159	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
160	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
161	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    int  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
162	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	3	None	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -(end  -  _inputEnd);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
164	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(end  -  _inputEnd);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(end  -  start);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
166	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(end  -  start);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
167	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  start,  end);  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ",    start,    end);    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	7	1	add
168	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  start,  end);  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  start,  end);  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ",    start,    end);    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	7	1	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  +  1);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
170	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  +  1);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
171	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  +  1);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
172	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  +  1);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
173	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(buf,  start  +  _inputEnd);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(buf,  start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(buf,  start  +  _inputEnd);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	non-compiled	[CE]  ')'  expected	67	None	replace
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -(start  +  _inputEnd);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
175	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(start  +  _inputEnd);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(start  +  _inputEnd);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
176	[BUG]  [BUGGY]  _currInputRowStart  =  _endOfInput  -(_inputPtr  *  _currInputRowStart);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _endOfInput  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _endOfInput  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	18	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(start  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
178	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(start  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
180	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
181	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(_inputPtr  *  start);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(_inputPtr  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(_inputPtr  *  start);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
182	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
183	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
184	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
185	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
186	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  Integer  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  Integer  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    Integer  _inputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
187	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _origPtr);  [CE]  cannot  find  symbol  _origPtr  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _origPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _origPtr);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _origPtr	56	None	replace
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	50	1	replace
189	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	50	1	replace
190	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	75	1	add
191	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	75	1	add
192	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStar  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStar  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStar	  	non-compiled	[CE]  ')'  expected	75	None	add
193	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRow  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRow  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRow	  	non-compiled	[CE]  ')'  expected	75	None	add
194	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _	  	non-compiled	[CE]  ')'  expected	75	None	add
195	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart	  	non-compiled	[CE]  ')'  expected	75	None	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (_inputPtr  -  end);	  _currInputRowStart    =    start    -    (end    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	61	1	replace
197	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  end);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  end);	  _currInputRowStart    =    start    -    (end    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	61	1	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  _inputPtr  +  1);	  _currInputRowStart    =    start    -    (end    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	61	1	replace
199	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _inputPtr  +  1);	  _currInputRowStart    =    start    -    (end    -    _inputPtr);    	compilable	  [FE]  AssertionFailedError  	61	1	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  +  1);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
201	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  +  1);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
203	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  -  1);	  _currInputRowStart    =    start    -    (end    -    1);    	compilable	  [FE]  AssertionFailedError  	63	1	replace
205	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  -  1);	  _currInputRowStart    =    start    -    (end    -    1);    	compilable	  [FE]  AssertionFailedError  	63	1	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  buf.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  buf.length;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
207	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  buf.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  buf.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  buf.length;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
208	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  1;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
209	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  1;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  start  +  1;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
211	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start  +  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  start  +  1;	  _currInputRowStart    =    buf.length    -    start;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
212	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_currInputPtr  -  start);  [CE]  cannot  find  symbol  _currInputPtr  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_currInputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_currInputPtr  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	82	None	replace
213	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_currInputEnd  -  start);  [CE]  cannot  find  symbol  _currInputEnd  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_currInputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_currInputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	82	None	replace
214	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_currInputPtr  -  start);  [CE]  cannot  find  symbol  _currInputPtr  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_currInputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(_currInputPtr  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	82	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	compilable	  [FE]  AssertionFailedError  	82	1	replace
216	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	compilable	  [FE]  AssertionFailedError  	82	1	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
218	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
219	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start;	  	non-compiled	[CE]  ')'  expected	32	None	add
220	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start));  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start));	  	non-compiled	[CE]  ';'  expected	32	None	add
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  +(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  +(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
222	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  +(end  -  start);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  +(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  +(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _origBufferLen);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputReowStart);    	compilable	  [FE]  AssertionFailedError  	43	1	replace
224	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _origBufferLen);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _origBufferLen);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputReowStart);    	compilable	  [FE]  AssertionFailedError  	43	1	replace
225	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _icUTF8);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _icUTF8);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _icUTF8);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputReowStart);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	43	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(_currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	45	1	replace
227	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(_currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(_currInputRowStart);  _currInputRowStart  =  start  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	45	1	replace
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  (_currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  (_currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	45	1	replace
229	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  (_currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  (_currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  (_currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	45	1	replace
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(end  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
231	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(end  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(start  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
233	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(start  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(start  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
234	[BUG]  [BUGGY]  _currInputRowStart  =  _endOfInput  -(start  -  _currInputRowStart);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _endOfInput  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _endOfInput  -(start  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	14	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(start  -  1);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
236	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(start  -  1);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
238	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  end  -  start;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
239	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
240	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    ||  end  <  _currInputRowStart)  {  _currInputRowStart  =  end  -  start;  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
241	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start;  }  _currInputRowStart  =  end  -  start;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start;  }  _currInputRowStart  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  end  -  start;  }  _currInputRowStart  =  end  -  start;	  	non-compiled	[CE]  <identifier>  expected	21	None	add
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    start    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	28	1	replace
243	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart    =    start    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	28	1	replace
244	[BUG]  [BUGGY]  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    int    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	42	None	replace
245	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currentSecond);  [CE]  cannot  find  symbol  _currentSecond  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currentSecond);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  _currentSecond);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    int    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currentSecond	42	None	replace
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(_inputPtr  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
247	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(_inputPtr  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(start  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
249	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(start  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  (start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  (start  -  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
251	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  (start  -  _inputEnd);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  (start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  (start  -  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
252	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
253	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
255	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
257	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
259	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (this._currInputRowStart  -  end);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (this._currInputRowStart  -  end);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
261	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (this._currInputRowStart  -  end);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (this._currInputRowStart  -  end);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (this._currInputRowStart  -  end);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
262	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (this._currInputRowStart  -  this._currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (this._currInputRowStart  -  this._currInputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (this._currInputRowStart  -  this._currInputPtr);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	55	None	replace
263	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  _inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start);    	non-compiled	[CE]  ';'  expected	5	None	replace
264	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputPtr  -  start);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputPtr  -  start);	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start);    	non-compiled	[CE]  ';'  expected	5	None	replace
265	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  _inputEnd  -  start);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  _inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  _inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start);    	non-compiled	[CE]  ';'  expected	5	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputPtr;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  _inputPtr;	  _currInputRowStart    =    start    -    _inputEnd;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
267	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputPtr;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputPtr;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputPtr;	  _currInputRowStart    =    start    -    _inputEnd;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
268	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(start  -  end);  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(start  -  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(start  -  end);	  _currInputRowStart    =    _currInputProcessed    -(end    -    start);    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
269	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start  +  1);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(end  -  start  +  1);	  _currInputRowStart    =    _currInputProcessed    -(end    -    start);    	non-compiled	[CE]  possible  loss  of  precision	58	None	replace
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	74	1	replace
271	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	74	1	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputPtr    -(end    -    start);    _currInputRowStart  =  _inputPtr  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
273	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(end    -    start);    _currInputRowStart  =  _inputPtr  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  int  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputPtr    -(end    -    start);    int  _currInputRowStart  =  _inputPtr  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
275	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  int  _currInputRowStart  =  _inputPtr  -(end  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  int  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(end    -    start);    int  _currInputRowStart  =  _inputPtr  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	80	1	add
276	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(end    -    start);    _currInputRowStart  =  _inputPtr  -(end  -  start;	  	non-compiled	[CE]  ')'  expected	80	None	add
277	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  _currInputRowStart  =  _inputPtr  -(end  -  start));  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputPtr    -(end    -    start);    _currInputRowStart  =  _inputPtr  -(end  -  start));	  	non-compiled	[CE]  ';'  expected	80	None	add
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  end  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
279	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  end  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
281	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  int  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start);    int  _currInputRowStart  =  end  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
283	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  int  _currInputRowStart  =  end  -(end  -  start);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  int  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    int  _currInputRowStart  =  end  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
284	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  -  start;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  end  -(end  -  start;	  	non-compiled	[CE]  ')'  expected	83	None	add
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
286	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
287	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
288	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	27	1	add
289	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start;	  	non-compiled	[CE]  ')'  expected	27	None	add
290	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	27	None	add
291	[BUG]  [BUGGY]  _currInputRowStart  =  _inputLen  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _inputLen  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputLen  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputLen  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _inputLen	2	None	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
293	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
294	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start);	  	non-compiled	[CE]  ';'  expected	23	None	add
295	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  (_currInputRowStart  =  buf.length  -  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  (_currInputRowStart  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    (_currInputRowStart  =  buf.length  -  start;	  	non-compiled	[CE]  ')'  expected	23	None	add
296	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  begin;  [CE]  cannot  find  symbol  begin  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  begin;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  begin;	  	non-compiled	[CE]  cannot  find  symbol  begin	23	None	add
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
298	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
299	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    int  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	15	None	add
300	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	15	None	add
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
302	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  _inputEnd  -(_inputPtr  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	15	1	add
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	25	1	add
304	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	25	1	add
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	25	1	add
306	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	25	1	add
307	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;	  	non-compiled	[CE]  ')'  expected	25	None	add
308	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _inputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	25	None	add
309	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_currInputEnd  -  _currInputRowStart);  [CE]  cannot  find  symbol  _currInputEnd  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_currInputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_currInputEnd  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_currInputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	59	None	replace
310	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_currInputPtr  -  _origBufferLen);  [CE]  cannot  find  symbol  _currInputPtr  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_currInputPtr  -  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_currInputPtr  -  _origBufferLen);	  _currInputRowStart    =    start    -    (_currInputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	59	None	replace
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _origBufferLen;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  _origBufferLen;	  _currInputRowStart    =    length    -    start;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
312	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _origBufferLen;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _origBufferLen;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _origBufferLen;	  _currInputRowStart    =    length    -    start;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
313	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  length;  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  length;	  _currInputRowStart    =    length    -    start;    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
314	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");	  	compilable	  [FE]  JsonParseException  	9	1	add
315	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");	  	compilable	  [FE]  JsonParseException  	9	1	add
316	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  end);	  	compilable	  [FE]  JsonParseException  	9	1	add
317	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  end);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  end);	  	compilable	  [FE]  JsonParseException  	9	1	add
318	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  start);	  	compilable	  [FE]  JsonParseException  	9	1	add
319	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  start);  [FE]  JsonParseException  [FE]        JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf,  start);	  	compilable	  [FE]  JsonParseException  	9	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  end;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  end;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    begin;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
321	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  end;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  end;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  end;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    begin;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  end  -(start  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
323	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(start  -  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  end  -(start  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
324	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  start  -(start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  start  -(start  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
325	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  start  -(start  -  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  start  -(start  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  start  -(start  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  end  -(end  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
327	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(end  -  _inputEnd);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(end  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  end  -(end  -  _inputEnd);	  	compilable	  [FE]  AssertionFailedError  	38	1	add
328	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(start  -  _inputEnd;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  _currInputRowStart  =  end  -(start  -  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    -    _inputEnd);    _currInputRowStart  =  end  -(start  -  _inputEnd;	  	non-compiled	[CE]  ')'  expected	38	None	add
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
330	[BUG]  [BUGGY]  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputPtr  -  start);	  _currInputRowStart    =    _inputPtr    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	81	1	replace
332	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  -  start);	  _currInputRowStart    =    _inputPtr    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	81	1	replace
333	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(end  -  start  +  1);	  _currInputRowStart    =    _inputPtr    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	81	1	replace
334	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(end  -  start  +  1);	  _currInputRowStart    =    _inputPtr    -(end    -    start);    	compilable	  [FE]  AssertionFailedError  	81	1	replace
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputEnd  -  start  +  1);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    int    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
336	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputEnd  -  start  +  1);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    int    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
337	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
338	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	78	1	add
339	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (end  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	78	None	add
340	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputLen);  [CE]  cannot  find  symbol  _currInputLen  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (end  -  _currInputLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (end  -  _currInputLen);	  	non-compiled	[CE]  cannot  find  symbol  _currInputLen	78	None	add
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
342	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
343	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _inputRowStart  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	1	None	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  +  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  +  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
345	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  +  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  +  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  +  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
346	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputend  -  start;  [CE]  cannot  find  symbol  _inputend  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputend  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputend  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _inputend	1	None	add
347	[BUG]  [BUGGY]  _currInputRowStart  =  getInputEnd  -  start;  [CE]  cannot  find  symbol  getInputEnd  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  getInputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  getInputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    getInputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  getInputEnd	88	None	replace
348	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  getInputEnd  -  start;  [CE]  cannot  find  symbol  getInputEnd  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  getInputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  getInputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    getInputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  getInputEnd	88	None	replace
349	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [CE]  cannot  find  symbol  getInputEnd  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start;  _currInputRowStart  =  getInputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    getInputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  getInputEnd	88	None	replace
350	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [CE]  cannot  find  symbol  getInputEnd  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  getInputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    getInputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  getInputEnd	88	None	replace
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	87	1	replace
352	[BUG]  [BUGGY]  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	87	1	replace
353	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
354	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	52	1	add
355	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowEnd);  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowEnd);	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	52	None	add
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  end  -(end  *  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
357	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  *  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  end  -(end  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  end  -(end  *  start);	  	compilable	  [FE]  AssertionFailedError  	83	1	add
358	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start  +  1;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
359	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start  +  1;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start  +  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start  +  1;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  -  start  +  1);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
361	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  -  start  +  1);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  *  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  *  _inputEnd);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
363	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  *  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  *  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  *  _inputEnd);	  _currInputRowStart    =    end    -(start    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	39	1	replace
364	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputLen);  [CE]  cannot  find  symbol  _currInputLen  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputLen);	  	non-compiled	[CE]  cannot  find  symbol  _currInputLen	86	None	add
365	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart	  	non-compiled	[CE]  ')'  expected	40	None	add
366	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	45	None	replace
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(_inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
368	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(_inputEnd  -  start);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
369	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(start  -  _currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(start  -  _currInputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(start  -  _currInputPtr);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	16	None	replace
370	[BUG]  [BUGGY]  int  _currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  start  -  (_inputPtr  -  _inputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    int    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	46	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  2);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  2);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
372	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  2);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  -  (end  -  2);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  -  (end  -  2);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  1;	  _currInputRowStart    =    start    -    _inputEnd;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
374	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  1;	  _currInputRowStart    =    start    -    _inputEnd;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (start  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	50	1	replace
376	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (start  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (start  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	50	1	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  }	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
378	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  }	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  _inputPtr  -  _currInputRowStart;  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  _inputPtr  -  _currInputRowStart;  }	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
380	[BUG]  [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  _inputPtr  -  _currInputRowStart;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  _inputPtr  -  _currInputRowStart;  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	if(_endOfInput)  {  _currInputRowStart  =  start  -  _inputPtr;  _currInputRowStart  =  start  +  _inputPtr  -  _currInputRowStart;  }	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
381	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  start);  [CE]  long  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  start);	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	51	None	replace
382	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  _currInputProcessed.length;  [CE]  long  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  _currInputProcessed.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  _currInputProcessed.length;	  _currInputRowStart    =    _currInputProcessed.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	51	None	replace
383	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	9	1	add
384	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	9	1	add
385	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf);	  	compilable	  [FE]  JsonParseException  	9	1	add
386	[BUG]  [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf);  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ");  _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Input    end    (%d)    may    not    be    before    start    (%d)   ");    _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  buf);	  	compilable	  [FE]  JsonParseException  	9	1	add
387	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  start  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  start  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    int  start  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  start  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
388	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(buf.length  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
389	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(buf.length  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(buf.length  -  start  +  1);	  _currInputRowStart    =    end    -(end    -    start    +    1);    	compilable	  [FE]  AssertionFailedError  	65	1	replace
390	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  buf);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputEnd  -  buf);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputEnd  -  buf);	  _currInputRowStart    =    buf.length    -(_inputEnd    -    start);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	35	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  *  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
392	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  *  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  _currInputRowStart  =  buf.length  -(_inputEnd  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -(_inputEnd    -    start);    _currInputRowStart  =  buf.length  -(_inputEnd  *  start);	  	compilable	  [FE]  AssertionFailedError  	34	1	add
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
394	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  start  -  start;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
395	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  (_currInputRowStart  =  end  -  start;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  (_currInputRowStart  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    (_currInputRowStart  =  end  -  start;	  	non-compiled	[CE]  ')'  expected	21	None	add
396	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowEnd  =  end  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowEnd  =  end  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    _currInputRowEnd  =  end  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	21	None	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
398	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
399	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);	  	non-compiled	[CE]  ')'  expected	52	None	add
400	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start.-  _inputEnd;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  _currInputRowStart  =  start.-  _inputEnd;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    _inputEnd;    _currInputRowStart  =  start.-  _inputEnd;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
401	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  *  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  *  _inputPtr);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
402	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  *  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  *  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  *  _inputPtr);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
403	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputPtr  *  end);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
404	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  end);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputPtr  *  end);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
405	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowEnd  =  buf.length  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowEnd  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowEnd  =  buf.length  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	23	None	add
406	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
407	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    end);    _currInputRowStart  =  start  -(end  -  start);	  	compilable	  [FE]  AssertionFailedError  	36	1	add
408	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  int  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    int  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
409	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  int  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  int  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    int  _inputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
410	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end  -(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
411	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end  -(end  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end  -(end  +  1);	  	compilable	  [FE]  AssertionFailedError  	64	1	add
412	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  *  _currInputRowStart);  _currInputRowStart  =  start  -(end  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	74	1	replace
413	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  _currInputRowStart  =  start  -(end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  *  _currInputRowStart);  _currInputRowStart  =  start  -(end  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	74	1	replace
414	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  buf.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  buf.length;	  _currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	79	1	replace
415	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  buf.length;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  buf.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  buf.length;	  _currInputRowStart    =    buf.length    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	79	1	replace
416	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _parserFeatures);  [CE]  cannot  find  symbol  _parserFeatures  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _parserFeatures);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _parserFeatures);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _parserFeatures	56	None	replace
417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputPtr  *  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
418	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _inputEnd);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputPtr  *  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  -  _inputEnd  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputPtr  -  _inputEnd  +  1);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
420	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  -  _inputEnd  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  -  _inputEnd  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputPtr  -  _inputEnd  +  1);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
421	[BUG]  [BUGGY]  _currInputRowStart  =  start.length  -  buf.length;  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start.length  -  buf.length;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start.length  -  buf.length;	  _currInputRowStart    =    buf.length    -    start;    	non-compiled	[CE]  int  cannot  be  dereferenced	24	None	replace
422	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart	  	non-compiled	[CE]  ')'  expected	47	None	add
423	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  Integer  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  Integer  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    Integer  _inputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
424	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _inputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  _inputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    _inputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	15	None	add
425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  *  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
426	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  *  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start  -(end  *  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start  -(end  *  start);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  +  start);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
428	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  +  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  +  start);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
429	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart	  	non-compiled	[CE]  ')'  expected	54	None	add
430	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  start;  _currInputRowEnd  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
431	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start;  _currInputRowEnd  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	72	None	replace
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  +  start);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
433	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  +  start);	  _currInputRowStart    =    end    -(start    +    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	67	1	replace
434	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_currInputPtr  -  start);  [CE]  cannot  find  symbol  _currInputPtr  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_currInputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_currInputPtr  -  start);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	82	None	replace
435	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_currInputPtr  -  _inputEnd);  [CE]  cannot  find  symbol  _currInputPtr  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(_currInputPtr  -  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_currInputPtr  -  _inputEnd);	  _currInputRowStart    =    _inputEnd    -(_currInputPtr    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	82	None	replace
436	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
437	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  start;	  _currInputRowStart    =    length    -    start;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
439	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  start;	  _currInputRowStart    =    length    -    start;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    int    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	42	1	replace
441	[BUG]  [BUGGY]  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    int    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	42	1	replace
442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	int  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
443	[BUG]  [BUGGY]  int  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    int    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
445	[BUG]  [BUGGY]  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    int    _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	30	1	replace
446	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (end        -        _currInputRowStart);        _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  ((  end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	non-compiled	[CE]  ')'  expected	86	None	add
447	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start.length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start.length  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start.length  -  1;	  _currInputRowStart    =    start    -    (end    -    1);    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
448	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  if(_inputRowStart!=  _inputEnd)  {  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  }  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;  if(_inputRowStart!=  _inputEnd)  {  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        _currInputRowStart    =    _inputEnd    -    start;    if(_inputRowStart!=  _inputEnd)  {  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  }	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	1	None	add
449	[BUG]  [BUGGY]  _currInputStart  =  end  -  (end  -  start);  [CE]  cannot  find  symbol  _currInputStart  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputStart  =  end  -  (end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputStart  =  end  -  (end  -  start);	  _currInputRowStart    =    _currInputEnd    -    (end    -    start);    	non-compiled	[CE]  cannot  find  symbol  _currInputStart	89	None	replace
450	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  +(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  +(end  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	87	1	replace
451	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  +(end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  +(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start;  _currInputRowStart  =  start  +(end  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    +    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	87	1	replace
452	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  end  -(_inputPtr  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  end  -(_inputPtr  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	68	None	add
453	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end.-(end  -  start  +  1);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  _currInputRowStart  =  end.-(end  -  start  +  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start    +    1);    _currInputRowStart  =  end.-(end  -  start  +  1);	  	non-compiled	[CE]  <identifier>  expected	64	None	add
454	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_currInputPtr  -  _currInputRowStart);  [CE]  cannot  find  symbol  _currInputPtr  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(_currInputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(_currInputPtr  -  _currInputRowStart);	  _currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	69	None	replace
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(end  -  _currInputRowStart);	  _currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
456	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(end  -  _currInputRowStart);	  _currInputRowStart    =    end    -(_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	69	1	replace
457	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	75	None	add
458	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start.-(end  -  start);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  _currInputRowStart  =  start.-(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -(end    -    start);    _currInputRowStart  =  start.-(end  -  start);	  	non-compiled	[CE]  <identifier>  expected	32	None	add
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  +  (end  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  +  (end  -  1);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
460	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  +  (end  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  _currInputRowStart  =  start  +  (end  -  1);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    1);    _currInputRowStart  =  start  +  (end  -  1);	  	compilable	  [FE]  AssertionFailedError  	62	1	add
461	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  _currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -(end  -  _currInputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(end  -  _currInputPtr);	  _currInputRowStart    =    _inputEnd    -(_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	16	None	replace
462	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  if(end  <  =  0)  {  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);  if(end  <  =  0)  {  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    start    -(_inputEnd    -    start);    if(end  <  =  0)  {  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
463	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  }  _currInputRowStart  =  buf.length  -  start;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  }  _currInputRowStart  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start;  }  _currInputRowStart  =  buf.length  -  start;	  	non-compiled	[CE]  <identifier>  expected	23	None	add
464	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [CE]  cannot  find  symbol  icUTF8  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_NAMES;	  	non-compiled	[CE]  cannot  find  symbol  icUTF8	23	None	add
465	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [CE]  cannot  find  symbol  icUTF8  [FE]        AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    _currInputRowStart  =  buf.length  -  start;  this.icUTF8  =  FEAT_MASK_ALLOW_UNQUOTED_COMMENTS;	  	non-compiled	[CE]  cannot  find  symbol  icUTF8	23	None	add
466	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  ||  buf.length  >  end)  {  _currInputRowStart  =  buf.length  -  start;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  start;  ||  buf.length  >  end)  {  _currInputRowStart  =  buf.length  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    start;    ||  buf.length  >  end)  {  _currInputRowStart  =  buf.length  -  start;	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
467	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _inputStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
468	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputEnd  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _inputEnd  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        int    _currInputRowStart    =    end    -(_inputEnd    -    start);    int  _inputEnd  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	29	None	add
469	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputLen);  [CE]  cannot  find  symbol  _currInputLen  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputLen);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputLen	53	None	replace
470	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  length  -(end  -  start);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  _currInputRowStart  =  length  -(end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(end    -    start);    _currInputRowStart  =  length  -(end  -  start);	  	non-compiled	[CE]  cannot  find  symbol  length	83	None	add
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    begin;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
472	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start;  _currInputRowStart  =  _inputEnd  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart    =    _inputEnd    -    begin;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
473	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputPtr);  _currInputRowStart  =  start  -  (end  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputPtr  [FE]        AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputPtr);  _currInputRowStart  =  start  -  (end  -  _currInputReowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputPtr);  _currInputRowStart  =  start  -  (end  -  _currInputReowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    -    (_inputPtr    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	77	None	replace
474	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (end  -  _currInputPtr);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	43	None	replace
475	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputBufferLen);  [CE]  cannot  find  symbol  _currInputBufferLen  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (end  -  _currInputBufferLen);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputBufferLen	43	None	replace
476	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputBuffer.length  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputBuffer.length  -(start  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
477	[BUG]  [BUGGY]  _currInputRowStart  =  _inputBuffer.length  -(start  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputBuffer.length  -(start  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputBuffer.length  -(start  -  _currInputRowStart);	  _currInputRowStart    =    _inputPtr    -(start    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
478	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputBufferLen);  [CE]  cannot  find  symbol  _currInputBufferLen  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputBufferLen);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputBufferLen	56	None	replace
479	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputEnd);  [CE]  cannot  find  symbol  _currInputEnd  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputEnd);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    _currInputReowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	56	None	replace
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
481	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -  start;  _currInputRowStart  =  start  +(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart    =    start    +    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	48	1	replace
482	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  (start  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -  (start  -  _inputPtr);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
483	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  (start  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  (start  -  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  (start  -  _inputPtr);	  _currInputRowStart    =    start    -    (_inputPtr    -    _inputEnd);    	compilable	  [FE]  AssertionFailedError  	71	1	replace
484	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  start;  _currInputRowStart  =  end  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -    start;    _currInputRowStart  =  end  -  start);	  	non-compiled	[CE]  ';'  expected	21	None	add
485	[BUG]  [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _inputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _inputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        start        -        (_inputPtr        -        _currInputRowStart);        _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _inputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	44	None	add
486	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end.-(start  +  _inputEnd);  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  _currInputRowStart  =  end.-(start  +  _inputEnd);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(start    +    _inputEnd);    _currInputRowStart  =  end.-(start  +  _inputEnd);	  	non-compiled	[CE]  <identifier>  expected	66	None	add
487	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  +  end);  [CE]  cannot  find  symbol  _currInputEnd  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  +  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  +  end);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	76	None	replace
488	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
489	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    +    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	76	1	replace
490	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  -  _currInputRowStart);  [CE]  cannot  find  symbol  _currInputEnd  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_currInputEnd  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	41	None	replace
491	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	41	1	replace
492	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputEnd  -  start);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	41	1	replace
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -  1;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
494	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputEnd  -  1;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -  1;	  _currInputRowStart    =    _inputEnd    -    start;    int    _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
495	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_reportError( "Too  few  inputs  available:  can  not  feed  more  input ");	          _reportError(   "Already    closed,    can    not    feed    more    input       ");    	compilable	  [FE]  JsonParseException  	12	1	replace
496	[BUG]  [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [FE]  JsonParseException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _reportError( "Too  few  inputs  available:  can  not  feed  more  input ");  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_reportError( "Too  few  inputs  available:  can  not  feed  more  input ");	          _reportError(   "Already    closed,    can    not    feed    more    input       ");    	compilable	  [FE]  JsonParseException  	12	1	replace
497	[BUG]  [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [CE]  cannot  find  symbol  _inputRowStart  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        buf.length        -        (_inputEnd        -        _currInputRowStart);        _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _inputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	non-compiled	[CE]  cannot  find  symbol  _inputRowStart	40	None	add
498	[BUG]  [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _inputEnd  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;  int  _inputEnd  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        _inputEnd        -        start;        int    _currInputRowStart    =    _inputEnd    -    start;    int  _inputEnd  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;	  	non-compiled	[CE]  variable  _currInputRowStart  is  already  defined  in  method  feedInput(byte[],int,int)	3	None	add
499	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputEnd  -  (_currInputPtr  -  start);  [CE]  cannot  find  symbol  _currInputEnd  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputEnd  -  (_currInputPtr  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputEnd  -  (_currInputPtr  -  start);	  _currInputRowStart    =    start    -    (_currInputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	59	None	replace
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(end  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
501	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  *  _currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(end  *  _currInputRowStart);	  _currInputRowStart    =    start    -(_inputPtr    *    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	18	1	replace
502	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  _inputPtr);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  _inputPtr);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(end  -  start,  _inputPtr);	  _currInputRowStart    =    _currInputProcessed    -(end    -    start);    	non-compiled	[CE]  ')'  expected	58	None	replace
503	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  end);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  end);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(end  -  start,  end);	  _currInputRowStart    =    _currInputProcessed    -(end    -    start);    	non-compiled	[CE]  ')'  expected	58	None	replace
504	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  _origBufferLen);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start,  _origBufferLen);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(end  -  start,  _origBufferLen);	  _currInputRowStart    =    _currInputProcessed    -(end    -    start);    	non-compiled	[CE]  ')'  expected	58	None	replace
505	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  (start  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  (start  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
506	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  (start  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart  =  end  -  (start  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  (start  -  this._currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart    =    start    -    (end    -    this._currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	55	1	replace
507	[BUG]  [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  length  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]  _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  length  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart        =        end        -(_inputEnd        -        start);        _currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  length  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	non-compiled	[CE]  cannot  find  symbol  length	25	None	add
508	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
509	[BUG]  [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]    com.fasterxml.jackson.core.JsonParseException:  Already  closed    [CONTEXT]      _reportError(     "Input  end  (%d)  may  not  be  before  start  (%d)     ",  end,  start);  }  if  (_endOfInput)  {  _reportError(     "Already  closed,  can  not  feed  more  input     ");  }  _currInputProcessed  +=  _origBufferLen;        [BUGGY]          _reportError(   "Already  closed,  can  not  feed  more  input     ");  if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }  [BUGGY]        _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	                _reportError(   "Already    closed,    can    not    feed    more    input       ");    if(_endOfInput)  {  _reportError( "Already  closed,  can  not  feed  more  input   ");  }	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already    closed  	11	1	add
