bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
2	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
4	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  int  _currInputRowStart  =  _inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    int  _currInputRowStart  =  _inputEnd  -  start;	  	compilable	  [FE]  AssertionFailedError  	5	1	add
5	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  start);	  	non-compiled	[CE]  ';'  expected	5	None	add
6	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  begin;  [CE]  cannot  find  symbol  begin  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  _inputEnd  -  begin;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  _inputEnd  -  begin;	  	non-compiled	[CE]  cannot  find  symbol  begin	5	None	add
7	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	        _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	7	1	add
8	[BUG]  [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [FE]  JsonParseException  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	        _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ",  start,  end);	  	compilable	  [FE]  JsonParseException  	7	1	add
9	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	        _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");	  	compilable	  [FE]  JsonParseException  	7	1	add
10	[BUG]  [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [FE]  JsonParseException  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	        _reportError( "Input  end  (%d)  may  not  be  before  start  (%d) ");	  	compilable	  [FE]  JsonParseException  	7	1	add
11	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	        _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	7	1	add
12	[BUG]  [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input   ");  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]      _reportError( "Already  closed,  can  not  feed  more  input   ");  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	        _reportError( "Already  closed,  can  not  feed  more  input   ");	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Already  closed  	7	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
14	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(start  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
16	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
18	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(_inputPtr  *  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  _inputEnd;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
20	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  _inputEnd;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  _inputEnd;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
22	[BUG]  [BUGGY]  _currInputRowStart  =  end  -  start;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
24	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  start;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
26	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
28	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  start  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  start  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
30	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  int  _currInputRowStart  =  end  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputEnd    -    start);    int  _currInputRowStart  =  end  -(_inputEnd  -  start);	  	compilable	  [FE]  AssertionFailedError  	9	1	add
31	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputEnd  -  start);  _currInputRowStart  =  end  -(_inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    end    -(_inputEnd    -    start);    _currInputRowStart  =  end  -(_inputEnd  -  start;	  	non-compiled	[CE]  ')'  expected	9	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
33	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
35	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -(_inputEnd  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -(_inputEnd  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -(end  -  end);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
37	[BUG]  [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -(end  -  end);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -(end  -  end);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  -  _inputEnd);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
39	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(start  -  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  -  _inputEnd);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
41	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
42	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    int  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	3	None	add
43	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputReowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	3	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
45	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
46	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [CE]  variable  _currInputRowStart  might  not  have  been  initialized  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    int  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);	  	non-compiled	[CE]  variable  _currInputRowStart  might  not  have  been  initialized	1	None	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
48	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  +  (_inputPtr  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
50	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
51	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _currInputRowStart);  [CE]  long  cannot  be  dereferenced  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed.length  -  (_inputEnd  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	non-compiled	[CE]  long  cannot  be  dereferenced	4	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
53	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
55	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  this._currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
56	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  -  _currInputReowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	11	None	add
57	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputPtr);  [CE]  cannot  find  symbol  _currInputPtr  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputPtr);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _currInputPtr);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	12	None	replace
58	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start);  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _currInputProcessed  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputProcessed  -(end  -  start);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
59	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_currInputPtr  -  _currInputRowStart);  [CE]  cannot  find  symbol  _currInputPtr  [FE]        AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_currInputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_currInputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	12	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  _inputPtr);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
61	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _inputPtr);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  _inputPtr);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (end  -  1);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
63	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  1);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (end  -  1);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	12	1	replace
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
65	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(end  -  start  +  1);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(end  -  start  +  1);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(start  +  _inputEnd);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
67	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(start  +  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(start  +  _inputEnd);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
69	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(_inputPtr  -  _currInputRowStart);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
71	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  start  -  (_inputPtr  -  _inputEnd);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
72	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [CE]  cannot  find  symbol  _currInputRowEnd  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowEnd  =  _inputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowEnd  =  _inputEnd  -  start;	  	non-compiled	[CE]  cannot  find  symbol  _currInputRowEnd	5	None	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
74	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  -  (end  *  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  -  (end  *  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
76	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (_inputEnd  -  _currInputRowStart);  _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    _currInputRowStart  =  buf.length  -  (_inputEnd  +  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	3	1	add
77	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputReowStart);  [CE]  cannot  find  symbol  _currInputReowStart  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputRowStart);  _currInputRowStart  =  start  -  (_inputPtr  -  _currInputReowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    _currInputRowStart  =  start  -  (_inputPtr  -  _currInputReowStart);	  	non-compiled	[CE]  cannot  find  symbol  _currInputReowStart	1	None	add
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
79	[BUG]  [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  buf.length  -  (end  -  _currInputRowStart);	  _currInputRowStart    =    buf.length    -    (_inputEnd    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	4	1	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  _inputPtr  -(end  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
81	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputPtr  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputPtr  -(end  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
82	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -(_currInputPtr  -  start);  [CE]  cannot  find  symbol  _currInputPtr  [FE]      AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -(_currInputPtr  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _inputEnd  -(_currInputPtr  -  start);	  _currInputRowStart    =    start    -    (_inputPtr    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputPtr	2	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart  =  end  -(end  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
84	[BUG]  [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  end  -(end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  end  -(end  -  start);	  _currInputRowStart    =    end    -(_inputEnd    -    start);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
85	[BUG]  [BUGGY]  _currInputRowStart  =  length  -  start;  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  length  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  length  -  start;	  _currInputRowStart    =    _inputEnd    -    start;    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	add	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
87	[BUG]  [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  start  -  (end  -  _currInputRowStart);  _currInputRowStart  =  start  +  (end  -  _currInputRowStart);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    start    -    (end    -    _currInputRowStart);    _currInputRowStart  =  start  +  (end  -  _currInputRowStart);	  	compilable	  [FE]  AssertionFailedError  	11	1	add
88	[BUG]  [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [CE]  cannot  find  symbol  getInputEnd  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _inputEnd  -  start;  _currInputRowStart  =  getInputEnd  -  start;  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart    =    _inputEnd    -    start;    _currInputRowStart  =  getInputEnd  -  start;	  	non-compiled	[CE]  cannot  find  symbol  getInputEnd	5	None	add
89	[BUG]  [BUGGY]  _currInputRowStart  =  _currInputEnd  -  (end  -  start);  [CE]  cannot  find  symbol  _currInputEnd  [FE]    AssertionFailedError    [CONTEXT]    _reportError(   "Input  end  (%d)  may  not  be  before  start  (%d)   ",  end,  start);  }  if  (_endOfInput)  {  _reportError(   "Already  closed,  can  not  feed  more  input   ");  }  _currInputProcessed  +=  _origBufferLen;      [BUGGY]  _currInputRowStart  =  _currInputEnd  -  (end  -  start);  [BUGGY]      _inputBuffer  =  buf;  _inputPtr  =  start;  _inputEnd  =  end;  _origBufferLen  =  end  -  start;  }  [CLASS]  NonBlockingJsonParser  [METHOD]  feedInput  [RETURN_TYPE]  void  byte[]  buf  int  start  int  end  [VARIABLES]  byte[]  _inputBuffer  buf  int[]  _icLatin1  _icUTF8  boolean  int  FEAT_MASK_ALLOW_JAVA_COMMENTS  FEAT_MASK_ALLOW_MISSING  FEAT_MASK_ALLOW_SINGLE_QUOTES  FEAT_MASK_ALLOW_UNQUOTED_NAMES  FEAT_MASK_ALLOW_YAML_COMMENTS  FEAT_MASK_LEADING_ZEROS  FEAT_MASK_TRAILING_COMMA  _origBufferLen  end  parserFeatures  start  	projects/JacksonCore26/src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	1.0	105	105	1	replace	_currInputRowStart  =  _currInputEnd  -  (end  -  start);	  _currInputRowStart    =    start    -    (end    -    _currInputRowStart);    	non-compiled	[CE]  cannot  find  symbol  _currInputEnd	12	None	replace
